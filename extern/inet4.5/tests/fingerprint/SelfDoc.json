{
 "ned": {
  "inet.applications.dhcp.DhcpClient": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::DhcpClient::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta",
     "function": "inet::DhcpClient::receiveSignal",
     "info": "l2Associated"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::DhcpMessage"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::DhcpMessage"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1 (inet::DhcpTimerType::WAIT_OFFER)",
     "ctrl": "",
     "tags": [],
     "msgname": "DHCP Timeout",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3 (inet::DhcpTimerType::T1)",
     "ctrl": "",
     "tags": [],
     "msgname": "TN Timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "4 (inet::DhcpTimerType::T2)",
     "ctrl": "",
     "tags": [],
     "msgname": "TN Timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "5 (inet::DhcpTimerType::LEASE_TIMEOUT)",
     "ctrl": "",
     "tags": [],
     "msgname": "Lease Timeout",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "6 (inet::DhcpTimerType::START_DHCP)",
     "ctrl": "",
     "tags": [],
     "msgname": "Starting DHCP",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.dhcp.DhcpServer": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::DhcpServer::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::DhcpMessage"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::DhcpMessage"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "Start DHCP server",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.ethernet.EtherAppClient": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EtherAppReq"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "100",
     "ctrl": "",
     "tags": [],
     "msgname": "generateNextPacket",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "101",
     "ctrl": "",
     "tags": [],
     "msgname": "generateNextPacket",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::Ieee802SapReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::Ieee802SapReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.applications.ethernet.EtherAppServer": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EtherAppResp"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EtherAppReq"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::Ieee802SapReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::Ieee802SapReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ieee802SapInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    }
   ]
  },
  "inet.applications.ethernet.EtherTrafGen": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "100",
     "ctrl": "",
     "tags": [],
     "msgname": "generateNextPacket",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "101",
     "ctrl": "",
     "tags": [],
     "msgname": "generateNextPacket",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::Ieee802SapReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    }
   ]
  },
  "inet.applications.generic.IpvxTrafGen": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "100",
     "ctrl": "",
     "tags": [],
     "msgname": "sendTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "101",
     "ctrl": "",
     "tags": [],
     "msgname": "sendTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::L3AddressReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.generic.IpvxTrafSink": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::L3AddressReq"
    }
   ]
  },
  "inet.applications.netperfmeter.NetPerfMeter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "14 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_FULL)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "15 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_ABATED)",
     "ctrl": "",
     "tags": [
      "inet::SctpSendQueueAbatedReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "22 (inet::SctpStatusInd::SCTP_I_AVAILABLE)",
     "ctrl": "",
     "tags": [
      "inet::SctpAvailableReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::SctpStatusInd::SCTP_I_DATA_NOTIFICATION)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
     "ctrl": "",
     "tags": [
      "inet::SctpConnectReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::SctpStatusInd::SCTP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SctpRcvReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "9 (inet::SctpCommandCode::SCTP_C_SEND_ORDERED)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "12 (inet::SctpCommandCode::SCTP_C_QUEUE_BYTES_LIMIT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpInfoReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::SctpCommandCode::SCTP_C_ASSOCIATE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "25 (inet::SctpCommandCode::SCTP_C_ACCEPT_SOCKET_ID)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpAvailableReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::SctpCommandCode::SCTP_C_OPEN_PASSIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
     "ctrl": "inet::UdpConnectCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "8 (inet::TcpCommandCode::TCP_C_QUEUE_BYTES_LIMIT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::NetPerfMeterTransmitTimer",
     "kind": "5",
     "ctrl": "",
     "tags": [],
     "msgname": "TransmitTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "ConnectTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "StartTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "ResetTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpAvailableReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpInfoReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpOpenReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpSendReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpConnectReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpRcvReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpAvailableReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpCommandReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpConnectReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpSendQueueAbatedReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.pingapp.PingApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::power::SimpleEpEnergyManagement::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::PingApp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::PingApp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::PingApp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "1",
     "ctrl": "inet::Ipv4SocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "srcModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "srcModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "srcModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "srcModule": "inet.networklayer.wiseroute.WiseRoute"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::Ipv4SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::Ipv6SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3",
     "ctrl": "inet::Ipv4SocketCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::EchoPacket"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::IcmpEchoRequest"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Icmpv6EchoRequestMsg"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::EchoPacket"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::IcmpHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Icmpv6Header"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1001 (inet::PingSelfKinds::PING_FIRST_ADDR)",
     "ctrl": "",
     "tags": [],
     "msgname": "sendPing",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1002 (inet::PingSelfKinds::PING_CHANGE_ADDR)",
     "ctrl": "",
     "tags": [],
     "msgname": "sendPing",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1003 (inet::PingSelfKinds::PING_SEND)",
     "ctrl": "",
     "tags": [],
     "msgname": "sendPing",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.applications.rtpapp.RtpApplication": {
   "INPUT": [
    {
     "gate": "rtpIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSenderModuleCreated",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "rtpIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSenderStatus",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "rtpIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSessionEntered",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "rtpIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSessionLeft",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "rtpOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiCreateSenderModule",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "rtpOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiEnterSession",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "rtpOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiLeaveSession",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "rtpOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSenderControl",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.Rtp"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1 (inet::RtpAppSelfMsgKinds::RTPAPP_ENTER_SESSION)",
     "ctrl": "",
     "tags": [],
     "msgname": "enterSession",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2 (inet::RtpAppSelfMsgKinds::RTPAPP_START_TRANSMISSION)",
     "ctrl": "",
     "tags": [],
     "msgname": "startTransmission",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3 (inet::RtpAppSelfMsgKinds::RTPAPP_STOP_TRANSMISSION)",
     "ctrl": "",
     "tags": [],
     "msgname": "stopTransmission",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "4 (inet::RtpAppSelfMsgKinds::RTPAPP_LEAVE_SESSION)",
     "ctrl": "",
     "tags": [],
     "msgname": "leaveSession",
     "context": ""
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.sctpapp.SctpClient": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "12 (inet::SctpStatusInd::SCTP_I_SEND_MSG)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
     "ctrl": "",
     "tags": [
      "inet::SctpConnectReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "5 (inet::SctpStatusInd::SCTP_I_CLOSED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "3 (inet::SctpCommandCode::SCTP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "13 (inet::SctpCommandCode::SCTP_C_QUEUE_MSGS_LIMIT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpInfoReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "14 (inet::SctpCommandCode::SCTP_C_SHUTDOWN)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::SctpCommandCode::SCTP_C_ASSOCIATE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::SctpCommandCode::SCTP_C_CLOSE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BytesChunk"
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "CliAppTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "CliAppTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "5",
     "ctrl": "",
     "tags": [],
     "msgname": "StopTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpCommandReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpInfoReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpOpenReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpSendReq"
    },
    {
     "tagAction": "findTagForUpdate",
     "tagType": "inet::SctpSendReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpConnectReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.applications.sctpapp.SctpServer": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "10 (inet::SctpStatusInd::SCTP_I_ABORT)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "13 (inet::SctpStatusInd::SCTP_I_SHUTDOWN_RECEIVED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "22 (inet::SctpStatusInd::SCTP_I_AVAILABLE)",
     "ctrl": "",
     "tags": [
      "inet::SctpAvailableReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::SctpStatusInd::SCTP_I_DATA_NOTIFICATION)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
     "ctrl": "",
     "tags": [
      "inet::SctpConnectReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::SctpStatusInd::SCTP_I_PEER_CLOSED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "5 (inet::SctpStatusInd::SCTP_I_CLOSED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::SctpStatusInd::SCTP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SctpRcvReq",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "15 (inet::SctpCommandCode::SCTP_C_NO_OUTSTANDING)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "25 (inet::SctpCommandCode::SCTP_C_ACCEPT_SOCKET_ID)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpAvailableReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::SctpCommandCode::SCTP_C_OPEN_PASSIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpAvailableReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpCommandReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpOpenReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpSendReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpCommandReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpRcvReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpAvailableReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpConnectReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.applications.tcpapp.TcpBasicClientApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::GenericAppMsg"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.tcpapp.TcpClientSocketIo": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "trafficIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.tcpapp.TcpEchoApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ]
  },
  "inet.applications.tcpapp.TcpGenericServerApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::GenericAppMsg"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.applications.tcpapp.TcpServerListener": {
   "CALL": [
    {
     "call to": "inet.applications.tcpapp.TcpServerSocketIo",
     "function": "inet::TcpServerSocketIo::acceptSocket",
     "info": "acceptSocket"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.applications.tcpapp.TcpServerSocketIo": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.applications.tcpapp.TcpServerListener",
     "function": "inet::TcpServerSocketIo::acceptSocket",
     "info": "acceptSocket"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "trafficIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "trafficIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.MarkovScheduler"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.applications.tcpapp.TcpSessionApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ApplicationPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.applications.tcpapp.TcpSinkApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.applications.tcpapp.TelnetApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::TelnetApp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::GenericAppMsg"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.applications.tunapp.TunnelApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "srcModule": "inet.linklayer.tun.Tun"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TunCommandCode::TUN_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.tun.Tun"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TunCommandCode::TUN_C_OPEN)",
     "ctrl": "inet::TunOpenCommand",
     "tags": [
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.tun.Tun"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
     "ctrl": "inet::UdpConnectCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::TransportProtocolInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.udpapp.UdpBasicApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::UdpBasicApp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ApplicationPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "sendTimer",
     "context": ""
    },
    {
     "msg": "inet::ClockEvent",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "sendTimer",
     "context": ""
    },
    {
     "msg": "inet::ClockEvent",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "sendTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.applications.udpapp.UdpBasicBurst": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::UdpBasicBurst::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ApplicationPacket"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "UDPBasicBurstTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "UDPBasicBurstTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "UDPBasicBurstTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.applications.udpapp.UdpEchoApp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L4PortInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.udpapp.UdpSink": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpLeaveMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "UDPSinkTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "UDPSinkTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.udpapp.UdpSocketIo": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "trafficIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "trafficIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "gate": "trafficIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.MarkovScheduler"
    },
    {
     "gate": "trafficIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
     "ctrl": "inet::UdpConnectCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.flow.FlowMeasurementRecorder"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "trafficOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.udpapp.UdpVideoStreamClient": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::UdpVideoStreamClient::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "UDPVideoStreamStart",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.udpapp.UdpVideoStreamServer": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "VideoStreamTmr",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L4PortInd"
    }
   ]
  },
  "inet.applications.voip.SimpleVoipReceiver": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::SimpleVoipPacket"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "selfTalkspurtFinished",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.applications.voip.SimpleVoipSender": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SimpleVoipPacket"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "selfSender",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "selfSource",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.applications.voipstream.VoipStreamReceiver": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::VoipStreamPacket"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::VoipStreamPacket"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L4PortInd"
    }
   ]
  },
  "inet.applications.voipstream.VoipStreamSender": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.emulation.transportlayer.udp.ExtLowerUdp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.emulation.transportlayer.udp.ExtLowerUdp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::VoipStreamPacket"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "SILENCE",
     "context": ""
    },
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "VOICE",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "sendVoIP",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.clock.model.OscillatorBasedClock": {
   "CALLED": [
    {
     "call from": "inet.clock.oscillator.RandomDriftOscillator",
     "function": "inet::OscillatorBasedClock::receiveSignal",
     "info": "postOscillatorStateChanged"
    },
    {
     "call from": "inet.clock.oscillator.RandomDriftOscillator",
     "function": "inet::OscillatorBasedClock::receiveSignal",
     "info": "preOscillatorStateChanged"
    }
   ]
  },
  "inet.clock.model.SettableClock": {
   "CALL": [
    {
     "call to": "inet.clock.model.SettableClock",
     "function": "inet::SettableClock::setClockTime",
     "info": "setClockTime"
    },
    {
     "call to": "inet.clock.oscillator.ConstantDriftOscillator",
     "function": "inet::ConstantDriftOscillator::setTickOffset",
     "info": "setTickOffset"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.clock.model.SettableClock",
     "function": "inet::SettableClock::setClockTime",
     "info": "setClockTime"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::SettableClock::processCommand",
     "info": "processCommand"
    },
    {
     "call from": "inet.linklayer.ieee8021as.Gptp",
     "function": "inet::SettableClock::setClockTime",
     "info": "setClockTime"
    }
   ]
  },
  "inet.clock.oscillator.ConstantDriftOscillator": {
   "CALLED": [
    {
     "call from": "inet.clock.model.SettableClock",
     "function": "inet::ConstantDriftOscillator::setTickOffset",
     "info": "setTickOffset"
    }
   ]
  },
  "inet.clock.oscillator.RandomDriftOscillator": {
   "CALL": [
    {
     "call to": "inet.clock.model.OscillatorBasedClock",
     "function": "inet::OscillatorBasedClock::receiveSignal",
     "info": "postOscillatorStateChanged"
    },
    {
     "call to": "inet.clock.model.OscillatorBasedClock",
     "function": "inet::OscillatorBasedClock::receiveSignal",
     "info": "preOscillatorStateChanged"
    },
    {
     "call to": "inet.clock.oscillator.RandomDriftOscillator",
     "function": "inet::RandomDriftOscillator::setDriftRate",
     "info": "setDriftRate"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.clock.oscillator.RandomDriftOscillator",
     "function": "inet::RandomDriftOscillator::setDriftRate",
     "info": "setDriftRate"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ChangeTimer",
     "context": ""
    }
   ]
  },
  "inet.common.lifecycle.NodeStatus": {
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NodeStatus::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::NodeStatus::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::NodeStatus::handleOperationStage",
     "info": "handleOperationStage"
    }
   ]
  },
  "inet.common.MessageDispatcher": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyService",
     "info": "handleRegisterAnyService"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.common.ExampleQosClassifier",
     "function": "inet::ExampleQosClassifier::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.common.ExampleQosClassifier",
     "function": "inet::ExampleQosClassifier::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.common.QosClassifier",
     "function": "inet::QosClassifier::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.common.QosClassifier",
     "function": "inet::QosClassifier::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::EthernetEncapsulation::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::EthernetEncapsulation::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::EthernetEncapsulation::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ethernet.common.PacketDirectionReverser",
     "function": "inet::PacketDirectionReverser::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
     "function": "inet::EthernetFcsChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
     "function": "inet::EthernetMacHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker",
     "function": "inet::Ieee8021qTagEpdHeaderChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
     "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::Ieee8022Llc::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::Ieee8022Llc::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.virtual.VirtualInterface",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.vlan.VlanIndFilter",
     "function": "inet::VlanIndFilter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.networklayer.flooding.Flooding",
     "function": "inet::Flooding::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.flooding.Flooding",
     "function": "inet::Flooding::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.icmpv6.Icmpv6",
     "function": "inet::Icmpv6::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.icmpv6.Icmpv6",
     "function": "inet::Icmpv6::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.ipv4.Icmp",
     "function": "inet::Icmp::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.ipv4.Icmp",
     "function": "inet::Icmp::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.mpls.Mpls",
     "function": "inet::Mpls::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.mpls.Mpls",
     "function": "inet::Mpls::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopForwarding::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopForwarding::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
     "function": "inet::AdaptiveProbabilisticBroadcast::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
     "function": "inet::AdaptiveProbabilisticBroadcast::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
     "function": "inet::ProbabilisticBroadcast::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
     "function": "inet::ProbabilisticBroadcast::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.wiseroute.WiseRoute",
     "function": "inet::WiseRoute::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.wiseroute.WiseRoute",
     "function": "inet::WiseRoute::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.applications.dhcp.DhcpClient",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.dhcp.DhcpServer",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.ethernet.EtherAppClient",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.ethernet.EtherAppServer",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.generic.IpvxTrafGen",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.generic.IpvxTrafGen",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.applications.generic.IpvxTrafSink",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.applications.netperfmeter.NetPerfMeter",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.pingapp.PingApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.sctpapp.SctpClient",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.sctpapp.SctpServer",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpBasicClientApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpClientSocketIo",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpEchoApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpGenericServerApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpServerListener",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpServerSocketIo",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpSessionApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TcpSinkApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tcpapp.TelnetApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.tunapp.TunnelApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.udpapp.UdpBasicApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.udpapp.UdpBasicBurst",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.udpapp.UdpEchoApp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.udpapp.UdpSink",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.udpapp.UdpSocketIo",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.udpapp.UdpVideoStreamClient",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.udpapp.UdpVideoStreamServer",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.voip.SimpleVoipReceiver",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.voip.SimpleVoipSender",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.voipstream.VoipStreamReceiver",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.applications.voipstream.VoipStreamSender",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyService",
     "info": "handleRegisterAnyService"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.acking.AckingWirelessInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.bmac.BMacInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.common.WirelessInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacRelayUnit",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacRelayUnit",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacRelayUnit",
     "function": "inet::MessageDispatcher::handleRegisterAnyService",
     "info": "handleRegisterAnyService"
    },
    {
     "call from": "inet.linklayer.ethernet.common.PacketDirectionReverser",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call from": "inet.linklayer.ethernet.common.RelayInterfaceLearner",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetFcsInserter",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee80211.portal.Ieee80211Portal",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee8021as.Gptp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee8021as.Gptp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call from": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::MessageDispatcher::handleRegisterAnyService",
     "info": "handleRegisterAnyService"
    },
    {
     "call from": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.ieee8021d.rstp.Rstp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee8021d.rstp.Rstp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ieee8021d.stp.Stp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee8021d.stp.Stp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee8021r.Ieee8021rTagEpdHeaderChecker",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ieee8021r.Ieee8021rTagEpdHeaderInserter",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.lmac.LMacInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.loopback.Loopback",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.ppp.PppInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.shortcut.ShortcutInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.shortcut.ShortcutMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.tun.Tun",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.tun.TunInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.virtual.VirtualInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.linklayer.virtual.VirtualTunnel",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.vlan.VlanIndFilter",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call from": "inet.linklayer.vlan.VlanReqFilter",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.linklayer.xmac.XMacInterface",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call from": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.common.EchoProtocol",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.common.EchoProtocol",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.flooding.Flooding",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.flooding.Flooding",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.flooding.Flooding",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.icmpv6.Icmpv6",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.icmpv6.Icmpv6",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.icmpv6.Icmpv6",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.ipv4.Icmp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.ipv4.Icmp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.ipv4.Icmp",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.ipv4.Igmpv3",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.ipv4.Igmpv3",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.ldp.Ldp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.mpls.Mpls",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.mpls.Mpls",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.mpls.Mpls",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.ted.LinkStateRouting",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.ted.LinkStateRouting",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.wiseroute.WiseRoute",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.networklayer.wiseroute.WiseRoute",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.networklayer.wiseroute.WiseRoute",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.bgpv4.Bgp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.dsdv.Dsdv",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.dsdv.Dsdv",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.routing.eigrp.EigrpSplitter",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.eigrp.EigrpSplitter",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.routing.ospfv3.Ospfv3Splitter",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.ospfv3.Ospfv3Splitter",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.routing.pim.Pim",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.routing.pim.PimSplitter",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.routing.rip.Rip",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.transportlayer.rtp.Rtcp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.transportlayer.rtp.Rtp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.transportlayer.sctp.Sctp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.transportlayer.sctp.Sctp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.transportlayer.sctp.Sctp",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.transportlayer.tcp_lwip.TcpLwip",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.transportlayer.tcp_lwip.TcpLwip",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.transportlayer.tcp_lwip.TcpLwip",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.flow.FlowMeasurementRecorder"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.EthernetInterface"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.EthernetInterface"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.vlan.VlanIndFilter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.vlan.VlanIndFilter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketReq"
    }
   ]
  },
  "inet.common.misc.MessageChecker": {
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "in",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "in",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "in",
     "msg": "inet::Indication",
     "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "in",
     "msg": "inet::Request",
     "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
     "ctrl": "inet::TcpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "in",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "in",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "in",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "in",
     "msg": "inet::Request",
     "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "out",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "out",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "out",
     "msg": "inet::Indication",
     "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
     "ctrl": "inet::TcpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "out",
     "msg": "inet::Request",
     "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ]
  },
  "inet.common.packet.recorder.PcapRecorder": {
   "CALLED": [
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.protocolelement.common.InterpacketGapInserter",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketReceiver",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call from": "inet.queueing.server.InstantServer",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::AckingMacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ArpPacket"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::IcmpHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.common.ResidenceTimeMeasurer": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "receptionEnded"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "transmissionStarted"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "packetCreated"
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTagsWhereAbsent",
     "tagType": "inet::ResidenceTimeTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::ResidenceTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::ResidenceTimeTag"
    },
    {
     "tagAction": "removeTagsWherePresent",
     "tagType": "inet::ResidenceTimeTag"
    }
   ]
  },
  "inet.common.scenario.ScenarioManager": {
   "CALL": [
    {
     "call to": "inet.applications.dhcp.DhcpClient",
     "function": "inet::DhcpClient::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.applications.dhcp.DhcpServer",
     "function": "inet::DhcpServer::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.applications.pingapp.PingApp",
     "function": "inet::PingApp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.applications.tcpapp.TelnetApp",
     "function": "inet::TelnetApp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.applications.udpapp.UdpBasicApp",
     "function": "inet::UdpBasicApp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.applications.udpapp.UdpBasicBurst",
     "function": "inet::UdpBasicBurst::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.applications.udpapp.UdpVideoStreamClient",
     "function": "inet::UdpVideoStreamClient::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.clock.model.SettableClock",
     "function": "inet::SettableClock::processCommand",
     "info": "processCommand"
    },
    {
     "call to": "inet.common.lifecycle.NodeStatus",
     "function": "inet::NodeStatus::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.acking.AckingWirelessInterface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.configurator.L2NodeConfigurator",
     "function": "inet::L2NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::EthernetEncapsulation::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc",
     "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::Ieee8021dRelay::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee8021d.rstp.Rstp",
     "function": "inet::Rstp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee8021d.stp.Stp",
     "function": "inet::Stp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::Ieee8022Llc::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.loopback.Loopback",
     "function": "inet::Loopback::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "PRE_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.PppInterface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ppp.PppInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Arp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.GlobalArp",
     "function": "inet::GlobalArp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ldp.Ldp",
     "function": "inet::Ldp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopForwarding::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::RsvpTe::addSession",
     "info": "addSession"
    },
    {
     "call to": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::RsvpTe::delSession",
     "info": "delSession"
    },
    {
     "call to": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::RsvpTe::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ted.Ted",
     "function": "inet::Ted::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.node.ethernet.EthernetHub",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.physicallayer.wired.common.WireJunction",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.protocolelement.transceiver.PacketReceiver",
     "function": "inet::PacketReceiver::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::PacketTransmitter::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.routing.aodv.Aodv",
     "function": "inet::aodv::Aodv::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.routing.dsdv.Dsdv",
     "function": "inet::Dsdv::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::ospfv2::Ospfv2::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.routing.rip.Rip",
     "function": "inet::Rip::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::Tcp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.transportlayer.udp.Udp",
     "function": "inet::Udp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.applications.dhcp.DhcpClient",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.applications.dhcp.DhcpServer",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.applications.pingapp.PingApp",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.applications.tcpapp.TelnetApp",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.applications.udpapp.UdpBasicApp",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.applications.udpapp.UdpBasicBurst",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.applications.udpapp.UdpVideoStreamClient",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.networklayer.ldp.Ldp",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.routing.rip.Rip",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ScenarioTimer",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "scenario-event",
     "context": ""
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.emulation.transportlayer.udp.ExtLowerUdp": {
   "INPUT": [
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voipstream.VoipStreamSender"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAllAsBytes",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ]
  },
  "inet.examples.diffserv.onedomain.DSQueue1": {
   "CALL": [
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    }
   ]
  },
  "inet.examples.diffserv.onedomain.DSQueue2": {
   "CALL": [
    {
     "call to": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::WrrScheduler::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    }
   ]
  },
  "inet.examples.inet.netperfmeter.REDQueue": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.linklayer.acking.AckingMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::acked",
     "info": "acked"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.routing.aodv.Aodv",
     "function": "inet::aodv::Aodv::receiveSignal",
     "info": "linkBroken"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::AckingMac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::acked",
     "info": "acked"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.shortcut.ShortcutRadio",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::AckingMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::AckingMacHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::AckingMacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::AckingMacHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "link-break",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.acking.AckingWirelessInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.bmac.BMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::BMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::BMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::BMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::BMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::BMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::BMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::BMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::BMacControlFrame"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::BMacDataFrameHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::BMacDataFrameHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::BMacHeaderBase"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::BMacDataFrameHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::Packet",
     "kind": "192 (inet::BMacType::BMAC_DATA)",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "msgname": "pingNN",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "196 (inet::BMacType::BMAC_START_BMAC)",
     "ctrl": "",
     "tags": [],
     "msgname": "start_bmac",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "197 (inet::BMacType::BMAC_WAKE_UP)",
     "ctrl": "",
     "tags": [],
     "msgname": "wakeup",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "199 (inet::BMacType::BMAC_CCA_TIMEOUT)",
     "ctrl": "",
     "tags": [],
     "msgname": "cca_timeout",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "201 (inet::BMacType::BMAC_SEND_PREAMBLE)",
     "ctrl": "",
     "tags": [],
     "msgname": "send_preamble",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "202 (inet::BMacType::BMAC_STOP_PREAMBLES)",
     "ctrl": "",
     "tags": [],
     "msgname": "stop_preambles",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "203 (inet::BMacType::BMAC_DATA_TX_OVER)",
     "ctrl": "",
     "tags": [],
     "msgname": "data_tx_over",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "204 (inet::BMacType::BMAC_DATA_TIMEOUT)",
     "ctrl": "",
     "tags": [],
     "msgname": "data_timeout",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.bmac.BMacInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.common.OmittedIeee8021dQosClassifier",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.common.ExampleQosClassifier": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::ExampleQosClassifier::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::ExampleQosClassifier::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::UdpHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::UserPriorityReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.common.OmittedIeee8021dQosClassifier": {
   "CALL": [
    {
     "call to": "inet.linklayer.bmac.BMacInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.common.WirelessInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.lmac.LMacInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.shortcut.ShortcutInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.xmac.XMacInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  },
  "inet.linklayer.common.QosClassifier": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::QosClassifier::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::QosClassifier::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::UdpHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::UserPriorityReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.common.WirelessInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.common.OmittedIeee8021dQosClassifier",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.configurator.L2NodeConfigurator": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::L2NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::L2NodeConfigurator::receiveSignal",
     "info": "interfaceCreated"
    }
   ],
   "TAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::Ieee8021dInterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ieee8021dInterfaceData"
    }
   ]
  },
  "inet.linklayer.configurator.MacForwardingTableConfigurator": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::MacForwardingTableConfigurator::receiveSignal",
     "info": "ipv4McastChange"
    }
   ]
  },
  "inet.linklayer.csmaca.CsmaCaInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.common.OmittedIeee8021dQosClassifier",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.csmaca.CsmaCaMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.linklayer.common.WirelessInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.routing.aodv.Aodv",
     "function": "inet::aodv::Aodv::receiveSignal",
     "info": "linkBroken"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::CsmaCaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::CsmaCaMacTrailer"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::CsmaCaMacAckHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::CsmaCaMacDataHeader"
    },
    {
     "packetAction": "peekAllAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::CsmaCaMacTrailer"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::CsmaCaMacHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::CsmaCaMacDataHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "AckTimeout",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "Backoff",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "DIFS",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "SIFS",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::UserPriorityInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::UserPriorityReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ethernet.basic.EthernetCsmaMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::refreshConnection",
     "info": "refreshConnection"
    },
    {
     "call to": "inet.linklayer.ethernet.common.EthernetQosQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.common.EthernetQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::EthernetCsmaMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::refreshConnection",
     "info": "refreshConnection"
    },
    {
     "call from": "inet.linklayer.ethernet.common.EthernetQueue",
     "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::EthernetCsmaMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "INPUT": [
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    }
   ],
   "OUTPUT": [
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EthernetPadding"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    },
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    },
    {
     "packetAction": "removeAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "trimBack",
     "chunkType": ""
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "100",
     "ctrl": "",
     "tags": [],
     "msgname": "EndIFG",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "101",
     "ctrl": "",
     "tags": [],
     "msgname": "EndReception",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "102",
     "ctrl": "",
     "tags": [],
     "msgname": "EndBackoff",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "103",
     "ctrl": "",
     "tags": [],
     "msgname": "EndTransmission",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "104",
     "ctrl": "",
     "tags": [],
     "msgname": "EndJamming",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ethernet.basic.EthernetEncapsulation": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::Ieee8022Llc::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::EthernetEncapsulation::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::EthernetEncapsulation::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::EthernetEncapsulation::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::EthernetEncapsulation::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::EthernetEncapsulation::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    }
   ]
  },
  "inet.linklayer.ethernet.basic.EthernetMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.common.ResidenceTimeMeasurer",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "receptionEnded"
    },
    {
     "call to": "inet.common.ResidenceTimeMeasurer",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "transmissionStarted"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::refreshConnection",
     "info": "refreshConnection"
    },
    {
     "call to": "inet.linklayer.ethernet.common.EthernetQosQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.common.EthernetQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.RedDropperQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::EthernetMac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::EthernetMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::refreshConnection",
     "info": "refreshConnection"
    },
    {
     "call from": "inet.linklayer.ethernet.common.EthernetQueue",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::EthernetMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "INPUT": [
    {
     "gate": "phys$i",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetMac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "phys$o",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EthernetPadding"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    },
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    },
    {
     "packetAction": "removeAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::EthernetMacHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "100",
     "ctrl": "",
     "tags": [],
     "msgname": "EndIFG",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "103",
     "ctrl": "",
     "tags": [],
     "msgname": "EndTransmission",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ethernet.common.EthernetFrameClassifier": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.common.EthernetFrameClassifier",
     "function": "inet::EthernetFrameClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.common.EthernetFrameClassifier",
     "function": "inet::EthernetFrameClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::EthernetFrameClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EthernetMacHeader"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    }
   ]
  },
  "inet.linklayer.ethernet.common.EthernetQosQueue": {
   "CALL": [
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.linklayer.ethernet.common.EthernetQueue": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ethernet.common.EthernetQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.common.EthernetQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EthernetMacHeader"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PacketEventTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::QueueingTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.linklayer.ethernet.common.MacForwardingTable": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::addMulticastAddressForwardingInterface",
     "info": "addMulticastAddressForwardingInterface"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::setUnicastAddressForwardingInterface",
     "info": "setUnicastAddressForwardingInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::MacForwardingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::addMulticastAddressForwardingInterface",
     "info": "addMulticastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::setUnicastAddressForwardingInterface",
     "info": "setUnicastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacRelayUnit",
     "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
     "info": "getUnicastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacRelayUnit",
     "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
     "info": "learnUnicastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ethernet.common.RelayInterfaceLearner",
     "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
     "info": "learnUnicastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ethernet.common.RelayInterfaceSelector",
     "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
     "info": "getUnicastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::MacForwardingTable::getMulticastAddressForwardingInterfaces",
     "info": "getMulticastAddressForwardingInterfaces"
    },
    {
     "call from": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
     "info": "getUnicastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay",
     "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
     "info": "learnUnicastAddressForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ieee8021d.rstp.Rstp",
     "function": "inet::MacForwardingTable::removeForwardingInterface",
     "info": "removeForwardingInterface"
    },
    {
     "call from": "inet.linklayer.ieee8021d.rstp.Rstp",
     "function": "inet::MacForwardingTable::replaceForwardingInterface",
     "info": "replaceForwardingInterface"
    }
   ]
  },
  "inet.linklayer.ethernet.common.MacRelayUnit": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyService",
     "info": "handleRegisterAnyService"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
     "info": "getUnicastAddressForwardingInterface"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
     "info": "learnUnicastAddressForwardingInterface"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "PACKET": [
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::UserPriorityInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ethernet.common.PacketDirectionReverser": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::PacketDirectionReverser::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DropEligibleReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PcpReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::UserPriorityReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::VlanReq"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::DirectionTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::DropEligibleInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::EligibilityTimeTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PcpInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SequenceNumberInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::StreamInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::UserPriorityInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanInd"
    }
   ]
  },
  "inet.linklayer.ethernet.common.RelayInterfaceLearner": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
     "info": "learnUnicastAddressForwardingInterface"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.vlan.VlanIndFilter",
     "function": "inet::RelayInterfaceLearner::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.vlan.VlanIndFilter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.vlan.VlanIndFilter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    }
   ]
  },
  "inet.linklayer.ethernet.common.RelayInterfaceSelector": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
     "info": "getUnicastAddressForwardingInterface"
    },
    {
     "call to": "inet.linklayer.vlan.VlanReqMapper",
     "function": "inet::VlanReqMapper::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::RelayInterfaceSelector::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.vlan.VlanReqMapper"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.vlan.VlanReqMapper"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    }
   ]
  },
  "inet.linklayer.ethernet.EthernetInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.networklayer.diffserv.DscpMarker",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.shaper.OmittedTrafficConditioner",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.ethernet.LayeredEthernetInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.configurator.L2NodeConfigurator",
     "function": "inet::L2NodeConfigurator::receiveSignal",
     "info": "interfaceCreated"
    },
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.queueing.flow.FlowMeasurementStarter",
     "function": "inet::queueing::FlowMeasurementStarter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.measurement.OmittedMeasurementLayer",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.protocolelement.processing.OmittedProcessingDelayLayer",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.protocolelement.trafficconditioner.OmittedTrafficConditionerLayer",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.queueing.common.OmittedPacketFlow",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.queueing.flow.FlowMeasurementRecorder",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.ethernet.modular.EthernetFcsChecker": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker",
     "function": "inet::EthernetMacHeaderChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.flow.FlowMeasurementRecorder",
     "function": "inet::queueing::FlowMeasurementRecorder::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::EthernetFcsChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::EthernetFcsChecker::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::EthernetFcs"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.flow.FlowMeasurementRecorder"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ethernet.modular.EthernetFcsInserter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.protocolelement.common.PaddingInserter",
     "function": "inet::EthernetFcsInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PaddingInserter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
     "function": "inet::EthernetMacHeaderChecker::pushPacket",
     "info": "pushPacket"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::EthernetMacHeader"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    }
   ]
  },
  "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
     "function": "inet::EthernetMacHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee8022.Ieee8022Llc",
     "function": "inet::Ieee8022Llc::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.protocolelement.common.PaddingInserter",
     "function": "inet::PaddingInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::EthernetMacHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
     "function": "inet::EthernetMacHeaderInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::EthernetMacHeader"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PaddingInserter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    }
   ]
  },
  "inet.linklayer.ethernet.modular.EthernetMacLayer": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::removeAllPackets",
     "info": "removeAllPackets"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::EthernetMacLayer::receiveSignal",
     "info": "interfaceStateChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.Ieee80211Interface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.common.OmittedIeee8021dQosClassifier",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.queue.InProgressFrames",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee802EpdHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ieee802EpdHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ieee80211::LlcProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.common.ExampleQosClassifier",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.common.ExampleQosClassifier",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.common.QosClassifier",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.linklayer.common.QosClassifier",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.common.QosClassifier"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.common.QosClassifier"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherAppServer"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.ethernet.EtherAppServer"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee8022LlcHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee8022LlcSnapHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ieee8022LlcHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ieee80211::LlcProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::Ieee802SapInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ieee802SapInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ieee802SapReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.aggregation.BasicMsduAggregationPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService",
     "function": "inet::ieee80211::BasicMsduAggregationPolicy::computeAggregateFrames",
     "info": "computeAggregateFrames"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.blockack.OriginatorBlockAckAgreementPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::OriginatorBlockAckAgreementPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.channelaccess.Dcaf": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium BUSY"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium FREE"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::startContention",
     "info": "startContention"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::channelGranted",
     "info": "channelGranted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Dcaf::channelAccessGranted",
     "info": "channelAccessGranted"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcaf::incrementCw",
     "info": "incrementCw"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcaf::releaseChannel",
     "info": "releaseChannel"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcaf::requestChannel",
     "info": "requestChannel"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcaf::resetCw",
     "info": "resetCw"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Dcaf::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.channelaccess.Edcaf": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium FREE"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::startContention",
     "info": "startContention"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::channelGranted",
     "info": "channelGranted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Edcaf::channelAccessGranted",
     "info": "channelAccessGranted"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Edcaf::incrementCw",
     "info": "incrementCw"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Edcaf::releaseChannel",
     "info": "releaseChannel"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Edcaf::requestChannel",
     "info": "requestChannel"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Edcaf::resetCw",
     "info": "resetCw"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Edcaf::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.contention.Contention": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Dcaf::channelAccessGranted",
     "info": "channelAccessGranted"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Edcaf::channelAccessGranted",
     "info": "channelAccessGranted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium BUSY"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium FREE"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Contention::startContention",
     "info": "startContention"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium FREE"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Contention::startContention",
     "info": "startContention"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Contention::corruptedFrameReceived",
     "info": "corruptedFrameReceived"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium BUSY"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium FREE"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "channelGranted",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "startTx",
     "context": ""
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Dcaf::incrementCw",
     "info": "incrementCw"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Dcaf::releaseChannel",
     "info": "releaseChannel"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Dcaf::requestChannel",
     "info": "requestChannel"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Dcaf::resetCw",
     "info": "resetCw"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::frameSequenceFinished",
     "info": "frameSequenceFinished"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessFailedFrame",
     "info": "originatorProcessFailedFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessReceivedFrame",
     "info": "originatorProcessReceivedFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessRtsProtectionFailed",
     "info": "originatorProcessRtsProtectionFailed"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessTransmittedFrame",
     "info": "originatorProcessTransmittedFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::scheduleStartRxTimer",
     "info": "scheduleStartRxTimer"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::transmitControlResponseFrame",
     "info": "transmitControlResponseFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::transmitFrame",
     "info": "transmitFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::sendUpFrame",
     "info": "sendUpFrame(\"%s\")"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService",
     "function": "inet::ieee80211::OriginatorMacDataService::extractFramesToTransmit",
     "info": "extractFramesToTransmit"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.queue.InProgressFrames",
     "function": "inet::ieee80211::InProgressFrames::clearDroppedFrames",
     "info": "clearDroppedFrames"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl",
     "function": "inet::ieee80211::AarfRateControl::getRate",
     "info": "getRate"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService",
     "function": "inet::ieee80211::RecipientMacDataService::controlFrameReceived",
     "info": "controlFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService",
     "function": "inet::ieee80211::RecipientMacDataService::dataFrameReceived",
     "info": "dataFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService",
     "function": "inet::ieee80211::RecipientMacDataService::managementFrameReceived",
     "info": "managementFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Tx",
     "function": "inet::ieee80211::Tx::transmitFrame",
     "info": "transmitFrame(\"%s\")"
    },
    {
     "call to": "inet.routing.aodv.Aodv",
     "function": "inet::aodv::Aodv::receiveSignal",
     "info": "linkBroken"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::receiveSignal",
     "info": "linkBroken"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::receiveSignal",
     "info": "linkBroken"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Dcf::channelGranted",
     "info": "channelGranted"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::frameSequenceFinished",
     "info": "frameSequenceFinished"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessFailedFrame",
     "info": "originatorProcessFailedFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessReceivedFrame",
     "info": "originatorProcessReceivedFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessRtsProtectionFailed",
     "info": "originatorProcessRtsProtectionFailed"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::originatorProcessTransmittedFrame",
     "info": "originatorProcessTransmittedFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::scheduleStartRxTimer",
     "info": "scheduleStartRxTimer"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::transmitControlResponseFrame",
     "info": "transmitControlResponseFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::transmitFrame",
     "info": "transmitFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Dcf::corruptedFrameReceived",
     "info": "corruptedFrameReceived"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Dcf::processLowerFrame",
     "info": "processLowerFrame(%s)"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Dcf::processUpperFrame",
     "info": "processUpperFrame(%s)"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Dcf::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Tx",
     "function": "inet::ieee80211::Dcf::transmissionComplete",
     "info": "transmissionComplete"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211AckFrame"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211CtsFrame"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "startRxTimeout",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Edcaf::incrementCw",
     "info": "incrementCw"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Edcaf::releaseChannel",
     "info": "releaseChannel"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Edcaf::requestChannel",
     "info": "requestChannel"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Edcaf::resetCw",
     "info": "resetCw"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::frameSequenceFinished",
     "info": "frameSequenceFinished"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessFailedFrame",
     "info": "originatorProcessFailedFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessReceivedFrame",
     "info": "originatorProcessReceivedFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessRtsProtectionFailed",
     "info": "originatorProcessRtsProtectionFailed"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessTransmittedFrame",
     "info": "originatorProcessTransmittedFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::processMgmtFrame",
     "info": "processMgmtFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::processUpperFrame",
     "info": "processUpperFrame(%s)"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::scheduleStartRxTimer",
     "info": "scheduleStartRxTimer"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::transmitControlResponseFrame",
     "info": "transmitControlResponseFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::transmitFrame",
     "info": "transmitFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::sendUpFrame",
     "info": "sendUpFrame(\"%s\")"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService",
     "function": "inet::ieee80211::OriginatorQosMacDataService::extractFramesToTransmit",
     "info": "extractFramesToTransmit"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.TxopProcedure",
     "function": "inet::ieee80211::TxopProcedure::endTxop",
     "info": "endTxop"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.TxopProcedure",
     "function": "inet::ieee80211::TxopProcedure::startTxop",
     "info": "startTxop"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.queue.InProgressFrames",
     "function": "inet::ieee80211::InProgressFrames::clearDroppedFrames",
     "info": "clearDroppedFrames"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService",
     "function": "inet::ieee80211::RecipientQosMacDataService::controlFrameReceived",
     "info": "controlFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService",
     "function": "inet::ieee80211::RecipientQosMacDataService::dataFrameReceived",
     "info": "dataFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService",
     "function": "inet::ieee80211::RecipientQosMacDataService::managementFrameReceived",
     "info": "managementFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Tx",
     "function": "inet::ieee80211::Tx::transmitFrame",
     "info": "transmitFrame(\"%s\")"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Hcf::channelGranted",
     "info": "channelGranted"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::frameSequenceFinished",
     "info": "frameSequenceFinished"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessFailedFrame",
     "info": "originatorProcessFailedFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessReceivedFrame",
     "info": "originatorProcessReceivedFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessRtsProtectionFailed",
     "info": "originatorProcessRtsProtectionFailed"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::originatorProcessTransmittedFrame",
     "info": "originatorProcessTransmittedFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::processMgmtFrame",
     "info": "processMgmtFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::processUpperFrame",
     "info": "processUpperFrame(%s)"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::scheduleStartRxTimer",
     "info": "scheduleStartRxTimer"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::transmitControlResponseFrame",
     "info": "transmitControlResponseFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::transmitFrame",
     "info": "transmitFrame"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Hcf::corruptedFrameReceived",
     "info": "corruptedFrameReceived"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Hcf::processLowerFrame",
     "info": "processLowerFrame(%s)"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Hcf::processUpperFrame",
     "info": "processUpperFrame(%s)"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Hcf::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Tx",
     "function": "inet::ieee80211::Hcf::transmissionComplete",
     "info": "transmissionComplete"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211AddbaRequest"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211AddbaResponse"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211BasicBlockAckReq"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211AckFrame"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211AddbaRequest"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211AddbaResponse"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211BasicBlockAck"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211BasicBlockAckReq"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::ieee80211::Ieee80211CtsFrame"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211BlockAckReq"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "startRxTimeout",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.Ds": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::processUpperFrame",
     "info": "processUpperFrame(\"%s\")"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::sendUp",
     "info": "sendUp(\"%s\")"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ds::processDataFrame",
     "info": "processDataFrame"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService",
     "function": "inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes",
     "info": "computeFragmentSizes"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService",
     "function": "inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes",
     "info": "computeFragmentSizes"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.Ieee80211Mac": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.blockack.OriginatorBlockAckAgreementPolicy",
     "function": "inet::ieee80211::OriginatorBlockAckAgreementPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Dcaf",
     "function": "inet::ieee80211::Dcaf::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.channelaccess.Edcaf",
     "function": "inet::ieee80211::Edcaf::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::corruptedFrameReceived",
     "info": "corruptedFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::processLowerFrame",
     "info": "processLowerFrame(%s)"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::processUpperFrame",
     "info": "processUpperFrame(%s)"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::corruptedFrameReceived",
     "info": "corruptedFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::processLowerFrame",
     "info": "processLowerFrame(%s)"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::processUpperFrame",
     "info": "processUpperFrame(%s)"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ds",
     "function": "inet::ieee80211::Ds::processDataFrame",
     "info": "processDataFrame"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::processLowerFrame",
     "info": "processLowerFrame(\"%s\")"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::processUpperFrame",
     "info": "processUpperFrame(\"%s\")"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorAckPolicy",
     "function": "inet::ieee80211::OriginatorAckPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.OriginatorQosAckPolicy",
     "function": "inet::ieee80211::OriginatorQosAckPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.QosRtsPolicy",
     "function": "inet::ieee80211::QosRtsPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.RtsPolicy",
     "function": "inet::ieee80211::RtsPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.originator.TxopProcedure",
     "function": "inet::ieee80211::TxopProcedure::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.protectionmechanism.OriginatorProtectionMechanism",
     "function": "inet::ieee80211::OriginatorProtectionMechanism::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.protectionmechanism.SingleProtectionMechanism",
     "function": "inet::ieee80211::SingleProtectionMechanism::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl",
     "function": "inet::ieee80211::AarfRateControl::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.rateselection.QosRateSelection",
     "function": "inet::ieee80211::QosRateSelection::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.rateselection.RateSelection",
     "function": "inet::ieee80211::RateSelection::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.CtsPolicy",
     "function": "inet::ieee80211::CtsPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.QosCtsPolicy",
     "function": "inet::ieee80211::QosCtsPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientAckPolicy",
     "function": "inet::ieee80211::RecipientAckPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.recipient.RecipientQosAckPolicy",
     "function": "inet::ieee80211::RecipientQosAckPolicy::receiveSignal",
     "info": "modesetChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Rx::lowerFrameReceived",
     "info": "lowerFrameReceived(\"%s\")"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Rx::receivedSignalPartChanged",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Rx::receptionStateChanged",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Rx::transmissionStateChanged",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Tx",
     "function": "inet::ieee80211::Tx::radioTransmissionFinished",
     "info": "radioTransmissionFinished"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::physicallayer::Ieee80211OfdmRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::physicallayer::Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Ieee80211Mac::sendUpFrame",
     "info": "sendUpFrame(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Ieee80211Mac::sendUpFrame",
     "info": "sendUpFrame(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ds",
     "function": "inet::ieee80211::Ieee80211Mac::processUpperFrame",
     "info": "processUpperFrame(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ds",
     "function": "inet::ieee80211::Ieee80211Mac::sendUp",
     "info": "sendUp(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::processLowerFrame",
     "info": "processLowerFrame(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::processUpperFrame",
     "info": "processUpperFrame(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Tx",
     "function": "inet::ieee80211::Ieee80211Mac::sendDownFrame",
     "info": "sendDownFrame(\"%s\")"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "mgmtIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "gate": "mgmtIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "gate": "mgmtIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "mgmtOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "gate": "mgmtOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::UserPriorityInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::UserPriorityReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ieee80211SubtypeReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.originator.OriginatorAckPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::OriginatorAckPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy",
     "function": "inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes",
     "info": "computeFragmentSizes"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::OriginatorMacDataService::extractFramesToTransmit",
     "info": "extractFramesToTransmit"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.originator.OriginatorQosAckPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::OriginatorQosAckPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.aggregation.BasicMsduAggregationPolicy",
     "function": "inet::ieee80211::BasicMsduAggregationPolicy::computeAggregateFrames",
     "info": "computeAggregateFrames"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy",
     "function": "inet::ieee80211::BasicFragmentationPolicy::computeFragmentSizes",
     "info": "computeFragmentSizes"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.queue.PendingQueue",
     "function": "inet::queueing::PacketQueue::removePacket",
     "info": "removePacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::OriginatorQosMacDataService::extractFramesToTransmit",
     "info": "extractFramesToTransmit"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MsduSubframeHeader"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211AddbaRequest"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211AddbaResponse"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.originator.QosRtsPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::QosRtsPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.originator.RtsPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::RtsPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.originator.TxopProcedure": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::TxopProcedure::endTxop",
     "info": "endTxop"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::TxopProcedure::startTxop",
     "info": "startTxop"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::TxopProcedure::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.protectionmechanism.OriginatorProtectionMechanism": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::OriginatorProtectionMechanism::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.protectionmechanism.SingleProtectionMechanism": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::SingleProtectionMechanism::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.queue.InProgressFrames": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::InProgressFrames::clearDroppedFrames",
     "info": "clearDroppedFrames"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::InProgressFrames::clearDroppedFrames",
     "info": "clearDroppedFrames"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.queue.PendingQueue": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService",
     "function": "inet::queueing::PacketQueue::removePacket",
     "info": "removePacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    }
   ],
   "PULL_IN": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PacketEventTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::QueueingTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.ratecontrol.AarfRateControl": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::AarfRateControl::getRate",
     "info": "getRate"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::AarfRateControl::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.rateselection.QosRateSelection": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::QosRateSelection::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.rateselection.RateSelection": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::RateSelection::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.recipient.CtsPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::CtsPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.recipient.QosCtsPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::QosCtsPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.recipient.RecipientAckPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::RecipientAckPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::RecipientMacDataService::controlFrameReceived",
     "info": "controlFrameReceived"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::RecipientMacDataService::dataFrameReceived",
     "info": "dataFrameReceived"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::RecipientMacDataService::managementFrameReceived",
     "info": "managementFrameReceived"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.recipient.RecipientQosAckPolicy": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::RecipientQosAckPolicy::receiveSignal",
     "info": "modesetChanged"
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::RecipientQosMacDataService::controlFrameReceived",
     "info": "controlFrameReceived"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::RecipientQosMacDataService::dataFrameReceived",
     "info": "dataFrameReceived"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::RecipientQosMacDataService::managementFrameReceived",
     "info": "managementFrameReceived"
    }
   ],
   "PACKET": [
    {
     "packetAction": "hasAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MsduSubframeHeader"
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.Rx": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::corruptedFrameReceived",
     "info": "corruptedFrameReceived"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium BUSY"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.contention.Contention",
     "function": "inet::ieee80211::Contention::mediumStateChanged",
     "info": "medium FREE"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Rx::lowerFrameReceived",
     "info": "lowerFrameReceived(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Rx::receivedSignalPartChanged",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Rx::receptionStateChanged",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Rx::transmissionStateChanged",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Tx",
     "function": "inet::ieee80211::Rx::frameTransmitted",
     "info": "frameTransmitted"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "NAV",
     "context": ""
    }
   ]
  },
  "inet.linklayer.ieee80211.mac.Tx": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Dcf::transmissionComplete",
     "info": "transmissionComplete"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Hcf::transmissionComplete",
     "info": "transmissionComplete"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::sendDownFrame",
     "info": "sendDownFrame(\"%s\")"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Rx",
     "function": "inet::ieee80211::Rx::frameTransmitted",
     "info": "frameTransmitted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::ieee80211::Tx::transmitFrame",
     "info": "transmitFrame(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf",
     "function": "inet::ieee80211::Tx::transmitFrame",
     "info": "transmitFrame(\"%s\")"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Tx::radioTransmissionFinished",
     "info": "radioTransmissionFinished"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211AckFrame"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211AddbaRequest"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211AddbaResponse"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211BasicBlockAck"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211BasicBlockAckReq"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211CtsFrame"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211DataHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MgmtHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ieee80211::Ieee80211RtsFrame"
    },
    {
     "packetAction": "peekAllAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    },
    {
     "packetAction": "removeAtBack",
     "chunkType": "inet::ieee80211::Ieee80211MacTrailer"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ieee80211::Ieee80211MacHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "endIFS",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    }
   ]
  },
  "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta": {
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta",
     "function": "inet::ieee80211::Ieee80211AgentSta::receiveSignal",
     "info": "l2BeaconLost"
    }
   ],
   "INPUT": [
    {
     "gate": "mgmtIn",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateConfirm",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "gate": "mgmtIn",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateConfirm",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "gate": "mgmtIn",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_ScanConfirm",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ],
   "OUTPUT": [
    {
     "gate": "mgmtOut",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateRequest",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "gate": "mgmtOut",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateRequest",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "gate": "mgmtOut",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_ScanRequest",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "startUp",
     "context": ""
    }
   ]
  },
  "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc": {
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
     "info": "handleOperationStage"
    }
   ]
  },
  "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp": {
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::ieee80211::Ieee80211MgmtAp::receiveSignal",
     "info": "radioChannelChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "macIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "macOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211AssociationResponseFrame"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211BeaconFrame"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211ProbeResponseFrame"
    },
    {
     "packetAction": "peekAt",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
    },
    {
     "packetAction": "peekData",
     "chunkType": "inet::ieee80211::Ieee80211ProbeRequestFrame"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "beaconTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::Ieee80211SubtypeReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    }
   ]
  },
  "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta": {
   "CALL": [
    {
     "call to": "inet.applications.dhcp.DhcpClient",
     "function": "inet::DhcpClient::receiveSignal",
     "info": "l2Associated"
    },
    {
     "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta",
     "function": "inet::ieee80211::Ieee80211AgentSta::receiveSignal",
     "info": "l2BeaconLost"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::ieee80211::Ieee80211MgmtSta::receiveSignal",
     "info": "receptionStateChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "agentIn",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateRequest",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta"
    },
    {
     "gate": "agentIn",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateRequest",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta"
    },
    {
     "gate": "agentIn",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_ScanRequest",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta"
    },
    {
     "gate": "macIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "agentOut",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AssociateConfirm",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta"
    },
    {
     "gate": "agentOut",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_AuthenticateConfirm",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta"
    },
    {
     "gate": "agentOut",
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::ieee80211::Ieee80211Prim_ScanConfirm",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mgmt.Ieee80211AgentSta"
    },
    {
     "gate": "macOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "macOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
     "tags": [],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211AssociationRequestFrame"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ieee80211::Ieee80211ProbeRequestFrame"
    },
    {
     "packetAction": "peekAt",
     "chunkType": "inet::ieee80211::Ieee80211DataOrMgmtHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": "inet::ieee80211::Ieee80211AssociationResponseFrame"
    },
    {
     "packetAction": "peekData",
     "chunkType": "inet::ieee80211::Ieee80211AuthenticationFrame"
    },
    {
     "packetAction": "peekData",
     "chunkType": "inet::ieee80211::Ieee80211BeaconFrame"
    },
    {
     "packetAction": "peekData",
     "chunkType": "inet::ieee80211::Ieee80211ProbeResponseFrame"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "sendProbe",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "4",
     "ctrl": "",
     "tags": [],
     "msgname": "minChannelTime",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "5",
     "ctrl": "",
     "tags": [],
     "msgname": "maxChannelTime",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "6",
     "ctrl": "",
     "tags": [],
     "msgname": "beaconTimeout",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::Ieee80211SubtypeReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SignalPowerInd"
    }
   ]
  },
  "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtStaSimplified": {
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.linklayer.ieee80211.portal.Ieee80211Portal": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "PACKET": [
    {
     "packetAction": "eraseAtFront",
     "chunkType": ""
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee8022LlcSnapHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ieee8022LlcHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    }
   ]
  },
  "inet.linklayer.ieee802154.Ieee802154Mac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::Ieee802154Mac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee802154MacHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ieee802154MacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ieee802154MacHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer-backoff",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer-cca",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.ieee802154.Ieee802154NarrowbandMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
     "function": "inet::physicallayer::FlatRadioBase::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::FlatRadioBase::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::Ieee802154Mac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee802154MacHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ieee802154MacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ieee802154MacHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer-backoff",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer-cca",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer-rxAck",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer-sifs",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ieee8021as.Gptp": {
   "CALL": [
    {
     "call to": "inet.clock.model.SettableClock",
     "function": "inet::SettableClock::setClockTime",
     "info": "setClockTime"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.protocolelement.transceiver.PacketReceiver",
     "function": "inet::Gptp::receiveSignal",
     "info": "receptionEnded"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::Gptp::receiveSignal",
     "info": "transmissionEnded"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::GptpFollowUp"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::GptpPdelayReq"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::GptpPdelayResp"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::GptpPdelayRespFollowUp"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::GptpSync"
    },
    {
     "packetAction": "peekAt",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "peekAt",
     "chunkType": "inet::GptpBase"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::GptpBase"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "103 (inet::GptpSelfMsgKind::GPTP_SELF_MSG_SYNC)",
     "ctrl": "",
     "tags": [],
     "msgname": "selfMsgSync",
     "context": ""
    },
    {
     "msg": "inet::ClockEvent",
     "kind": "105 (inet::GptpSelfMsgKind::GPTP_SELF_MSG_PDELAY_REQ)",
     "ctrl": "",
     "tags": [],
     "msgname": "selfMsgPdelay",
     "context": ""
    },
    {
     "msg": "inet::GptpReqAnswerEvent",
     "kind": "101 (inet::GptpSelfMsgKind::GPTP_SELF_REQ_ANSWER_KIND)",
     "ctrl": "",
     "tags": [],
     "msgname": "selfMsgPdelayResp",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::GptpIngressTimeInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::GptpIngressTimeInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ieee8021d.relay.Ieee8021dRelay": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyService",
     "info": "handleRegisterAnyService"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::getMulticastAddressForwardingInterfaces",
     "info": "getMulticastAddressForwardingInterfaces"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::getUnicastAddressForwardingInterface",
     "info": "getUnicastAddressForwardingInterface"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::learnUnicastAddressForwardingInterface",
     "info": "learnUnicastAddressForwardingInterface"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ieee8021dRelay::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "PACKET": [
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::UserPriorityInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ieee8021dInterfaceData"
    }
   ]
  },
  "inet.linklayer.ieee8021d.rstp.Rstp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::removeForwardingInterface",
     "info": "removeForwardingInterface"
    },
    {
     "call to": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::MacForwardingTable::replaceForwardingInterface",
     "info": "replaceForwardingInterface"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Rstp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Rstp::receiveSignal",
     "info": "interfaceStateChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "relayIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "OUTPUT": [
    {
     "gate": "relayOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BpduCfg"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::BpduCfg"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "itshellotime",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "upgrade",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ieee8021dInterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ieee8021dInterfaceData"
    }
   ]
  },
  "inet.linklayer.ieee8021d.stp.Stp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Stp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "relayIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "OUTPUT": [
    {
     "gate": "relayOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BpduCfg"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BpduTcn"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::BpduBase"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "STP_TICK",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ieee8021dInterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ieee8021dInterfaceData"
    }
   ]
  },
  "inet.linklayer.ieee8021d.tester.StpTester": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "checktime",
     "context": ""
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ieee8021dInterfaceData"
    }
   ]
  },
  "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor",
     "function": "inet::Ieee8021qSocketCommandProcessor::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
     "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor",
     "function": "inet::Ieee8021qSocketCommandProcessor::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "gate": "in",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::Ieee8021qBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.virtual.VirtualTunnel"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ]
  },
  "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker",
     "function": "inet::Ieee8021qSocketPacketProcessor::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanInd"
    }
   ]
  },
  "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor",
     "function": "inet::Ieee8021qSocketPacketProcessor::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ieee8021qTagEpdHeaderChecker::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ieee8021qTagEpdHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ieee8021qTagEpdHeader"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DropEligibleInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PcpInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::UserPriorityInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::VlanInd"
    }
   ]
  },
  "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
     "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor",
     "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter",
     "function": "inet::Ieee8021qTagEpdHeaderInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee8021qTagEpdHeader"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanReq"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DropEligibleInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PcpInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::UserPriorityInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::VlanInd"
    },
    {
     "tagAction": "findTagForUpdate",
     "tagType": "inet::EncapsulationProtocolReq"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DropEligibleReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PcpReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::UserPriorityReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::VlanReq"
    }
   ]
  },
  "inet.linklayer.ieee8021r.Ieee8021rTagEpdHeaderChecker": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ]
  },
  "inet.linklayer.ieee8021r.Ieee8021rTagEpdHeaderInserter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    }
   ]
  },
  "inet.linklayer.ieee8022.Ieee8022Llc": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::EthernetEncapsulation::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ieee8022Llc::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ieee8022Llc::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ieee8022Llc::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetEncapsulation",
     "function": "inet::Ieee8022Llc::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
     "function": "inet::Ieee8022Llc::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketCommandCode::SOCKET_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "2 (inet::SocketCommandCode::SOCKET_C_OPEN)",
     "ctrl": "inet::Ieee8022LlcSocketOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.ethernet.EtherTrafGen"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::SocketStatusInd::SOCKET_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.ethernet.EtherAppServer"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ieee8022LlcHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ieee8022LlcHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::Ieee802SapInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ieee802SapInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ieee802SapReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.lmac.LMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::LMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::LMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::LMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::LMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::LMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::LMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::LMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::LMacControlFrame"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::LMacDataFrameHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::LMacControlFrame"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::LMacDataFrameHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::LMacHeaderBase"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::LMacDataFrameHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::LMacDataFrameHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "168 (inet::LMacType::LMAC_TIMEOUT)",
     "ctrl": "",
     "tags": [],
     "msgname": "timeout",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "169 (inet::LMacType::LMAC_WAKEUP)",
     "ctrl": "",
     "tags": [],
     "msgname": "wakeup",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "170 (inet::LMacType::LMAC_SEND_DATA)",
     "ctrl": "",
     "tags": [],
     "msgname": "sendData",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "171 (inet::LMacType::LMAC_SETUP_PHASE_END)",
     "ctrl": "",
     "tags": [],
     "msgname": "setup phase",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "172 (inet::LMacType::LMAC_CHECK_CHANNEL)",
     "ctrl": "",
     "tags": [],
     "msgname": "checkchannel",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "175 (inet::LMacType::LMAC_START_LMAC)",
     "ctrl": "",
     "tags": [],
     "msgname": "start_lmac",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "176 (inet::LMacType::LMAC_SEND_CONTROL)",
     "ctrl": "",
     "tags": [],
     "msgname": "send_control",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.lmac.LMacInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.common.OmittedIeee8021dQosClassifier",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.loopback.Loopback": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Loopback::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::Loopback::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::Loopback::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.loopback.LoopbackInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.ppp.Ppp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.examples.diffserv.onedomain.DSQueue1",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.examples.diffserv.onedomain.DSQueue2",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.examples.inet.netperfmeter.REDQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "PRE_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::refreshOutGateConnection",
     "info": "refreshOutGateConnection"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.diffserv.DiffservQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ppp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ppp::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ppp::receiveSignal",
     "info": "PRE_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "PRE_MODEL_CHANGE"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::refreshOutGateConnection",
     "info": "refreshOutGateConnection"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::Ppp::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::Ppp::receiveSignal",
     "info": "PRE_MODEL_CHANGE"
    }
   ],
   "INPUT": [
    {
     "gate": "phys$i",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ppp.Ppp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "phys$o",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.mpls.Mpls"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::PppTrailer"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PppHeader"
    },
    {
     "packetAction": "peekAtBack",
     "chunkType": "inet::PppTrailer"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PppHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::PppTrailer"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::PppHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "pppEndTxEvent",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.ppp.PppInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.queueing.shaper.OmittedTrafficConditioner",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.shortcut.ShortcutInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.common.OmittedIeee8021dQosClassifier",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "inet.queueing.queue.OmittedPacketQueue",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.shortcut.ShortcutMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "peerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.shortcut.ShortcutMac"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ShortcutMacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ShortcutMacHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.tun.Tun": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TunCommandCode::TUN_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tunapp.TunnelApp"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TunCommandCode::TUN_C_OPEN)",
     "ctrl": "inet::TunOpenCommand",
     "tags": [
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tunapp.TunnelApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tunapp.TunnelApp"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ]
  },
  "inet.linklayer.tun.TunInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.virtual.VirtualInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.linklayer.virtual.VirtualTunnel",
     "function": "inet::VirtualTunnel::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.virtual.VirtualTunnel"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.linklayer.virtual.VirtualTunnel": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.virtual.VirtualInterface",
     "function": "inet::VirtualTunnel::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::Ieee8021qBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::SocketInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.virtual.VirtualInterface"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::VlanReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::SocketInd"
    }
   ]
  },
  "inet.linklayer.vlan.VlanIndFilter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterAnyProtocol",
     "info": "handleRegisterAnyProtocol"
    },
    {
     "call to": "inet.linklayer.ethernet.common.RelayInterfaceLearner",
     "function": "inet::RelayInterfaceLearner::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::VlanIndFilter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanInd"
    }
   ]
  },
  "inet.linklayer.vlan.VlanReqFilter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.vlan.VlanReqMapper",
     "function": "inet::VlanReqFilter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.vlan.VlanReqMapper"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.vlan.VlanReqMapper"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.vlan.VlanReqMapper"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanReq"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanReq"
    }
   ]
  },
  "inet.linklayer.vlan.VlanReqMapper": {
   "CALL": [
    {
     "call to": "inet.linklayer.vlan.VlanReqFilter",
     "function": "inet::VlanReqFilter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.common.RelayInterfaceSelector",
     "function": "inet::VlanReqMapper::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.vlan.VlanReqFilter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::VlanReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::VlanReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::VlanReq"
    }
   ]
  },
  "inet.linklayer.xmac.XMac": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::XMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::XMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::XMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::XMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::XMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::XMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::XMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::XMacDataFrameHeader"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::XMacControlFrame"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::XMacControlFrame"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::XMacDataFrameHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::XMacHeaderBase"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::XMacDataFrameHeader"
    }
   ],
   "PULL_IN": [
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::Packet",
     "kind": "192 (inet::XMacTypes::XMAC_DATA)",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "msgname": "pingNN-reply",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "196 (inet::XMacTypes::XMAC_START_XMAC)",
     "ctrl": "",
     "tags": [],
     "msgname": "start_xmac",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "197 (inet::XMacTypes::XMAC_WAKE_UP)",
     "ctrl": "",
     "tags": [],
     "msgname": "wakeup",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "199 (inet::XMacTypes::XMAC_CCA_TIMEOUT)",
     "ctrl": "",
     "tags": [],
     "msgname": "cca_timeout",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "200 (inet::XMacTypes::XMAC_ACK_TX_OVER)",
     "ctrl": "",
     "tags": [],
     "msgname": "ack_tx_over",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "202 (inet::XMacTypes::XMAC_STOP_PREAMBLES)",
     "ctrl": "",
     "tags": [],
     "msgname": "stop_preambles",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "203 (inet::XMacTypes::XMAC_DATA_TX_OVER)",
     "ctrl": "",
     "tags": [],
     "msgname": "data_tx_over",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "204 (inet::XMacTypes::XMAC_DATA_TIMEOUT)",
     "ctrl": "",
     "tags": [],
     "msgname": "data_timeout",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "205 (inet::XMacTypes::SWITCH_PREAMBLE_PHASE)",
     "ctrl": "",
     "tags": [],
     "msgname": "switch_preamble_phase",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "206 (inet::XMacTypes::DELAY_FOR_ACK_WITHIN_REMOTE_RX)",
     "ctrl": "",
     "tags": [],
     "msgname": "delay_for_ack_within_remote_rx",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "207 (inet::XMacTypes::XMAC_SWITCHING_FINISHED)",
     "ctrl": "",
     "tags": [],
     "msgname": "switching_done",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.linklayer.xmac.XMacInterface": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterInterface",
     "info": "handleRegisterInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.common.OmittedIeee8021dQosClassifier",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    }
   ]
  },
  "inet.mobility.group.MoBanCoordinator": {
   "CALL": [
    {
     "call to": "inet.mobility.group.MoBanLocal",
     "function": "inet::MoBanLocal::setMoBANParameters",
     "info": "setMoBANParameters"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.group.MoBanLocal": {
   "CALLED": [
    {
     "call from": "inet.mobility.group.MoBanCoordinator",
     "function": "inet::MoBanLocal::setMoBANParameters",
     "info": "setMoBANParameters"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.AnsimMobility": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.AttachedMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.mobility.single.CircleMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.LinearMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.TurtleMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ]
  },
  "inet.mobility.single.BonnMotionMobility": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.ChiangMobility": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.CircleMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.AttachedMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.FacingMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ]
  },
  "inet.mobility.single.GaussMarkovMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.LinearMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.AttachedMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.MassMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.RandomWaypointMobility": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.RectangleMobility": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.SuperpositioningMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.AttachedMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.mobility.single.AttachedMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.CircleMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.FacingMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.GaussMarkovMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.LinearMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.MassMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    },
    {
     "call from": "inet.mobility.static.StaticConcentricMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ]
  },
  "inet.mobility.single.TractorMobility": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.TurtleMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.AttachedMobility",
     "function": "inet::AttachedMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.single.VehicleMobility": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "move",
     "context": ""
    }
   ]
  },
  "inet.mobility.static.StaticConcentricMobility": {
   "CALL": [
    {
     "call to": "inet.mobility.single.SuperpositioningMobility",
     "function": "inet::SuperpositioningMobility::receiveSignal",
     "info": "mobilityStateChanged"
    }
   ]
  },
  "inet.networklayer.arp.ipv4.Arp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::receiveSignal",
     "info": "arpResolutionCompleted"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::receiveSignal",
     "info": "arpResolutionFailed"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Arp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Arp::resolveL3Address",
     "info": "resolveMACAddress(%s,%s)"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::Arp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::Arp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "ifIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.shortcut.ShortcutMac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.common.QosClassifier"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "gate": "ifOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ArpPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ArpPacket"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ARP timeout",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.arp.ipv4.GlobalArp": {
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::GlobalArp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::GlobalArp::receiveSignal",
     "info": "interfaceIpv4ConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::GlobalArp::receiveSignal",
     "info": "interfaceIpv6ConfigChanged"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::GlobalArp::resolveL3Address",
     "info": "resolveL3Address"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::GlobalArp::resolveL3Address",
     "info": "resolveL3Address"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.networklayer.common.EchoProtocol": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.wiseroute.WiseRoute"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.flooding.Flooding"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.wiseroute.WiseRoute"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EchoPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EchoPacket"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::EchoPacket"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::NetworkProtocolInd"
    }
   ]
  },
  "inet.networklayer.common.InterfaceTable": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.modular.EthernetMacLayer",
     "function": "inet::EthernetMacLayer::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee8021d.rstp.Rstp",
     "function": "inet::Rstp::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.GlobalArp",
     "function": "inet::GlobalArp::receiveSignal",
     "info": "interfaceIpv4ConfigChanged"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.GlobalArp",
     "function": "inet::GlobalArp::receiveSignal",
     "info": "interfaceIpv6ConfigChanged"
    },
    {
     "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::Ipv4NodeConfigurator::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::receiveSignal",
     "info": "interfaceIpv4ConfigChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::receiveSignal",
     "info": "interfaceIpv6ConfigChanged"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceIpv4ConfigChanged"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::ospfv2::Ospfv2::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call to": "inet.routing.rip.Rip",
     "function": "inet::Rip::receiveSignal",
     "info": "interfaceStateChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.applications.dhcp.DhcpClient",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.dhcp.DhcpClient",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.applications.dhcp.DhcpServer",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.ethernet.EtherAppClient",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.ethernet.EtherTrafGen",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.netperfmeter.NetPerfMeter",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.pingapp.PingApp",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.sctpapp.SctpClient",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.tcpapp.TcpSessionApp",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.applications.tunapp.TunnelApp",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::InterfaceTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.acking.AckingWirelessInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.acking.AckingWirelessInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.bmac.BMacInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.bmac.BMacInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.common.WirelessInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.common.WirelessInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.configurator.L2NodeConfigurator",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.configurator.MacForwardingTableConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.linklayer.configurator.MacForwardingTableConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ethernet.common.MacForwardingTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ieee8021as.Gptp",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.ieee8021d.tester.StpTester",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.lmac.LMacInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.lmac.LMacInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.loopback.Loopback",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.ppp.PppInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.ppp.PppInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.shortcut.ShortcutInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.shortcut.ShortcutInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.shortcut.ShortcutMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.tun.TunInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.tun.TunInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.virtual.VirtualInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.virtual.VirtualInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.virtual.VirtualTunnel",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.virtual.VirtualTunnel",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.linklayer.xmac.XMacInterface",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.linklayer.xmac.XMacInterface",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.HostAutoConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.HostAutoConfigurator",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    },
    {
     "call from": "inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    },
    {
     "call from": "inet.networklayer.diffserv.SingleRateThreeColorMeter",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.networklayer.diffserv.TokenBucketMeter",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.networklayer.flooding.Flooding",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    },
    {
     "call from": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.ipv4.Igmpv3",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::InterfaceTable::findFirstLoopbackInterface",
     "info": "findFirstLoopbackInterface"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::InterfaceTable::findFirstMulticastInterface",
     "info": "findFirstMulticastInterface"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::InterfaceTable::findFirstLoopbackInterface",
     "info": "findFirstLoopbackInterface"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.mpls.Mpls",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    },
    {
     "call from": "inet.networklayer.probabilistic.ProbabilisticBroadcast",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    },
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.networklayer.ted.LinkStateRouting",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.networklayer.ted.Ted",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.networklayer.wiseroute.WiseRoute",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    },
    {
     "call from": "inet.physicallayer.wireless.shortcut.ShortcutRadio",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::InterfaceTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::InterfaceTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.routing.dsdv.Dsdv",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.ospfv3.Ospfv3Splitter",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.routing.ospfv3.Ospfv3Splitter",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.ospfv3.process.Ospfv3Process",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call from": "inet.routing.ospfv3.process.Ospfv3Process",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.pim.modes.PimDm",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "TAG": [
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.common.NetfilterInfoHook": {
   "CALL": [
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::unregisterHook",
     "info": "unregisterHook()"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::NetfilterInfoHook::datagramForwardHook",
     "info": "datagramForwardHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::NetfilterInfoHook::datagramLocalInHook",
     "info": "datagramLocalInHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::NetfilterInfoHook::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::NetfilterInfoHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::NetfilterInfoHook::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    }
   ]
  },
  "inet.networklayer.configurator.ipv4.HostAutoConfigurator": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "TAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::UnitDiskPhyHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::UnitDiskPhyHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ChannelInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ChannelReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalPowerReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator": {
   "CALL": [
    {
     "call to": "inet.linklayer.configurator.MacForwardingTableConfigurator",
     "function": "inet::MacForwardingTableConfigurator::receiveSignal",
     "info": "ipv4McastChange"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addMulticastRoute",
     "info": "addMulticastRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Ipv4NodeConfigurator::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "TAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeOutputGateId",
     "info": "findInterfaceByNodeOutputGateId"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::addRoute",
     "info": "addRoute(...)"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.networklayer.diffserv.BehaviorAggregateClassifier": {
   "CALL": [
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.filter.RedDropper",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.SingleRateThreeColorMeter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.TokenBucketMeter"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.networklayer.diffserv.DiffservQueue": {
   "CALL": [
    {
     "call to": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.networklayer.diffserv.DscpMarker": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.diffserv.MultiFieldClassifier",
     "function": "inet::DscpMarker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::DscpMarker::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertDataAt",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "removeDataAt",
     "chunkType": "inet::Ipv4Header"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.TokenBucketMeter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.TokenBucketMeter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::NetworkProtocolInd"
    }
   ]
  },
  "inet.networklayer.diffserv.MultiFieldClassifier": {
   "CALL": [
    {
     "call to": "inet.networklayer.diffserv.DscpMarker",
     "function": "inet::DscpMarker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::MultiFieldClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetMac"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::EthernetFcs"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ArpPacket"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "defaultOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "defaultOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.TokenBucketMeter"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.diffserv.SingleRateThreeColorMeter": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "greenOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "redOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "yellowOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    }
   ]
  },
  "inet.networklayer.diffserv.TokenBucketMeter": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.MultiFieldClassifier"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "greenOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "greenOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "greenOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "greenOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    }
   ]
  },
  "inet.networklayer.flooding.Flooding": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Flooding::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Flooding::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::FloodingHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::FloodingHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::FloodingHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::FloodingHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::HopLimitReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.networklayer.icmpv6.Icmpv6": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Icmpv6::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Icmpv6::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::Icmpv6::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::Icmpv6::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    }
   ],
   "INPUT": [
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipv6Out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::Icmpv6DestUnreachableMsg"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Icmpv6DestUnreachableMsg"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Icmpv6Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::Icmpv6Header"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::Icmpv6Header"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.icmpv6.Icmpv6",
     "function": "inet::Icmpv6::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    },
    {
     "call to": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::Ipv6NeighbourDiscovery::createAndSendNsPacket",
     "info": "createAndSendNsPacket"
    },
    {
     "call to": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::Ipv6NeighbourDiscovery::initiateDad",
     "info": "initiateDad"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::Ipv6NeighbourDiscovery::createAndSendNsPacket",
     "info": "createAndSendNsPacket"
    },
    {
     "call from": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::Ipv6NeighbourDiscovery::initiateDad",
     "info": "initiateDad"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6NeighbourDiscovery::resolveNeighbour",
     "info": "resolveNeighbor(%s,if=%d)"
    }
   ],
   "INPUT": [
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipv6Out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6Out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6Out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipv6Out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6NeighbourAdvertisement"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6NeighbourSolicitation"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6RouterAdvertisement"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6RouterSolicitation"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Icmpv6Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "assignLinkLocalAddr",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "sendPeriodicRA",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "sendSolicitedRA",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "initiateRTRDIS",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "4",
     "ctrl": "",
     "tags": [],
     "msgname": "dadTimeout",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "5",
     "ctrl": "",
     "tags": [],
     "msgname": "processRDTimeout",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "6",
     "ctrl": "",
     "tags": [],
     "msgname": "NUDTimeout",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "7",
     "ctrl": "",
     "tags": [],
     "msgname": "arTimeout",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.networklayer.internetcloud.MatrixCloudDelayer": {
   "CALL": [
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::unregisterHook",
     "info": "unregisterHook()"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::MatrixCloudDelayer::datagramForwardHook",
     "info": "datagramForwardHook"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "Delay",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceReq"
    }
   ]
  },
  "inet.networklayer.ipv4.Icmp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalBroadcastAddress",
     "info": "isLocalBroadcastAddress(%u.%u.%u.%u)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Icmp::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Icmp::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Icmp::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::Icmp::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::TosInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitsChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::IcmpEchoReply"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::IcmpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::IcmpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::IcmpHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::IcmpEchoRequest"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.ipv4.Igmpv2": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.routing.pim.modes.PimDm",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4MulticastGroupRegistered"
    },
    {
     "call to": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4MulticastGroupRegistered"
    },
    {
     "call to": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4MulticastGroupUnregistered"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Igmpv2::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Igmpv2::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.routing.dsdv.Dsdv",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupLeft"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.routing.pim.modes.PimDm",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupLeft"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::Ipv4OptionsReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Igmpv2Leave"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Igmpv2Query"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Igmpv2Report"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::IgmpMessage"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::IgmpQuery"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Igmpv2Leave"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Igmpv2Report"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1001 (inet::IgmpTimerKind::IGMP_QUERY_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "IgmpvN query timer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1002 (inet::IgmpTimerKind::IGMP_HOSTGROUP_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "IgmpvN group timer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1003 (inet::IgmpTimerKind::IGMP_LEAVE_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "IgmpvN leave timer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1004 (inet::IgmpTimerKind::IGMP_REXMT_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "IgmpvN rexmt timer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::Ipv4OptionsReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.ipv4.Igmpv3": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv3",
     "function": "inet::Igmpv3::receiveSignal",
     "info": "ipv4McastChange"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Igmpv3",
     "function": "inet::Igmpv3::receiveSignal",
     "info": "ipv4McastChange"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::Ipv4OptionsReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::Ipv4OptionsReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Igmpv3Query"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Igmpv3Report"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::IgmpMessage"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Igmpv3Query"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Igmpv3Report"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "IgmpvN General Query timer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "IgmpvN Host General Timer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DscpReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::Ipv4OptionsReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.ipv4.Ipv4": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Arp::resolveL3Address",
     "info": "resolveMACAddress(%s,%s)"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.GlobalArp",
     "function": "inet::GlobalArp::resolveL3Address",
     "info": "resolveL3Address"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findFirstLoopbackInterface",
     "info": "findFirstLoopbackInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findFirstMulticastInterface",
     "info": "findFirstMulticastInterface"
    },
    {
     "call to": "inet.networklayer.common.NetfilterInfoHook",
     "function": "inet::NetfilterInfoHook::datagramForwardHook",
     "info": "datagramForwardHook"
    },
    {
     "call to": "inet.networklayer.common.NetfilterInfoHook",
     "function": "inet::NetfilterInfoHook::datagramLocalInHook",
     "info": "datagramLocalInHook"
    },
    {
     "call to": "inet.networklayer.common.NetfilterInfoHook",
     "function": "inet::NetfilterInfoHook::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.networklayer.common.NetfilterInfoHook",
     "function": "inet::NetfilterInfoHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call to": "inet.networklayer.common.NetfilterInfoHook",
     "function": "inet::NetfilterInfoHook::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call to": "inet.networklayer.internetcloud.MatrixCloudDelayer",
     "function": "inet::MatrixCloudDelayer::datagramForwardHook",
     "info": "datagramForwardHook"
    },
    {
     "call to": "inet.networklayer.ipv4.Icmp",
     "function": "inet::Icmp::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingMulticastRoute",
     "info": "getMulticastRoutesFor(%u.%u.%u.%u, %u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findInterfaceByLocalBroadcastAddress",
     "info": "findInterfaceByLocalBroadcastAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalBroadcastAddress",
     "info": "isLocalBroadcastAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.routing.aodv.Aodv",
     "function": "inet::aodv::Aodv::datagramForwardHook",
     "info": "datagramForwardHook"
    },
    {
     "call to": "inet.routing.aodv.Aodv",
     "function": "inet::aodv::Aodv::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.routing.aodv.Aodv",
     "function": "inet::aodv::Aodv::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call to": "inet.routing.pim.modes.PimDm",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4DataOnNonrpf"
    },
    {
     "call to": "inet.routing.pim.modes.PimDm",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4DataOnRpf"
    },
    {
     "call to": "inet.routing.pim.modes.PimDm",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4NewMulticast"
    },
    {
     "call to": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4DataOnRpf"
    },
    {
     "call to": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4MdataRegister"
    },
    {
     "call to": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4NewMulticast"
    },
    {
     "call to": "inet.transportlayer.sctp.SctpCrcInsertion",
     "function": "inet::sctp::SctpCrcInsertion::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call to": "inet.transportlayer.tcp_common.TcpCrcInsertionHook",
     "function": "inet::tcp::TcpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call to": "inet.transportlayer.udp.UdpCrcInsertionHook",
     "function": "inet::UdpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ipv4::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ipv4::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ipv4::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Ipv4::receiveSignal",
     "info": "arpResolutionCompleted"
    },
    {
     "call from": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Ipv4::receiveSignal",
     "info": "arpResolutionFailed"
    },
    {
     "call from": "inet.networklayer.common.NetfilterInfoHook",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.networklayer.common.NetfilterInfoHook",
     "function": "inet::Ipv4::unregisterHook",
     "info": "unregisterHook()"
    },
    {
     "call from": "inet.networklayer.internetcloud.MatrixCloudDelayer",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.networklayer.internetcloud.MatrixCloudDelayer",
     "function": "inet::Ipv4::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call from": "inet.networklayer.internetcloud.MatrixCloudDelayer",
     "function": "inet::Ipv4::unregisterHook",
     "info": "unregisterHook()"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::Ipv4::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::Ipv4::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::Ipv4::dropQueuedDatagram",
     "info": "dropQueuedDatagram()"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::Ipv4::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv4::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.transportlayer.sctp.Sctp",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.transportlayer.tcp_lwip.TcpLwip",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    }
   ],
   "INPUT": [
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.loopback.Loopback"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TunSocketIndication::TUN_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.tun.Tun"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L3AddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::Ipv4OptionsReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::Ipv4OptionsReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::Ipv4OptionsReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.pim.PimSplitter"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::HopLimitReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::L3AddressReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.pim.PimSplitter"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::EcnReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::EcnReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.dymo.Dymo"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.eigrp.EigrpSplitter"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.dymo.Dymo"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.gpsr.Gpsr"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.dsdv.Dsdv"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::Ipv4SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "3",
     "ctrl": "inet::Ipv4SocketCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.tun.Tun"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.common.QosClassifier"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.loopback.Loopback"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.loopback.Loopback"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.loopback.Loopback"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Indication",
     "kind": "1",
     "ctrl": "inet::Ipv4SocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::TosInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::TosInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.routing.dsdv.Dsdv"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.routing.dymo.Dymo"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.routing.gpsr.Gpsr"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.eigrp.EigrpSplitter"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.pim.PimSplitter"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.applications.generic.IpvxTrafSink"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::LinkStateMsg"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "removeAll",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DscpInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::EcnInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NextHopAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::TosInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DscpInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::EcnInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTagForUpdate",
     "tagType": "inet::EncapsulationProtocolReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::MulticastReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DscpReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::EcnReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::FragmentationReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::Ipv4OptionsReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::TosReq"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::NextHopAddressReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.ipv4.Ipv4RoutingTable": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findFirstLoopbackInterface",
     "info": "findFirstLoopbackInterface"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::removeRoute",
     "info": "removeRoute(...)"
    },
    {
     "call to": "inet.networklayer.ldp.Ldp",
     "function": "inet::Ldp::receiveSignal",
     "info": "routeAdded"
    },
    {
     "call to": "inet.networklayer.ldp.Ldp",
     "function": "inet::Ldp::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call to": "inet.routing.pim.modes.PimDm",
     "function": "inet::PimDm::receiveSignal",
     "info": "routeAdded"
    },
    {
     "call to": "inet.routing.rip.Rip",
     "function": "inet::Rip::receiveSignal",
     "info": "routeAdded"
    },
    {
     "call to": "inet.routing.rip.Rip",
     "function": "inet::Rip::receiveSignal",
     "info": "routeDeleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.applications.dhcp.DhcpClient",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.applications.dhcp.DhcpClient",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ipv4RoutingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Ipv4RoutingTable::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Ipv4RoutingTable::receiveSignal",
     "info": "interfaceIpv4ConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Ipv4RoutingTable::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::Ipv4RoutingTable::addMulticastRoute",
     "info": "addMulticastRoute(...)"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.networklayer.ipv4.Icmp",
     "function": "inet::Ipv4RoutingTable::isLocalBroadcastAddress",
     "info": "isLocalBroadcastAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4RoutingTable::findBestMatchingMulticastRoute",
     "info": "getMulticastRoutesFor(%u.%u.%u.%u, %u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4RoutingTable::findInterfaceByLocalBroadcastAddress",
     "info": "findInterfaceByLocalBroadcastAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4RoutingTable::isLocalBroadcastAddress",
     "info": "isLocalBroadcastAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::removeRoute",
     "info": "removeRoute(...)"
    },
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ted.LinkStateRouting",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.networklayer.ted.LinkStateRouting",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.networklayer.ted.LinkStateRouting",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.networklayer.ted.Ted",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.networklayer.ted.Ted",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.networklayer.ted.Ted",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::Ipv4RoutingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::Ipv4RoutingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.aodv.Aodv",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.bgpv4.Bgp",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.bgpv4.Bgp",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.routing.bgpv4.Bgp",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.dsdv.Dsdv",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.dsdv.Dsdv",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.routing.dsdv.Dsdv",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv4RoutingTable::removeRoute",
     "info": "removeRoute(...)"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::Ipv4RoutingTable::removeRoute",
     "info": "removeRoute(...)"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.routing.ospfv3.process.Ospfv3Process",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.ospfv3.process.Ospfv3Process",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.routing.pim.modes.PimDm",
     "function": "inet::Ipv4RoutingTable::addMulticastRoute",
     "info": "addMulticastRoute(...)"
    },
    {
     "call from": "inet.routing.pim.modes.PimDm",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::Ipv4RoutingTable::addMulticastRoute",
     "info": "addMulticastRoute(...)"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.routing.rip.Rip",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.rip.Rip",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call from": "inet.routing.rip.Rip",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.transportlayer.rtp.Rtp",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call from": "inet.transportlayer.sctp.Sctp",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.ipv6.Ipv6": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::Ipv6NeighbourDiscovery::resolveNeighbour",
     "info": "resolveNeighbor(%s,if=%d)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%s)=?"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::lookupDestCache",
     "info": "lookupDestCache(%s)"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call to": "inet.transportlayer.sctp.SctpCrcInsertion",
     "function": "inet::sctp::SctpCrcInsertion::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call to": "inet.transportlayer.tcp_common.TcpCrcInsertionHook",
     "function": "inet::tcp::TcpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call to": "inet.transportlayer.udp.UdpCrcInsertionHook",
     "function": "inet::UdpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ipv6::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Ipv6::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.transportlayer.sctp.Sctp",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.transportlayer.udp.Udp",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    }
   ],
   "INPUT": [
    {
     "gate": "ndIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::EcnReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.eigrp.EigrpSplitter"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.ospfv3.Ospfv3Splitter"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.dymo.Dymo"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.gpsr.Gpsr"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::Ipv6SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "inet::Ipv6NdControlInfo",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "ndOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd",
      "inet::TosInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.eigrp.EigrpSplitter"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.ospfv3.Ospfv3Splitter"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.sctp.Sctp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Icmpv6Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DscpInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::EcnInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::TosInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DscpReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::EcnReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::Ipv6ExtHeaderReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::TosReq"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::L3AddressReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.networklayer.ipv6.Ipv6RoutingTable": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "routeDeleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Ipv6RoutingTable::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Ipv6RoutingTable::receiveSignal",
     "info": "interfaceIpv6ConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Ipv6RoutingTable::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%s)=?"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6RoutingTable::lookupDestCache",
     "info": "lookupDestCache(%s)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call from": "inet.routing.rip.Rip",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call from": "inet.transportlayer.sctp.Sctp",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    }
   ],
   "TAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.networklayer.ldp.Ldp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ldp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ldp::receiveSignal",
     "info": "routeAdded"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ldp::receiveSignal",
     "info": "routeDeleted"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetMulticastInterfaceCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetMulticastLoopCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::LdpHello"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "LDPSendHello",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.mpls.Mpls": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Mpls::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::Mpls::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "lowerLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "lowerLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::MplsHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::MplsHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::MplsHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::MplsHeader"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    }
   ]
  },
  "inet.networklayer.nexthop.NextHopForwarding": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.GlobalArp",
     "function": "inet::GlobalArp::resolveL3Address",
     "info": "resolveL3Address"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%s)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%s)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::isLocalMulticastAddress",
     "info": "isLocalMulticastAddress(%s)"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.routing.dymo.Dymo",
     "function": "inet::dymo::Dymo::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call to": "inet.routing.gpsr.Gpsr",
     "function": "inet::Gpsr::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::NextHopForwarding::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::NextHopForwarding::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::NextHopForwarding::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::NextHopForwarding::registerHook",
     "info": "registerHook()"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::NextHopForwarding::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::NextHopForwarding::registerHook",
     "info": "registerHook()"
    }
   ],
   "INPUT": [
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.dymo.Dymo"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.dymo.Dymo"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.gpsr.Gpsr"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.routing.dymo.Dymo"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.routing.gpsr.Gpsr"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::NextHopForwardingHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::NextHopForwardingHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::NextHopForwardingHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::NextHopForwardingHeader"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopAddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::L3AddressReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.networklayer.nexthop.NextHopRoutingTable": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    },
    {
     "call from": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    },
    {
     "call from": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    },
    {
     "call from": "inet.linklayer.ppp.PppInterface",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceCreated"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceIpv4ConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::NextHopRoutingTable::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator",
     "function": "inet::NextHopRoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopRoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%s)"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopRoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%s)"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopRoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopRoutingTable::isLocalMulticastAddress",
     "info": "isLocalMulticastAddress(%s)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::NextHopRoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::NextHopRoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%s)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::NextHopRoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call from": "inet.routing.dymo.Dymo",
     "function": "inet::NextHopRoutingTable::removeRoute",
     "info": "removeRoute(...)"
    },
    {
     "call from": "inet.routing.gpsr.Gpsr",
     "function": "inet::NextHopRoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    }
   ],
   "TAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::NextHopInterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::AdaptiveProbabilisticBroadcast::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::AdaptiveProbabilisticBroadcast::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "broadcastTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "removeEvent",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.networklayer.probabilistic.ProbabilisticBroadcast": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::ProbabilisticBroadcast::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::ProbabilisticBroadcast::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::ProbabilisticBroadcastHeader"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "broadcastTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.networklayer.rsvpte.RsvpClassifier": {
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.rsvpte.RsvpTe": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ted.LinkStateRouting",
     "function": "inet::LinkStateRouting::receiveSignal",
     "info": "tedChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::RsvpTe::addSession",
     "info": "addSession"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::RsvpTe::delSession",
     "info": "delSession"
    },
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::RsvpTe::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L3AddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::RsvpHelloMsg"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::RsvpPathError"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::RsvpPathMsg"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::RsvpPathTear"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::RsvpResvMsg"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::RsvpHelloMsg"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::RsvpMessage"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::RsvpPathError"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::RsvpPathMsg"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::RsvpPathTear"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::RsvpResvMsg"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::HelloTimeoutMsg",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "hello timeout",
     "context": ""
    },
    {
     "msg": "inet::HelloTimerMsg",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "hello timer",
     "context": ""
    },
    {
     "msg": "inet::PathNotifyMsg",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "path notify",
     "context": ""
    },
    {
     "msg": "inet::PsbTimerMsg",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "psb timer",
     "context": ""
    },
    {
     "msg": "inet::RsbCommitTimerMsg",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "rsb commit",
     "context": ""
    },
    {
     "msg": "inet::RsbRefreshTimerMsg",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "rsb timer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.ted.LinkStateRouting": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.rsvpte.RsvpTe",
     "function": "inet::LinkStateRouting::receiveSignal",
     "info": "tedChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::LinkStateMsg"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::LinkStateMsg"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "announce",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.ted.Ted": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceByAddress",
     "info": "getInterfaceByAddress(%u.%u.%u.%u)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Ted::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.networklayer.wiseroute.WiseRoute": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findFirstNonLoopbackInterface",
     "info": "findFirstNonLoopbackInterface"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::WiseRoute::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call from": "inet.common.MessageDispatcher",
     "function": "inet::WiseRoute::handleRegisterService",
     "info": "handleRegisterService"
    }
   ],
   "INPUT": [
    {
     "gate": "queueIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::L3SocketBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "queueOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.common.EchoProtocol"
    },
    {
     "gate": "transportOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.pingapp.PingApp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::WiseRouteHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::WiseRouteHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::WiseRouteHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::MacAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.node.ethernet.EthernetHub": {
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "INPUT": [
    {
     "gate": "ethg$i[]",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "ethg$i[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "ethg$i[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "ethg$i[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "ethg$i[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ethg$o[]",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "ethg$o[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "ethg$o[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "ethg$o[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "ethg$o[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    }
   ]
  },
  "inet.physicallayer.wired.common.WireJunction": {
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call from": "-=Network=-",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ],
   "INPUT": [
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "port$i[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wired.common.WireJunction"
    }
   ],
   "OUTPUT": [
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetFilledIfgSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetJamSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    },
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.node.ethernet.EthernetHub"
    },
    {
     "gate": "port$o[]",
     "msg": "inet::physicallayer::EthernetSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wired.common.WireJunction"
    }
   ]
  },
  "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::physicallayer::EthernetPhyHeaderChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketReceiver",
     "function": "inet::physicallayer::EthernetPhyHeaderChecker::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.transceiver.PacketReceiver"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter": {
   "CALL": [
    {
     "call to": "inet.protocolelement.common.InterpacketGapInserter",
     "function": "inet::InterpacketGapInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.protocolelement.common.InterpacketGapInserter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    },
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::EthernetPhyHeader"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.InterpacketGapInserter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ApskPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    }
   ]
  },
  "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.bmac.BMac",
     "function": "inet::BMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.bmac.BMac",
     "function": "inet::BMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.lmac.LMac",
     "function": "inet::LMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.lmac.LMac",
     "function": "inet::LMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.xmac.XMac",
     "function": "inet::XMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.xmac.XMac",
     "function": "inet::XMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ApskPhyHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ApskPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ApskPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBandReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalPowerReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio": {
   "CALL": [
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ApskPhyHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ApskPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.bmac.BMac",
     "function": "inet::BMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.bmac.BMac",
     "function": "inet::BMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.lmac.LMac",
     "function": "inet::LMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.lmac.LMac",
     "function": "inet::LMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.xmac.XMac",
     "function": "inet::XMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.xmac.XMac",
     "function": "inet::XMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskRadio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitCountChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ApskPhyHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ApskPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ApskPhyHeader"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::CsmaCaMacAckHeader"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::CsmaCaMacDataHeader"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::CsmaCaMacTrailer"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::IcmpEchoReply"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::IcmpEchoRequest"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::BitsChunk"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "peekAllAsBits",
     "chunkType": ""
    },
    {
     "packetAction": "peekAllAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ApskPhyHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ChannelInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ChannelReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBandReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalPowerReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    }
   ]
  },
  "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer": {
   "CALL": [
    {
     "call to": "inet.power.storage.IdealEpEnergyStorage",
     "function": "inet::power::IdealEpEnergyStorage::addEnergyConsumer",
     "info": "addEnergyConsumer"
    },
    {
     "call to": "inet.power.storage.IdealEpEnergyStorage",
     "function": "inet::power::IdealEpEnergyStorage::receiveSignal",
     "info": "powerConsumptionChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    }
   ]
  },
  "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer": {
   "CALL": [
    {
     "call to": "inet.power.storage.IdealEpEnergyStorage",
     "function": "inet::power::IdealEpEnergyStorage::addEnergyConsumer",
     "info": "addEnergyConsumer"
    },
    {
     "call to": "inet.power.storage.IdealEpEnergyStorage",
     "function": "inet::power::IdealEpEnergyStorage::receiveSignal",
     "info": "powerConsumptionChanged"
    },
    {
     "call to": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::power::SimpleEpEnergyStorage::addEnergyConsumer",
     "info": "addEnergyConsumer"
    },
    {
     "call to": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::power::SimpleEpEnergyStorage::receiveSignal",
     "info": "powerConsumptionChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    }
   ]
  },
  "inet.physicallayer.wireless.common.medium.RadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ApskPhyHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ChannelInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ChannelReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBandReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalPowerReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.common.neighborcache.GridNeighborCache": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "refillCellsTimer",
     "context": ""
    }
   ]
  },
  "inet.physicallayer.wireless.common.neighborcache.NeighborListNeighborCache": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "updateNeighborListsTimer",
     "context": ""
    }
   ]
  },
  "inet.physicallayer.wireless.common.neighborcache.QuadTreeNeighborCache": {
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "rebuildQuadTreeTimer",
     "context": ""
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitsChunk"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::BitsChunk"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "peekAllAsBits",
     "chunkType": ""
    },
    {
     "packetAction": "peekAllAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekAt",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ChannelInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::physicallayer::Ieee80211OfdmRadio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::physicallayer::Ieee80211OfdmRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio",
     "function": "inet::physicallayer::Ieee80211OfdmRadio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitCountChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel": {
   "CALLED": [
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.noise.NoiseSource"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitCountChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call from": "inet.physicallayer.wireless.noise.NoiseSource",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.noise.NoiseSource",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ChannelInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ChannelReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalPowerReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitCountChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp",
     "function": "inet::ieee80211::Ieee80211MgmtAp::receiveSignal",
     "info": "radioChannelChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta",
     "function": "inet::ieee80211::Ieee80211MgmtSta::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "listeningChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::removeRadio",
     "info": "removeRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::Ieee80211Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::NextHopAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::UserPriorityReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee80211SubtypeReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::Ieee80211ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BitCountChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211HrDsssPhyHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211HtPhyHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    },
    {
     "packetAction": "popAtBack",
     "chunkType": "inet::Chunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::Ieee80211HtPhyHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.errormodel.Ieee80211NistErrorModel",
     "function": "inet::physicallayer::Ieee80211NistErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "listeningChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "radioModeChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "listeningChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::removeRadio",
     "info": "removeRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "listeningChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receiveSignal",
     "info": "radioModeChanged"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211DsssPhyHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211HtPhyHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::physicallayer::Ieee80211OfdmPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ChannelInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::MacAddressInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ChannelReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalPowerReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::physicallayer::Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::physicallayer::Radio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::physicallayer::Radio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.common.medium.RadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::physicallayer::FlatRadioBase::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::physicallayer::FlatRadioBase::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeBitErrorRate",
     "info": "computeBitErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computePacketErrorRate",
     "info": "computePacketErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.apsk.packetlevel.errormodel.ApskErrorModel",
     "function": "inet::physicallayer::ApskErrorModel::computeSymbolErrorRate",
     "info": "computeSymbolErrorRate"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalPowerReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.noise.NoiseSource": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "sleepTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ]
  },
  "inet.physicallayer.wireless.shortcut.ShortcutRadio": {
   "CALL": [
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByNodeInputGateId",
     "info": "findInterfaceByNodeInputGateId"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "radioIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "radioIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::ShortcutPhyHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::ShortcutPhyHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::MacAddressReq"
    }
   ]
  },
  "inet.physicallayer.wireless.unitdisk.UnitDiskRadio": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.bmac.BMac",
     "function": "inet::BMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.bmac.BMac",
     "function": "inet::BMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::CsmaCaMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::Ieee802154Mac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.lmac.LMac",
     "function": "inet::LMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.lmac.LMac",
     "function": "inet::LMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.linklayer.xmac.XMac",
     "function": "inet::XMac::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.linklayer.xmac.XMac",
     "function": "inet::XMac::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "radioModeChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receivedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "receptionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmissionStateChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::physicallayer::StateBasedEpEnergyConsumer::receiveSignal",
     "info": "transmittedSignalPartChanged"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::physicallayer::UnitDiskRadio::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::UnitDiskRadio::setRadioMode",
     "info": "setRadioMode"
    }
   ],
   "INPUT": [
    {
     "gate": "radioIn",
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::ieee80211::LlcProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::physicallayer::Ieee80211ModeReq"
     ],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerIn",
     "msg": "inet::Request",
     "kind": "1",
     "ctrl": "inet::physicallayer::ConfigureRadioCommand",
     "tags": [],
     "srcModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ],
   "OUTPUT": [
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "upperLayerOut",
     "msg": "inet::Packet",
     "kind": "192",
     "ctrl": "",
     "tags": [
      "inet::ErrorRateInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    }
   ],
   "OUTPUTDIRECT": [
    {
     "msg": "inet::physicallayer::WirelessSignal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::UnitDiskPhyHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::UnitDiskPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::physicallayer::WirelessSignal",
     "tags": [],
     "msgname": "receptionTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "transmissionTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium": {
   "CALL": [
    {
     "call to": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::addRadio",
     "info": "addRadio"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::listenOnMedium",
     "info": "listenOnMedium"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::receivePacket",
     "info": "receivePacket"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio",
     "function": "inet::physicallayer::RadioMedium::transmitPacket",
     "info": "transmitPacket"
    },
    {
     "call from": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium",
     "function": "inet::physicallayer::RadioMedium::addTransmission",
     "info": "addTransmission"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::UnitDiskPhyHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "removeNonInterferingTransmissions",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ChannelInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::physicallayer::Ieee80211ModeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalPowerInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SignalTimeInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SnirInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::physicallayer::Ieee80211ModeReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SignalBitrateReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.power.generator.AlternatingEpEnergyGenerator": {
   "CALL": [
    {
     "call to": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::power::SimpleEpEnergyStorage::addEnergyGenerator",
     "info": "addEnergyGenerator"
    },
    {
     "call to": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::power::SimpleEpEnergyStorage::receiveSignal",
     "info": "powerGenerationChanged"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    }
   ]
  },
  "inet.power.management.SimpleEpEnergyManagement": {
   "CALL": [
    {
     "call to": "inet.applications.pingapp.PingApp",
     "function": "inet::PingApp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.common.lifecycle.NodeStatus",
     "function": "inet::NodeStatus::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc",
     "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.loopback.Loopback",
     "function": "inet::Loopback::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Arp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::Tcp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.transportlayer.udp.Udp",
     "function": "inet::Udp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.applications.pingapp.PingApp",
     "function": "inet::power::SimpleEpEnergyManagement::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::power::SimpleEpEnergyManagement::receiveSignal",
     "info": "powerConsumptionChanged"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::power::SimpleEpEnergyManagement::receiveSignal",
     "info": "powerGenerationChanged"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::power::SimpleEpEnergyManagement::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "lifecycleOperation",
     "context": ""
    }
   ]
  },
  "inet.power.storage.IdealEpEnergyStorage": {
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::power::IdealEpEnergyStorage::addEnergyConsumer",
     "info": "addEnergyConsumer"
    },
    {
     "call from": "inet.physicallayer.wireless.common.energyconsumer.SensorStateBasedEpEnergyConsumer",
     "function": "inet::power::IdealEpEnergyStorage::receiveSignal",
     "info": "powerConsumptionChanged"
    },
    {
     "call from": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::power::IdealEpEnergyStorage::addEnergyConsumer",
     "info": "addEnergyConsumer"
    },
    {
     "call from": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::power::IdealEpEnergyStorage::receiveSignal",
     "info": "powerConsumptionChanged"
    }
   ]
  },
  "inet.power.storage.SimpleEpEnergyStorage": {
   "CALL": [
    {
     "call to": "inet.applications.pingapp.PingApp",
     "function": "inet::PingApp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.common.lifecycle.NodeStatus",
     "function": "inet::NodeStatus::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd",
     "function": "inet::ieee80211::Ieee80211LlcLpd::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.mac.Ieee80211Mac",
     "function": "inet::ieee80211::Ieee80211Mac::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAdhoc",
     "function": "inet::ieee80211::Ieee80211MgmtAdhoc::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.loopback.Loopback",
     "function": "inet::Loopback::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::NetworkInterface::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.arp.ipv4.Arp",
     "function": "inet::Arp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator",
     "function": "inet::Ipv4NodeConfigurator::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio",
     "function": "inet::physicallayer::Ieee80211Radio::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::power::SimpleEpEnergyManagement::receiveSignal",
     "info": "powerConsumptionChanged"
    },
    {
     "call to": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::power::SimpleEpEnergyManagement::receiveSignal",
     "info": "powerGenerationChanged"
    },
    {
     "call to": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::Tcp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call to": "inet.transportlayer.udp.Udp",
     "function": "inet::Udp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::power::SimpleEpEnergyStorage::addEnergyConsumer",
     "info": "addEnergyConsumer"
    },
    {
     "call from": "inet.physicallayer.wireless.common.energyconsumer.StateBasedEpEnergyConsumer",
     "function": "inet::power::SimpleEpEnergyStorage::receiveSignal",
     "info": "powerConsumptionChanged"
    },
    {
     "call from": "inet.power.generator.AlternatingEpEnergyGenerator",
     "function": "inet::power::SimpleEpEnergyStorage::addEnergyGenerator",
     "info": "addEnergyGenerator"
    },
    {
     "call from": "inet.power.generator.AlternatingEpEnergyGenerator",
     "function": "inet::power::SimpleEpEnergyStorage::receiveSignal",
     "info": "powerGenerationChanged"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "timer",
     "context": ""
    }
   ]
  },
  "inet.protocolelement.common.InterpacketGapInserter": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::PacketTransmitter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
     "function": "inet::InterpacketGapInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::InterpacketGapInserter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::InterpacketGapInserter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "IfgTimer",
     "context": ""
    }
   ]
  },
  "inet.protocolelement.common.PacketEmitter": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
     "function": "inet::EthernetFcsChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker",
     "function": "inet::physicallayer::EthernetPhyHeaderChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    },
    {
     "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.protocolelement.common.InterpacketGapInserter",
     "function": "inet::InterpacketGapInserter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::PacketTransmitter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.server.InstantServer",
     "function": "inet::queueing::InstantServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.server.InstantServer",
     "function": "inet::queueing::InstantServer::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
     "function": "inet::PacketEmitter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
     "function": "inet::PacketEmitter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    },
    {
     "call from": "inet.protocolelement.common.InterpacketGapInserter",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketReceiver",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::PacketEmitter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.protocolelement.transceiver.PacketTransmitter",
     "function": "inet::PacketEmitter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    },
    {
     "call from": "inet.queueing.server.InstantServer",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.transceiver.PacketReceiver"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.transceiver.PacketReceiver"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.server.InstantServer"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.transceiver.PacketTransmitter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    }
   ]
  },
  "inet.protocolelement.common.PaddingInserter": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.modular.EthernetFcsInserter",
     "function": "inet::EthernetFcsInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter",
     "function": "inet::PaddingInserter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.protocolelement.measurement.OmittedMeasurementLayer": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  },
  "inet.protocolelement.processing.OmittedProcessingDelayLayer": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  },
  "inet.protocolelement.trafficconditioner.OmittedTrafficConditionerLayer": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  },
  "inet.protocolelement.transceiver.PacketReceiver": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetReceivedFromLower"
    },
    {
     "call to": "inet.linklayer.ieee8021as.Gptp",
     "function": "inet::Gptp::receiveSignal",
     "info": "receptionEnded"
    },
    {
     "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker",
     "function": "inet::physicallayer::EthernetPhyHeaderChecker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::PacketReceiver::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::physicallayer::Signal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.protocolelement.transceiver.PacketTransmitter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::GptpIngressTimeInd",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceInd"
    }
   ]
  },
  "inet.protocolelement.transceiver.PacketTransmitter": {
   "CALL": [
    {
     "call to": "inet.linklayer.ieee8021as.Gptp",
     "function": "inet::Gptp::receiveSignal",
     "info": "transmissionEnded"
    },
    {
     "call to": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter",
     "function": "inet::physicallayer::EthernetPhyHeaderInserter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    },
    {
     "call to": "inet.protocolelement.common.InterpacketGapInserter",
     "function": "inet::InterpacketGapInserter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::PacketTransmitter::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.protocolelement.common.InterpacketGapInserter",
     "function": "inet::PacketTransmitter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketTransmitter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::physicallayer::Signal",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.protocolelement.transceiver.PacketReceiver"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.InterpacketGapInserter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.protocolelement.common.PacketEmitter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PacketEventTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PropagationTimeTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::TransmissionTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "TxEndTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.queueing.buffer.PacketBuffer": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::handlePacketRemoved",
     "info": "handlePacketRemoved"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketBuffer::addPacket",
     "info": "addPacket"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketBuffer::removePacket",
     "info": "removePacket"
    }
   ]
  },
  "inet.queueing.buffer.PriorityBuffer": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::handlePacketRemoved",
     "info": "handlePacketRemoved"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketBuffer::addPacket",
     "info": "addPacket"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketBuffer::removePacket",
     "info": "removePacket"
    }
   ]
  },
  "inet.queueing.classifier.ContentBasedClassifier": {
   "CALL": [
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::ContentBasedClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::ContentBasedClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ContentBasedClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::ContentBasedClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.tokengenerator.PacketBasedTokenGenerator"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.queueing.classifier.LabelClassifier": {
   "CALL": [
    {
     "call to": "inet.queueing.marker.ContentBasedLabeler",
     "function": "inet::queueing::ContentBasedLabeler::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.marker.ContentBasedLabeler",
     "function": "inet::queueing::LabelClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::LabelClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::LabelsTag"
     ],
     "srcModule": "inet.queueing.marker.ContentBasedLabeler"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::LabelsTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::LabelsTag"
    }
   ]
  },
  "inet.queueing.classifier.MarkovClassifier": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::MarkovClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::MarkovClassifier::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "WaitTimer",
     "context": ""
    }
   ]
  },
  "inet.queueing.classifier.PacketClassifier": {
   "CALL": [
    {
     "call to": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PacketClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PacketClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::PacketClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketCloner"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.queueing.server.TokenBasedServer"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.tokengenerator.PacketBasedTokenGenerator"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.tokengenerator.PacketBasedTokenGenerator"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.queueing.tokengenerator.PacketBasedTokenGenerator"
    }
   ]
  },
  "inet.queueing.classifier.PriorityClassifier": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PriorityClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PriorityClassifier::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    }
   ]
  },
  "inet.queueing.classifier.WrrClassifier": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::WrrClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PriorityQueue",
     "function": "inet::queueing::WrrClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::WrrClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::WrrClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
     "function": "inet::queueing::WrrClassifier::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ]
  },
  "inet.queueing.common.OmittedPacketFlow": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  },
  "inet.queueing.common.OrdinalBasedDuplicator": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::OrdinalBasedDuplicator::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::OrdinalBasedDuplicator::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ]
  },
  "inet.queueing.common.PacketCloner": {
   "CALL": [
    {
     "call to": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PacketClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::MarkovScheduler::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::PacketCloner::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketCloner::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.MarkovScheduler"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.classifier.PacketClassifier"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ]
  },
  "inet.queueing.common.PacketDelayer": {
   "CALL": [
    {
     "call to": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketDelayer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketDelayer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketDelayer::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.server.PacketServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::DelayingTimeTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PacketEventTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "msgname": "producer-N",
     "context": ""
    },
    {
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "msgname": "sourceApplication-N",
     "context": ""
    }
   ]
  },
  "inet.queueing.common.PacketDemultiplexer": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PacketDemultiplexer::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PacketDemultiplexer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ]
  },
  "inet.queueing.common.PacketDuplicator": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketDuplicator::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketDuplicator::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ]
  },
  "inet.queueing.common.PacketMultiplexer": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.linklayer.ethernet.common.RelayInterfaceSelector",
     "function": "inet::RelayInterfaceSelector::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.networklayer.diffserv.DiffservQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.networklayer.diffserv.DscpMarker",
     "function": "inet::DscpMarker::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.common.PacketDirectionReverser",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.networklayer.diffserv.DscpMarker",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.networklayer.diffserv.MultiFieldClassifier",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.applications.udpapp.UdpSocketIo"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "srcModule": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketCloner"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.SingleRateThreeColorMeter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.TokenBucketMeter"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.TokenBucketMeter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq",
      "inet::VlanReq"
     ],
     "destModule": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.diffserv.SingleRateThreeColorMeter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.queueing.filter.ContentBasedFilter": {
   "CALL": [
    {
     "call to": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ContentBasedFilter::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ContentBasedFilter::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ContentBasedFilter::canPullSomePacket",
     "info": "canPullSomePacket"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ContentBasedFilter::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::ContentBasedFilter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ContentBasedFilter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::ContentBasedFilter::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.queueing.filter.OrdinalBasedDropper": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::OrdinalBasedDropper::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::OrdinalBasedDropper::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.queueing.filter.RedDropper": {
   "CALL": [
    {
     "call to": "inet.examples.inet.netperfmeter.REDQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.RedDropperQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.networklayer.diffserv.DiffservQueue",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::RedDropper::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::RedDropper::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::RedDropper::receiveSignal",
     "info": "packetPulled"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertDataAt",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::EthernetMacHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "removeDataAt",
     "chunkType": "inet::Ipv4Header"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::NetworkProtocolInd"
    }
   ]
  },
  "inet.queueing.filter.StatisticalRateLimiter": {
   "CALL": [
    {
     "call to": "inet.queueing.meter.ExponentialRateMeter",
     "function": "inet::queueing::ExponentialRateMeter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.meter.ExponentialRateMeter",
     "function": "inet::queueing::StatisticalRateLimiter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::StatisticalRateLimiter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::RateTag"
     ],
     "srcModule": "inet.queueing.meter.ExponentialRateMeter"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::RateTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::RateTag"
    }
   ]
  },
  "inet.queueing.flow.FlowMeasurementRecorder": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.flow.FlowMeasurementRecorder",
     "function": "inet::queueing::FlowMeasurementRecorder::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetFcsChecker",
     "function": "inet::queueing::FlowMeasurementRecorder::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.flow.FlowMeasurementRecorder",
     "function": "inet::queueing::FlowMeasurementRecorder::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::FlowMeasurementRecorder::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::InterfaceInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::ElapsedTimeTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::FlowTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::QueueingTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.queueing.flow.FlowMeasurementStarter": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::queueing::FlowMeasurementStarter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::FlowMeasurementStarter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::FlowMeasurementStarter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.applications.udpapp.UdpSocketIo"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTagsWhereAbsent",
     "tagType": "inet::ElapsedTimeTag"
    },
    {
     "tagAction": "addTagsWhereAbsent",
     "tagType": "inet::FlowTag"
    },
    {
     "tagAction": "addTagsWhereAbsent",
     "tagType": "inet::QueueingTimeTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::ElapsedTimeTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::FlowTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::QueueingTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.queueing.gate.PacketGate": {
   "CALL": [
    {
     "call to": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PacketGate::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketGate::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketGate::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PacketGate::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ChangeTimer",
     "context": ""
    }
   ]
  },
  "inet.queueing.marker.ContentBasedLabeler": {
   "CALL": [
    {
     "call to": "inet.queueing.classifier.LabelClassifier",
     "function": "inet::queueing::LabelClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.classifier.LabelClassifier",
     "function": "inet::queueing::ContentBasedLabeler::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ContentBasedLabeler::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::LabelsTag"
     ],
     "destModule": "inet.queueing.classifier.LabelClassifier"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::LabelsTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.queueing.marker.ContentBasedTagger": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::ContentBasedTagger::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ContentBasedTagger::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::HopLimitReq"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.queueing.marker.PacketTagger": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketTagger::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketTagger::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::HopLimitReq"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    }
   ]
  },
  "inet.queueing.meter.ExponentialRateMeter": {
   "CALL": [
    {
     "call to": "inet.queueing.filter.StatisticalRateLimiter",
     "function": "inet::queueing::StatisticalRateLimiter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.filter.StatisticalRateLimiter",
     "function": "inet::queueing::ExponentialRateMeter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ExponentialRateMeter::pushPacket",
     "info": "pushPacket"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::RateTag"
     ],
     "destModule": "inet.queueing.filter.StatisticalRateLimiter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::RateTag"
    }
   ]
  },
  "inet.queueing.queue.DropTailQueue": {
   "CALL": [
    {
     "call to": "inet.examples.diffserv.onedomain.DSQueue1",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call to": "inet.linklayer.acking.AckingMac",
     "function": "inet::AckingMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.bmac.BMac",
     "function": "inet::BMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::CsmaCaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ethernet.common.EthernetFrameClassifier",
     "function": "inet::EthernetFrameClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.linklayer.ethernet.common.EthernetQosQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::Ieee802154Mac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::Ieee802154Mac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.lmac.LMac",
     "function": "inet::LMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.xmac.XMac",
     "function": "inet::XMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.bmac.BMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.common.EthernetFrameClassifier",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154Mac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.lmac.LMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ppp.Ppp",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.xmac.XMac",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.networklayer.diffserv.DiffservQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.mpls.Mpls"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.arp.ipv4.Arp"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.server.PacketServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.acking.AckingMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.bmac.BMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.lmac.LMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.xmac.XMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.TokenBucketMeter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PacketEventTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::QueueingTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.queueing.queue.OmittedPacketQueue": {
   "CALL": [
    {
     "call to": "inet.linklayer.shortcut.ShortcutInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  },
  "inet.queueing.queue.PacketQueue": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.buffer.PacketBuffer",
     "function": "inet::queueing::PacketBuffer::addPacket",
     "info": "addPacket"
    },
    {
     "call to": "inet.queueing.buffer.PacketBuffer",
     "function": "inet::queueing::PacketBuffer::removePacket",
     "info": "removePacket"
    },
    {
     "call to": "inet.queueing.buffer.PriorityBuffer",
     "function": "inet::queueing::PacketBuffer::addPacket",
     "info": "addPacket"
    },
    {
     "call to": "inet.queueing.buffer.PriorityBuffer",
     "function": "inet::queueing::PacketBuffer::removePacket",
     "info": "removePacket"
    },
    {
     "call to": "inet.queueing.classifier.PriorityClassifier",
     "function": "inet::queueing::PriorityClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::WrrClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::receiveSignal",
     "info": "packetPulled"
    },
    {
     "call to": "inet.queueing.flow.FlowMeasurementStarter",
     "function": "inet::queueing::FlowMeasurementStarter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.InstantServer",
     "function": "inet::queueing::InstantServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.tokengenerator.QueueBasedTokenGenerator",
     "function": "inet::queueing::QueueBasedTokenGenerator::receiveSignal",
     "info": "packetPulled"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.examples.inet.netperfmeter.REDQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.modular.EthernetMacLayer",
     "function": "inet::queueing::PacketQueue::removeAllPackets",
     "info": "removeAllPackets"
    },
    {
     "call from": "inet.queueing.buffer.PacketBuffer",
     "function": "inet::queueing::PacketQueue::handlePacketRemoved",
     "info": "handlePacketRemoved"
    },
    {
     "call from": "inet.queueing.buffer.PriorityBuffer",
     "function": "inet::queueing::PacketQueue::handlePacketRemoved",
     "info": "handlePacketRemoved"
    },
    {
     "call from": "inet.queueing.classifier.PriorityClassifier",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.flow.FlowMeasurementStarter",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.queue.RedDropperQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.InstantServer",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.applications.tcpapp.TcpServerSocketIo"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.server.PacketServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.queueing.server.InstantServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.queueing.server.TokenBasedServer"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.PriorityClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.WrrClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.common.MessageDispatcher"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.linklayer.ethernet.LayeredEthernetInterface"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PacketEventTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::QueueingTimeTag"
    },
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.queueing.queue.PriorityQueue": {
   "CALL": [
    {
     "call to": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::WrrClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
     "info": "pushPacket"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.queueing.queue.RedDropperQueue": {
   "CALL": [
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "inet.queueing.scheduler.ContentBasedScheduler": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ContentBasedScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::ContentBasedScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "setBackOffset",
     "chunkType": ""
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.queueing.scheduler.MarkovScheduler": {
   "CALL": [
    {
     "call to": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PacketCloner::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.source.EmptyPacketSource",
     "function": "inet::queueing::EmptyPacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::MarkovScheduler::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::MarkovScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::MarkovScheduler::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::MarkovScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.applications.udpapp.UdpSocketIo"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketCloner"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "WaitTimer",
     "context": ""
    }
   ]
  },
  "inet.queueing.scheduler.PacketScheduler": {
   "CALL": [
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PacketScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PacketScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ]
  },
  "inet.queueing.scheduler.PriorityScheduler": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::WrrScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.examples.diffserv.onedomain.DSQueue1",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.linklayer.ethernet.common.EthernetQosQueue",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.networklayer.diffserv.DiffservQueue",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PriorityQueue",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ethernet.basic.EthernetMac"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    }
   ]
  },
  "inet.queueing.scheduler.WrrScheduler": {
   "CALL": [
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.examples.diffserv.onedomain.DSQueue2",
     "function": "inet::queueing::WrrScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::WrrScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::WrrScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.linklayer.ppp.Ppp"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.queueing.scheduler.PriorityScheduler"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    }
   ]
  },
  "inet.queueing.server.InstantServer": {
   "CALL": [
    {
     "call to": "inet.common.packet.recorder.PcapRecorder",
     "function": "inet::PcapRecorder::receiveSignal",
     "info": "packetSentToLower"
    },
    {
     "call to": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::PacketEmitter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::queueing::InstantServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.protocolelement.common.PacketEmitter",
     "function": "inet::queueing::InstantServer::handlePushPacketProcessed",
     "info": "handlePushPacketProcessed"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::InstantServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DropEligibleReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::PcpReq",
      "inet::UserPriorityReq"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::EcnInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::MulticastReq",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::Ieee802SapReq",
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::InterfaceReq",
      "inet::MacAddressReq",
      "inet::PacketProtocolTag",
      "inet::VlanInd"
     ],
     "destModule": "inet.protocolelement.common.PacketEmitter"
    }
   ]
  },
  "inet.queueing.server.PacketServer": {
   "CALL": [
    {
     "call to": "inet.queueing.common.PacketDelayer",
     "function": "inet::queueing::PacketDelayer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.common.PacketDelayer",
     "function": "inet::queueing::PacketServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PacketServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketDelayer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::PacketEventTag"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "tagType": "inet::ProcessingTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ProcessingTimer",
     "context": ""
    }
   ]
  },
  "inet.queueing.server.TokenBasedServer": {
   "CALL": [
    {
     "call to": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::ContentBasedClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PacketClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::PacketBasedTokenGenerator::receiveSignal",
     "info": "tokensDepleted"
    },
    {
     "call to": "inet.queueing.tokengenerator.SignalBasedTokenGenerator",
     "function": "inet::queueing::SignalBasedTokenGenerator::receiveSignal",
     "info": "tokensDepleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    },
    {
     "call from": "inet.queueing.tokengenerator.QueueBasedTokenGenerator",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    },
    {
     "call from": "inet.queueing.tokengenerator.SignalBasedTokenGenerator",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    },
    {
     "call from": "inet.queueing.tokengenerator.TimeBasedTokenGenerator",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    }
   ],
   "PULL_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.queueing.queue.PacketQueue"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.queueing.classifier.PacketClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.queueing.classifier.PacketClassifier"
    }
   ]
  },
  "inet.queueing.shaper.OmittedTrafficConditioner": {
   "CALL": [
    {
     "call to": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.PppInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  },
  "inet.queueing.sink.ActivePacketSink": {
   "CALL": [
    {
     "call to": "inet.queueing.common.PacketDemultiplexer",
     "function": "inet::queueing::PacketDemultiplexer::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ContentBasedFilter::canPullSomePacket",
     "info": "canPullSomePacket"
    },
    {
     "call to": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ContentBasedFilter::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.queue.PriorityQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.scheduler.ContentBasedScheduler",
     "function": "inet::queueing::ContentBasedScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::MarkovScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PacketScheduler",
     "function": "inet::queueing::PacketScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::WrrScheduler::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call to": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.common.PacketDemultiplexer",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.ContentBasedScheduler",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.PacketScheduler",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call from": "inet.queueing.source.PassivePacketSource",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "PULL_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketDemultiplexer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.gate.PacketGate"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.ContentBasedScheduler"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.MarkovScheduler"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.PacketScheduler"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.PriorityScheduler"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.PassivePacketSource"
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "CollectionTimer",
     "context": ""
    }
   ]
  },
  "inet.queueing.sink.PassivePacketSink": {
   "CALL": [
    {
     "call to": "inet.common.ResidenceTimeMeasurer",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call to": "inet.networklayer.diffserv.BehaviorAggregateClassifier",
     "function": "inet::BehaviorAggregateClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.networklayer.diffserv.MultiFieldClassifier",
     "function": "inet::MultiFieldClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::ContentBasedClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.classifier.LabelClassifier",
     "function": "inet::queueing::LabelClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.classifier.MarkovClassifier",
     "function": "inet::queueing::MarkovClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PacketClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::WrrClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.OrdinalBasedDuplicator",
     "function": "inet::queueing::OrdinalBasedDuplicator::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PacketCloner::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketDelayer",
     "function": "inet::queueing::PacketDelayer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketDuplicator",
     "function": "inet::queueing::PacketDuplicator::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ContentBasedFilter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.filter.OrdinalBasedDropper",
     "function": "inet::queueing::OrdinalBasedDropper::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.filter.StatisticalRateLimiter",
     "function": "inet::queueing::StatisticalRateLimiter::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.flow.FlowMeasurementRecorder",
     "function": "inet::queueing::FlowMeasurementRecorder::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.marker.ContentBasedTagger",
     "function": "inet::queueing::ContentBasedTagger::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.marker.PacketTagger",
     "function": "inet::queueing::PacketTagger::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.tokengenerator.SignalBasedTokenGenerator",
     "function": "inet::queueing::SignalBasedTokenGenerator::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.classifier.LabelClassifier",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.classifier.MarkovClassifier",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.OrdinalBasedDuplicator",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketDelayer",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketDuplicator",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.filter.OrdinalBasedDropper",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.filter.StatisticalRateLimiter",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.flow.FlowMeasurementRecorder",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.marker.ContentBasedTagger",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.marker.PacketTagger",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    }
   ],
   "INPUT": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::InterfaceInd",
      "inet::MacAddressInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.applications.tcpapp.TcpServerSocketIo"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.flow.FlowMeasurementRecorder"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::HopLimitReq"
     ],
     "srcModule": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::HopLimitReq"
     ],
     "srcModule": "inet.queueing.marker.PacketTagger"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::LabelsTag"
     ],
     "srcModule": "inet.queueing.classifier.LabelClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::RateTag"
     ],
     "srcModule": "inet.queueing.filter.StatisticalRateLimiter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.MarkovClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.PacketClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.WrrClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.OrdinalBasedDuplicator"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketCloner"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketDelayer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketDuplicator"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.filter.OrdinalBasedDropper"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.gate.PacketGate"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.server.PacketServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.diffserv.SingleRateThreeColorMeter"
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ConsumptionTimer",
     "context": ""
    }
   ]
  },
  "inet.queueing.source.ActivePacketSource": {
   "CALL": [
    {
     "call to": "inet.common.ResidenceTimeMeasurer",
     "function": "inet::ResidenceTimeMeasurer::receiveSignal",
     "info": "packetCreated"
    },
    {
     "call to": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::ContentBasedClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.classifier.MarkovClassifier",
     "function": "inet::queueing::MarkovClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PacketClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.classifier.PriorityClassifier",
     "function": "inet::queueing::PriorityClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::WrrClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.OrdinalBasedDuplicator",
     "function": "inet::queueing::OrdinalBasedDuplicator::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::PacketCloner::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketDelayer",
     "function": "inet::queueing::PacketDelayer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketDuplicator",
     "function": "inet::queueing::PacketDuplicator::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::PacketMultiplexer::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ContentBasedFilter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.filter.OrdinalBasedDropper",
     "function": "inet::queueing::OrdinalBasedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::RedDropper::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.flow.FlowMeasurementStarter",
     "function": "inet::queueing::FlowMeasurementStarter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.marker.ContentBasedLabeler",
     "function": "inet::queueing::ContentBasedLabeler::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.marker.ContentBasedTagger",
     "function": "inet::queueing::ContentBasedTagger::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.marker.PacketTagger",
     "function": "inet::queueing::PacketTagger::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.meter.ExponentialRateMeter",
     "function": "inet::queueing::ExponentialRateMeter::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::PacketQueue::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.queue.PriorityQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::MarkovScheduler::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::PassivePacketSink::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.tutorials.queueing.ExampleCompoundPriorityQueue",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetCreated"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.classifier.MarkovClassifier",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.classifier.PriorityClassifier",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.OrdinalBasedDuplicator",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.PacketCloner",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.PacketDelayer",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.PacketDuplicator",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.common.PacketMultiplexer",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.filter.OrdinalBasedDropper",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.filter.RedDropper",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.marker.ContentBasedLabeler",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.marker.ContentBasedTagger",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.marker.PacketTagger",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.meter.ExponentialRateMeter",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.DropTailQueue",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call from": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ],
   "OUTPUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.applications.udpapp.UdpSocketIo"
    }
   ],
   "PACKET": [
    {
     "packetAction": "Packet",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::BytesChunk"
    }
   ],
   "PUSH_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.classifier.MarkovClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.classifier.PacketClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.classifier.PriorityClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.classifier.WrrClassifier"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.OrdinalBasedDuplicator"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketCloner"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketDelayer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketDuplicator"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.filter.OrdinalBasedDropper"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.filter.RedDropper"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.gate.PacketGate"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.marker.ContentBasedLabeler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.marker.PacketTagger"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.meter.ExponentialRateMeter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.queue.DropTailQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.queue.PacketQueue"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.scheduler.MarkovScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.tokengenerator.PacketBasedTokenGenerator"
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::IdentityTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ProductionTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    }
   ]
  },
  "inet.queueing.source.EmptyPacketSource": {
   "CALLED": [
    {
     "call from": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::EmptyPacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    }
   ]
  },
  "inet.queueing.source.PassivePacketSource": {
   "CALL": [
    {
     "call to": "inet.queueing.common.PacketDemultiplexer",
     "function": "inet::queueing::PacketDemultiplexer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::ContentBasedFilter::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PacketGate::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.scheduler.ContentBasedScheduler",
     "function": "inet::queueing::ContentBasedScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::MarkovScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.scheduler.PacketScheduler",
     "function": "inet::queueing::PacketScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::WrrScheduler::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PacketServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    },
    {
     "call to": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::ActivePacketSink::handleCanPullPacketChanged",
     "info": "handleCanPullPacketChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.common.PacketDemultiplexer",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call from": "inet.queueing.filter.ContentBasedFilter",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.gate.PacketGate",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.ContentBasedScheduler",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.ContentBasedScheduler",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.MarkovScheduler",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.PacketScheduler",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.PacketScheduler",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.scheduler.WrrScheduler",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.PacketServer",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PassivePacketSource::canPullPacket",
     "info": "canPullPacket"
    },
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::PassivePacketSource::pullPacket",
     "info": "pullPacket"
    }
   ],
   "PACKET": [
    {
     "packetAction": "Packet",
     "chunkType": "inet::ByteCountChunk"
    }
   ],
   "PULLED_OUT": [
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.common.PacketDemultiplexer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.gate.PacketGate"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.scheduler.ContentBasedScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.scheduler.MarkovScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.scheduler.PacketScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.scheduler.WrrScheduler"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.server.PacketServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.server.TokenBasedServer"
    },
    {
     "gate": "out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "destModule": "inet.queueing.sink.ActivePacketSink"
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::IdentityTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ProvidingTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DirectionTag"
    }
   ]
  },
  "inet.queueing.tokengenerator.PacketBasedTokenGenerator": {
   "CALL": [
    {
     "call to": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::ContentBasedClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PacketClassifier::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    },
    {
     "call to": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::ActivePacketSource::handleCanPushPacketChanged",
     "info": "handleCanPushPacketChanged"
    },
    {
     "call to": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::PacketBasedTokenGenerator::receiveSignal",
     "info": "tokensDepleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.classifier.ContentBasedClassifier",
     "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.classifier.PacketClassifier",
     "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::PacketBasedTokenGenerator::receiveSignal",
     "info": "tokensDepleted"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::PacketBasedTokenGenerator::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.tokengenerator.PacketBasedTokenGenerator",
     "function": "inet::queueing::PacketBasedTokenGenerator::receiveSignal",
     "info": "tokensDepleted"
    }
   ],
   "PUSHED_IN": [
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.classifier.PacketClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag"
     ],
     "srcModule": "inet.queueing.source.ActivePacketSource"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.queueing.classifier.PacketClassifier"
    },
    {
     "gate": "in",
     "msg": "inet::Packet",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.queueing.classifier.PacketClassifier"
    }
   ]
  },
  "inet.queueing.tokengenerator.QueueBasedTokenGenerator": {
   "CALL": [
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    },
    {
     "call to": "inet.queueing.tokengenerator.QueueBasedTokenGenerator",
     "function": "inet::queueing::QueueBasedTokenGenerator::receiveSignal",
     "info": "packetPulled"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.queue.PacketQueue",
     "function": "inet::queueing::QueueBasedTokenGenerator::receiveSignal",
     "info": "packetPulled"
    },
    {
     "call from": "inet.queueing.tokengenerator.QueueBasedTokenGenerator",
     "function": "inet::queueing::QueueBasedTokenGenerator::receiveSignal",
     "info": "packetPulled"
    }
   ]
  },
  "inet.queueing.tokengenerator.SignalBasedTokenGenerator": {
   "CALL": [
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::SignalBasedTokenGenerator::receiveSignal",
     "info": "tokensDepleted"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::SignalBasedTokenGenerator::receiveSignal",
     "info": "packetDropped"
    }
   ]
  },
  "inet.queueing.tokengenerator.TimeBasedTokenGenerator": {
   "CALL": [
    {
     "call to": "inet.queueing.server.TokenBasedServer",
     "function": "inet::queueing::TokenBasedServer::addTokens",
     "info": "addTokens"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::ClockEvent",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "GenerationTimer",
     "context": ""
    }
   ]
  },
  "inet.routing.aodv.Aodv": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::dropQueuedDatagram",
     "info": "dropQueuedDatagram()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::aodv::Aodv::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.acking.AckingMac",
     "function": "inet::aodv::Aodv::receiveSignal",
     "info": "linkBroken"
    },
    {
     "call from": "inet.linklayer.csmaca.CsmaCaMac",
     "function": "inet::aodv::Aodv::receiveSignal",
     "info": "linkBroken"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::aodv::Aodv::receiveSignal",
     "info": "linkBroken"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::aodv::Aodv::datagramForwardHook",
     "info": "datagramForwardHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::aodv::Aodv::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::aodv::Aodv::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "Packet",
     "chunkType": "inet::aodv::Rerr"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::aodv::Rrep"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::aodv::Rreq"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::aodv::AodvControlPacket"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::aodv::PacketHolderMessage",
     "kind": "100",
     "ctrl": "",
     "tags": [],
     "msgname": "aodv-send-jitter",
     "context": ""
    },
    {
     "msg": "inet::aodv::WaitForRrep",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "BlackListTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "CounterTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ExpungeTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "RrepAckTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ]
  },
  "inet.routing.bgpv4.Bgp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::ospfv2::Ospfv2::checkExternalRoute",
     "info": "checkExternalRoute"
    },
    {
     "call to": "inet.routing.ospfv2.Ospfv2",
     "function": "inet::ospfv2::Ospfv2::insertExternalRoute",
     "info": "insertExternalRoute"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
     "ctrl": "inet::TcpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
     "ctrl": "inet::TcpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.tcp.Tcp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::bgp::BgpKeepAliveMessage"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::bgp::BgpOpenMessage"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::bgp::BgpUpdateMessage"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "81 (inet::bgp::BgpSelfMsgKind::START_EVENT_KIND)",
     "ctrl": "",
     "tags": [],
     "msgname": "BGP Start",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "82 (inet::bgp::BgpSelfMsgKind::CONNECT_RETRY_KIND)",
     "ctrl": "",
     "tags": [],
     "msgname": "BGP Connect Retry",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "83 (inet::bgp::BgpSelfMsgKind::HOLD_TIME_KIND)",
     "ctrl": "",
     "tags": [],
     "msgname": "BGP Hold Timer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "89 (inet::bgp::BgpSelfMsgKind::KEEP_ALIVE_KIND)",
     "ctrl": "",
     "tags": [],
     "msgname": "BGP Keep Alive Timer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.routing.dsdv.Dsdv": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Dsdv::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::DsdvHello"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::DsdvHello"
    },
    {
     "packetAction": "peekData",
     "chunkType": "inet::DsdvHello"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "event",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.routing.dymo.Dymo": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::removeRoute",
     "info": "removeRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopForwarding::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopForwarding::reinjectQueuedDatagram",
     "info": "reinjectDatagram()"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%s)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::removeRoute",
     "info": "removeRoute(...)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::dymo::Dymo::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::dymo::Dymo::receiveSignal",
     "info": "linkBroken"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::dymo::Dymo::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::dymo::Dymo::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::dymo::Dymo::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::dymo::Dymo::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::dymo::Dymo::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::dymo::Dymo::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::dymo::Rerr"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::dymo::Rrep"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::dymo::Rreq"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::dymo::DymoPacket"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::UdpHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "inet::dymo::PacketJitterTimer",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "PacketJitterTimer",
     "context": ""
    },
    {
     "msg": "inet::dymo::RreqBackoffTimer",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "RreqBackoffTimer",
     "context": ""
    },
    {
     "msg": "inet::dymo::RreqWaitRrepTimer",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "RreqWaitRrepTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.routing.eigrp.EigrpRtp6": {
   "INPUT": [
    {
     "gate": "pdmIn",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "gate": "pdmIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ],
   "OUTPUT": [
    {
     "gate": "pdmOut",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpMessage"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ]
  },
  "inet.routing.eigrp.EigrpRtp": {
   "INPUT": [
    {
     "gate": "pdmIn",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "gate": "pdmIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ],
   "OUTPUT": [
    {
     "gate": "pdmOut",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpMessage"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ]
  },
  "inet.routing.eigrp.EigrpSplitter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "splitter6In",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "gate": "splitterIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "splitter6Out",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "gate": "splitterOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.routing.eigrp.pdms.EigrpIpv4Pdm": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupLeft"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::removeRoute",
     "info": "removeRoute(...)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "routeDeleted"
    }
   ],
   "INPUT": [
    {
     "gate": "rtpIn",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.routing.eigrp.EigrpRtp"
    },
    {
     "gate": "splitterIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.eigrp.EigrpSplitter"
    }
   ],
   "OUTPUT": [
    {
     "gate": "rtpOut",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.routing.eigrp.EigrpRtp"
    },
    {
     "gate": "rtpOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.eigrp.EigrpRtp"
    },
    {
     "gate": "splitterOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.routing.eigrp.EigrpSplitter"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv4Ack"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv4Hello"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv4Query"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv4Reply"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv4Update"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv4Ack"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv4Hello"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv4Query"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv4Reply"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv4Update"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpMessage"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "EigrpTimer",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.routing.eigrp.pdms.EigrpIpv6Pdm": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv4Pdm",
     "function": "inet::eigrp::EigrpIpv4Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call to": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "routeDeleted"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "interfaceConfigChanged"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call from": "inet.routing.eigrp.pdms.EigrpIpv6Pdm",
     "function": "inet::eigrp::EigrpIpv6Pdm::receiveSignal",
     "info": "routeDeleted"
    }
   ],
   "INPUT": [
    {
     "gate": "rtpIn",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.routing.eigrp.EigrpRtp6"
    },
    {
     "gate": "splitterIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.eigrp.EigrpSplitter"
    }
   ],
   "OUTPUT": [
    {
     "gate": "rtpOut",
     "msg": "inet::EigrpMsgReq",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.routing.eigrp.EigrpRtp6"
    },
    {
     "gate": "rtpOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.eigrp.EigrpRtp6"
    },
    {
     "gate": "splitterOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.routing.eigrp.EigrpSplitter"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv6Ack"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv6Hello"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv6Query"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv6Reply"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::EigrpIpv6Update"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv6Ack"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv6Hello"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv6Query"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv6Reply"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpIpv6Update"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::EigrpMessage"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "EigrpTimer",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.routing.gpsr.Gpsr": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::NextHopForwarding::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.nexthop.NextHopRoutingTable",
     "function": "inet::NextHopRoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Gpsr::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf",
     "function": "inet::Gpsr::receiveSignal",
     "info": "linkBroken"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Gpsr::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Gpsr::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Gpsr::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Gpsr::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::Gpsr::datagramLocalOutHook",
     "info": "datagramLocalOutHook"
    },
    {
     "call from": "inet.networklayer.nexthop.NextHopForwarding",
     "function": "inet::Gpsr::datagramPreRoutingHook",
     "info": "datagramPreRoutingHook"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.nexthop.NextHopForwarding"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::GpsrBeacon"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::NextHopForwardingHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::GpsrBeacon"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::NextHopForwardingHeader"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "BeaconTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::NextHopAddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::NextHopInterfaceData"
    }
   ]
  },
  "inet.routing.ospfv2.Ospfv2": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::ospfv2::Ospfv2::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::ospfv2::Ospfv2::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.routing.bgpv4.Bgp",
     "function": "inet::ospfv2::Ospfv2::checkExternalRoute",
     "info": "checkExternalRoute"
    },
    {
     "call from": "inet.routing.bgpv4.Bgp",
     "function": "inet::ospfv2::Ospfv2::insertExternalRoute",
     "info": "insertExternalRoute"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv2::Ospfv2DatabaseDescriptionPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv2::Ospfv2HelloPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv2::Ospfv2LinkStateAcknowledgementPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv2::Ospfv2LinkStateRequestPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv2::Ospfv2LinkStateUpdatePacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv2::Ospfv2DatabaseDescriptionPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv2::Ospfv2HelloPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv2::Ospfv2LinkStateAcknowledgementPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv2::Ospfv2LinkStateRequestPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv2::Ospfv2LinkStateUpdatePacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv2::Ospfv2Packet"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0 (inet::ospfv2::Ospfv2TimerType::INTERFACE_HELLO_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Interface::InterfaceHelloTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1 (inet::ospfv2::Ospfv2TimerType::INTERFACE_WAIT_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Interface::InterfaceWaitTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3 (inet::ospfv2::Ospfv2TimerType::INTERFACE_ACKNOWLEDGEMENT_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Interface::InterfaceAcknowledgementTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "4 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_INACTIVITY_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Neighbor::NeighborInactivityTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "6 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_DD_RETRANSMISSION_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Neighbor::NeighborDDRetransmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "7 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_UPDATE_RETRANSMISSION_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Neighbor::Neighbor::NeighborUpdateRetransmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "8 (inet::ospfv2::Ospfv2TimerType::NEIGHBOR_REQUEST_RETRANSMISSION_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Neighbor::NeighborRequestRetransmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "9 (inet::ospfv2::Ospfv2TimerType::DATABASE_AGE_TIMER)",
     "ctrl": "",
     "tags": [],
     "msgname": "Router::DatabaseAgeTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.routing.ospfv3.Ospfv3Splitter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.routing.ospfv3.process.Ospfv3Process",
     "function": "inet::ospfv3::Ospfv3Process::activateProcess",
     "info": "activateProcess"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "processIn[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "processOut[]",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ],
   "STAG": [
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.routing.ospfv3.process.Ospfv3Process": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::findInterfaceByName",
     "info": "findInterfaceByName"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.routing.ospfv3.Ospfv3Splitter",
     "function": "inet::ospfv3::Ospfv3Process::activateProcess",
     "info": "activateProcess"
    }
   ],
   "INPUT": [
    {
     "gate": "splitterIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.ospfv3.Ospfv3Splitter"
    }
   ],
   "OUTPUT": [
    {
     "gate": "splitterOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.routing.ospfv3.Ospfv3Splitter"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv3::Ospfv3DatabaseDescriptionPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv3::Ospfv3HelloPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv3::Ospfv3LinkStateAcknowledgementPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv3::Ospfv3LinkStateRequestPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ospfv3::Ospfv3LinkStateUpdatePacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv3::Ospfv3DatabaseDescriptionPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv3::Ospfv3HelloPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv3::Ospfv3LinkStateAcknowledgementPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv3::Ospfv3LinkStateRequestPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv3::Ospfv3LinkStateUpdatePacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::ospfv3::Ospfv3Packet"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "10",
     "ctrl": "",
     "tags": [],
     "msgname": "",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNInterface::HelloTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "2",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNInterface::WaitTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNNeighbor::NeighborInactivityTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "5",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNNeighbor::NeighborDDRetransmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "6",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNNeighbor::Neighbor::NeighborUpdateRetransmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "7",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNsNeighbor::NeighborRequestRetransmissionTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "8",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNInterface::AcknowledgementTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "9",
     "ctrl": "",
     "tags": [],
     "msgname": "OspfvNProcess::DatabaseAgeTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.routing.pim.modes.PimDm": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addMulticastRoute",
     "info": "addMulticastRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.routing.pim.tables.PimNeighborTable",
     "function": "inet::PimNeighborTable::addNeighbor",
     "info": "addNeighbor"
    },
    {
     "call to": "inet.routing.pim.tables.PimNeighborTable",
     "function": "inet::PimNeighborTable::restartLivenessTimer",
     "info": "restartLivenessTimer"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4MulticastGroupRegistered"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4DataOnNonrpf"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4DataOnRpf"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::PimDm::receiveSignal",
     "info": "ipv4NewMulticast"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::PimDm::receiveSignal",
     "info": "routeAdded"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.pim.PimSplitter"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.routing.pim.PimSplitter"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimAssert"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimGraft"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimHello"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimJoinPrune"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimAssert"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimGraft"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimHello"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimJoinPrune"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimPacket"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "PIM HelloTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "3",
     "ctrl": "",
     "tags": [],
     "msgname": "PimAssertTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "4",
     "ctrl": "",
     "tags": [],
     "msgname": "PimPruneTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "5",
     "ctrl": "",
     "tags": [],
     "msgname": "PimPrunePendingTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "7",
     "ctrl": "",
     "tags": [],
     "msgname": "PIMOverrideTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.routing.pim.modes.PimSm": {
   "CALL": [
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addMulticastRoute",
     "info": "addMulticastRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::findBestMatchingRoute",
     "info": "findBestMatchingRoute(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "pimNeighborChanged"
    },
    {
     "call to": "inet.routing.pim.tables.PimNeighborTable",
     "function": "inet::PimNeighborTable::addNeighbor",
     "info": "addNeighbor"
    },
    {
     "call to": "inet.routing.pim.tables.PimNeighborTable",
     "function": "inet::PimNeighborTable::restartLivenessTimer",
     "info": "restartLivenessTimer"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4MulticastGroupRegistered"
    },
    {
     "call from": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4MulticastGroupUnregistered"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4DataOnRpf"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4MdataRegister"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::PimSm::receiveSignal",
     "info": "ipv4NewMulticast"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "pimNeighborChanged"
    },
    {
     "call from": "inet.routing.pim.tables.PimNeighborTable",
     "function": "inet::PimSm::receiveSignal",
     "info": "pimNeighborAdded"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.pim.PimSplitter"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.routing.pim.PimSplitter"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::HopLimitReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::L3AddressReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.pim.PimSplitter"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimHello"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimJoinPrune"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimRegister"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::PimRegisterStop"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimHello"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimJoinPrune"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimRegisterStop"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::PimRegister"
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "12",
     "ctrl": "",
     "tags": [],
     "msgname": "PIMRegisterStopTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "14",
     "ctrl": "",
     "tags": [],
     "msgname": "PIMJoinTimer",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "1",
     "ctrl": "",
     "tags": [],
     "msgname": "PIM HelloTimer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "5",
     "ctrl": "",
     "tags": [],
     "msgname": "PIMPrunePendingTimer",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.routing.pim.Pim": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    }
   ]
  },
  "inet.routing.pim.PimSplitter": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "pimDMIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.pim.modes.PimDm"
    },
    {
     "gate": "pimSMIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.routing.pim.modes.PimSm"
    },
    {
     "gate": "pimSMIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::HopLimitReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::L3AddressReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.routing.pim.modes.PimSm"
    }
   ],
   "OUTPUT": [
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::HopLimitReq",
      "inet::InterfaceInd",
      "inet::InterfaceReq",
      "inet::L3AddressInd",
      "inet::L3AddressReq",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "pimDMOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.pim.modes.PimDm"
    },
    {
     "gate": "pimSMOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "destModule": "inet.routing.pim.modes.PimSm"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::PimPacket"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.routing.pim.tables.PimNeighborTable": {
   "CALL": [
    {
     "call to": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimSm::receiveSignal",
     "info": "pimNeighborAdded"
    },
    {
     "call to": "inet.routing.pim.tables.PimNeighborTable",
     "function": "inet::PimNeighborTable::restartLivenessTimer",
     "info": "restartLivenessTimer"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.routing.pim.modes.PimDm",
     "function": "inet::PimNeighborTable::addNeighbor",
     "info": "addNeighbor"
    },
    {
     "call from": "inet.routing.pim.modes.PimDm",
     "function": "inet::PimNeighborTable::restartLivenessTimer",
     "info": "restartLivenessTimer"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimNeighborTable::addNeighbor",
     "info": "addNeighbor"
    },
    {
     "call from": "inet.routing.pim.modes.PimSm",
     "function": "inet::PimNeighborTable::restartLivenessTimer",
     "info": "restartLivenessTimer"
    },
    {
     "call from": "inet.routing.pim.tables.PimNeighborTable",
     "function": "inet::PimNeighborTable::restartLivenessTimer",
     "info": "restartLivenessTimer"
    }
   ]
  },
  "inet.routing.rip.Rip": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::addRoute",
     "info": "addRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::deleteRoute",
     "info": "deleteRoute(...)"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::isLocalAddress",
     "info": "isLocalAddress(%s)"
    },
    {
     "call to": "inet.routing.rip.Rip",
     "function": "inet::Rip::receiveSignal",
     "info": "routeChanged"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Rip::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.networklayer.common.InterfaceTable",
     "function": "inet::Rip::receiveSignal",
     "info": "interfaceStateChanged"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Rip::receiveSignal",
     "info": "routeAdded"
    },
    {
     "call from": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Rip::receiveSignal",
     "info": "routeDeleted"
    },
    {
     "call from": "inet.routing.rip.Rip",
     "function": "inet::Rip::receiveSignal",
     "info": "routeChanged"
    }
   ],
   "INPUT": [
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetMulticastLoopCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "socketOut",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::RipPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::RipPacket"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "RIP-shutdown",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "RIP-startup",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "RIP-timer",
     "context": ""
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "RIP-trigger",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "clearTags",
     "tagType": ""
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::HopLimitInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L4PortInd"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.transportlayer.rtp.Rtcp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    }
   ],
   "INPUT": [
    {
     "gate": "rtpIn",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "udpIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "rtpOut",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "udpOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "udpOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "udpOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::rtp::RtcpByePacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::rtp::RtcpReceiverReportPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::rtp::RtcpSdesPacket"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::rtp::RtcpSenderReportPacket"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::rtp::RtpHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::rtp::RtcpPacket"
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "Interval",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.transportlayer.rtp.Rtp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    }
   ],
   "INPUT": [
    {
     "gate": "appIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiCreateSenderModule",
     "tags": [],
     "srcModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "appIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiEnterSession",
     "tags": [],
     "srcModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "appIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiLeaveSession",
     "tags": [],
     "srcModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "appIn",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSenderControl",
     "tags": [],
     "srcModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "profileIn",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.RtpAvProfile"
    },
    {
     "gate": "rtcpIn",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "gate": "udpIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "srcModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "appOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSenderModuleCreated",
     "tags": [],
     "destModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "appOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSenderStatus",
     "tags": [],
     "destModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "appOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSessionEntered",
     "tags": [],
     "destModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "appOut",
     "msg": "inet::rtp::RtpControlMsg",
     "kind": "0",
     "ctrl": "inet::rtp::RtpCiSessionLeft",
     "tags": [],
     "destModule": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "gate": "profileOut",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.RtpAvProfile"
    },
    {
     "gate": "rtcpOut",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "gate": "udpOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "udpOut",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    },
    {
     "gate": "udpOut",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "destModule": "inet.transportlayer.udp.Udp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::rtp::RtpHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "getAllTags",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    }
   ]
  },
  "inet.transportlayer.rtp.RtpAvProfile": {
   "INPUT": [
    {
     "gate": "payloadSenderIn",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.RtpAvProfilePayload32Sender"
    },
    {
     "gate": "rtpIn",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    }
   ],
   "OUTPUT": [
    {
     "gate": "payloadReceiverOut[]",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.RtpAvProfilePayload32Receiver"
    },
    {
     "gate": "payloadSenderOut",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.RtpAvProfilePayload32Sender"
    },
    {
     "gate": "rtpOut",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.Rtp"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::rtp::RtpHeader"
    }
   ]
  },
  "inet.transportlayer.rtp.RtpAvProfilePayload32Receiver": {
   "INPUT": [
    {
     "gate": "profileIn",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.RtpAvProfile"
    }
   ],
   "PACKET": [
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::rtp::RtpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::rtp::RtpMpegHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::rtp::RtpHeader"
    }
   ]
  },
  "inet.transportlayer.rtp.RtpAvProfilePayload32Sender": {
   "INPUT": [
    {
     "gate": "profileIn",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "srcModule": "inet.transportlayer.rtp.RtpAvProfile"
    }
   ],
   "OUTPUT": [
    {
     "gate": "profileOut",
     "msg": "inet::rtp::RtpInnerPacket",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "destModule": "inet.transportlayer.rtp.RtpAvProfile"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::rtp::RtpMpegHeader"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::rtp::RtpHeader"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "nextFrame",
     "context": ""
    }
   ]
  },
  "inet.transportlayer.sctp.Sctp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4RoutingTable",
     "function": "inet::Ipv4RoutingTable::getInterfaceForDestAddr",
     "info": "getInterfaceForDestAddr(%u.%u.%u.%u)"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6RoutingTable",
     "function": "inet::Ipv6RoutingTable::doLongestPrefixMatch",
     "info": "doLongestPrefixMatch(%s)"
    }
   ],
   "INPUT": [
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "3 (inet::SctpCommandCode::SCTP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "9 (inet::SctpCommandCode::SCTP_C_SEND_ORDERED)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "12 (inet::SctpCommandCode::SCTP_C_QUEUE_BYTES_LIMIT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpInfoReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "13 (inet::SctpCommandCode::SCTP_C_QUEUE_MSGS_LIMIT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpInfoReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "14 (inet::SctpCommandCode::SCTP_C_SHUTDOWN)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "15 (inet::SctpCommandCode::SCTP_C_NO_OUTSTANDING)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::SctpCommandCode::SCTP_C_ASSOCIATE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::SctpCommandCode::SCTP_C_ASSOCIATE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "22 (inet::SctpCommandCode::SCTP_C_GETSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "25 (inet::SctpCommandCode::SCTP_C_ACCEPT_SOCKET_ID)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpAvailableReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "25 (inet::SctpCommandCode::SCTP_C_ACCEPT_SOCKET_ID)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpAvailableReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::SctpCommandCode::SCTP_C_OPEN_PASSIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::SctpCommandCode::SCTP_C_OPEN_PASSIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpOpenReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::SctpCommandCode::SCTP_C_CLOSE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpCommandReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "6 (inet::SctpCommandCode::SCTP_C_ABORT)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "8 (inet::SctpCommandCode::SCTP_C_RECEIVE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SctpSendReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "10 (inet::SctpStatusInd::SCTP_I_ABORT)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "12 (inet::SctpStatusInd::SCTP_I_SEND_MSG)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "13 (inet::SctpStatusInd::SCTP_I_SHUTDOWN_RECEIVED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "14 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_FULL)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "15 (inet::SctpStatusInd::SCTP_I_SENDQUEUE_ABATED)",
     "ctrl": "",
     "tags": [
      "inet::SctpSendQueueAbatedReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "21 (inet::SctpStatusInd::SCTP_I_SENDSOCKETOPTIONS)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "22 (inet::SctpStatusInd::SCTP_I_AVAILABLE)",
     "ctrl": "",
     "tags": [
      "inet::SctpAvailableReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "22 (inet::SctpStatusInd::SCTP_I_AVAILABLE)",
     "ctrl": "",
     "tags": [
      "inet::SctpAvailableReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::SctpStatusInd::SCTP_I_DATA_NOTIFICATION)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::SctpStatusInd::SCTP_I_DATA_NOTIFICATION)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
     "ctrl": "",
     "tags": [
      "inet::SctpConnectReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
     "ctrl": "",
     "tags": [
      "inet::SctpConnectReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::SctpStatusInd::SCTP_I_ESTABLISHED)",
     "ctrl": "",
     "tags": [
      "inet::SctpConnectReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::SctpStatusInd::SCTP_I_PEER_CLOSED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "5 (inet::SctpStatusInd::SCTP_I_CLOSED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "5 (inet::SctpStatusInd::SCTP_I_CLOSED)",
     "ctrl": "",
     "tags": [
      "inet::SctpCommandReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::SctpStatusInd::SCTP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SctpRcvReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::SctpStatusInd::SCTP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SctpRcvReq",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.sctpapp.SctpServer"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::SocketReq",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::sctp::SctpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::sctp::SctpHeader"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    }
   ],
   "RTAG": [
    {
     "tagAction": "addTag",
     "tagType": "inet::CreationTimeTag"
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "CWND_TIMER N:NN.N.N.N",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "HB_INT_TIMER N:NN.N.N.N",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "HB_INT_TIMER NN:NN.N.N.N",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "HB_INT_TIMER NN:NN.N.N.NN",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "HB_TIMER NN:NN.N.N.N",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "RTX_TIMER N:NN.N.N.N",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "RTX_TIMER NN:NN.N.N.NN",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "inet::SctpPathInfo",
     "tags": [],
     "msgname": "SACK_TIMER of assoc NN",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::TransportProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpAvailableReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpCommandReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpConnectReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpRcvReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SctpSendQueueAbatedReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpAvailableReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpCommandReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpInfoReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpOpenReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpResetReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::SctpSendReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SctpSendReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.transportlayer.sctp.SctpCrcInsertion": {
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::sctp::SctpCrcInsertion::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::sctp::SctpCrcInsertion::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    }
   ],
   "PACKET": [
    {
     "packetAction": "eraseAtFront",
     "chunkType": ""
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::sctp::SctpHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::sctp::SctpHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.transportlayer.tcp_common.TcpCrcInsertionHook": {
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::tcp::TcpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::tcp::TcpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    }
   ],
   "PACKET": [
    {
     "packetAction": "eraseAtFront",
     "chunkType": ""
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.transportlayer.tcp_lwip.TcpLwip": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    }
   ],
   "INPUT": [
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "Packet",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "trimFront",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "lwip_fast_timer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::TransportProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::TransportProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ]
  },
  "inet.transportlayer.tcp.Tcp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.common.scenario.ScenarioManager",
     "function": "inet::ScenarioManager::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::power::SimpleEpEnergyManagement::moduleOperationStageCompleted",
     "info": "moduleOperationStageCompleted"
    },
    {
     "call to": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::TcpConnection::initConnection",
     "info": "initConnection"
    },
    {
     "call to": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::TcpConnection::processAppCommand",
     "info": "processAppCommand"
    },
    {
     "call to": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::TcpConnection::processTCPSegment",
     "info": "processTCPSegment"
    },
    {
     "call to": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::Tcp::sendFromConn",
     "info": "sendFromConn"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::tcp::Tcp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::tcp::Tcp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::tcp::Tcp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::Tcp::sendFromConn",
     "info": "sendFromConn"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::Tcp::sendFromConn",
     "info": "sendFromConn"
    }
   ],
   "INPUT": [
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "4 (inet::TcpCommandCode::TCP_C_SEND)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
     "ctrl": "inet::TcpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "11 (inet::TcpCommandCode::TCP_C_SETOPTION)",
     "ctrl": "inet::TcpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::TcpCommandCode::TCP_C_OPEN_ACTIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpServerListener"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::TcpCommandCode::TCP_C_OPEN_PASSIVE)",
     "ctrl": "inet::TcpOpenCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::TcpCommandCode::TCP_C_ACCEPT)",
     "ctrl": "inet::TcpAcceptCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "5 (inet::TcpCommandCode::TCP_C_CLOSE)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "6 (inet::TcpCommandCode::TCP_C_ABORT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "8 (inet::TcpCommandCode::TCP_C_QUEUE_BYTES_LIMIT)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DropEligibleInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::PcpInd",
      "inet::TosInd",
      "inet::UserPriorityInd",
      "inet::VlanInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpServerListener"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "3 (inet::TcpStatusInd::TCP_I_AVAILABLE)",
     "ctrl": "inet::TcpAvailableInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "4 (inet::TcpStatusInd::TCP_I_ESTABLISHED)",
     "ctrl": "inet::TcpConnectInfo",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "5 (inet::TcpStatusInd::TCP_I_PEER_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "6 (inet::TcpStatusInd::TCP_I_CLOSED)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "8 (inet::TcpStatusInd::TCP_I_CONNECTION_RESET)",
     "ctrl": "inet::TcpCommand",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.common.misc.MessageChecker"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "1 (inet::TcpStatusInd::TCP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.bgpv4.Bgp"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::EcnReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::EcnReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::EcnReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "ActiveOperationExtraTimer",
     "context": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::TransportProtocolInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::EcnInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    }
   ]
  },
  "inet.transportlayer.tcp.TcpConnection": {
   "CALL": [
    {
     "call to": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::TcpConnection::initClonedConnection",
     "info": "initClonedConnection"
    },
    {
     "call to": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::TcpConnection::initConnection",
     "info": "initConnection"
    },
    {
     "call to": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::Tcp::sendFromConn",
     "info": "sendFromConn"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::TcpConnection::initClonedConnection",
     "info": "initClonedConnection"
    },
    {
     "call from": "inet.transportlayer.tcp.TcpConnection",
     "function": "inet::tcp::TcpConnection::initConnection",
     "info": "initConnection"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::TcpConnection::initConnection",
     "info": "initConnection"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::TcpConnection::processAppCommand",
     "info": "processAppCommand"
    },
    {
     "call from": "inet.transportlayer.tcp.Tcp",
     "function": "inet::tcp::TcpConnection::processTCPSegment",
     "info": "processTCPSegment"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::bgp::BgpKeepAliveMessage"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::bgp::BgpOpenMessage"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::bgp::BgpUpdateMessage"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::ByteCountChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::GenericAppMsg"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SequenceChunk"
    },
    {
     "packetAction": "insertAtBack",
     "chunkType": "inet::SliceChunk"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::tcp::TcpHeader"
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    }
   ],
   "SCHEDULE": [
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "DELAYEDACK",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "NMSL",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "REXMIT",
     "context": "filled"
    },
    {
     "msg": "omnetpp::cMessage",
     "kind": "0",
     "ctrl": "",
     "tags": [],
     "msgname": "SYN-REXMIT",
     "context": "filled"
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::EcnReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::TransportProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::HopLimitReq"
    }
   ]
  },
  "inet.transportlayer.udp.Udp": {
   "CALL": [
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::arrived",
     "info": "arrived"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterProtocol",
     "info": "handleRegisterProtocol"
    },
    {
     "call to": "inet.common.MessageDispatcher",
     "function": "inet::MessageDispatcher::handleRegisterService",
     "info": "handleRegisterService"
    },
    {
     "call to": "inet.networklayer.common.InterfaceTable",
     "function": "inet::InterfaceTable::interfaceChanged",
     "info": "interfaceChanged"
    },
    {
     "call to": "inet.networklayer.icmpv6.Icmpv6",
     "function": "inet::Icmpv6::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    },
    {
     "call to": "inet.networklayer.ipv4.Icmp",
     "function": "inet::Icmp::sendErrorMessage",
     "info": "sendErrorMessage(datagram, type=%d, code=%d)"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupJoined"
    },
    {
     "call to": "inet.networklayer.ipv4.Igmpv2",
     "function": "inet::Igmpv2::receiveSignal",
     "info": "ipv4MulticastGroupLeft"
    },
    {
     "call to": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::Ipv4::registerHook",
     "info": "registerHook()"
    },
    {
     "call to": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::Ipv6::registerHook",
     "info": "registerHook()"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.common.scenario.ScenarioManager",
     "function": "inet::Udp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.management.SimpleEpEnergyManagement",
     "function": "inet::Udp::handleOperationStage",
     "info": "handleOperationStage"
    },
    {
     "call from": "inet.power.storage.SimpleEpEnergyStorage",
     "function": "inet::Udp::handleOperationStage",
     "info": "handleOperationStage"
    }
   ],
   "INPUT": [
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.aodv.Aodv"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::L4PortReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpCommandCode::UDP_C_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tunapp.TunnelApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tunapp.TunnelApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voip.SimpleVoipReceiver"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.aodv.Aodv"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "1 (inet::UdpCommandCode::UDP_C_BIND)",
     "ctrl": "inet::UdpBindCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
     "ctrl": "inet::UdpConnectCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
     "ctrl": "inet::UdpConnectCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.tunapp.TunnelApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "2 (inet::UdpCommandCode::UDP_C_CONNECT)",
     "ctrl": "inet::UdpConnectCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpJoinMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpLeaveMulticastGroupsCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetBroadcastCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.aodv.Aodv"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetMulticastInterfaceCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetMulticastLoopCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetMulticastLoopCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "3 (inet::UdpCommandCode::UDP_C_SETOPTION)",
     "ctrl": "inet::UdpSetTimeToLiveCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.dhcp.DhcpServer"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.aodv.Aodv"
    },
    {
     "gate": "appIn",
     "msg": "inet::Request",
     "kind": "4 (inet::UdpCommandCode::UDP_C_CLOSE)",
     "ctrl": "inet::UdpCloseCommand",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::SocketReq"
     ],
     "srcModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd",
      "inet::UserPriorityInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressInd",
      "inet::PacketProtocolTag"
     ],
     "srcModule": "inet.networklayer.ipv4.Icmp"
    },
    {
     "gate": "ipIn",
     "msg": "inet::Packet",
     "kind": "4",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::PacketProtocolTag",
      "inet::TosInd"
     ],
     "srcModule": "inet.networklayer.ipv4.Ipv4"
    }
   ],
   "OUTPUT": [
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "1 (inet::UdpStatusInd::UDP_I_ERROR)",
     "ctrl": "inet::UdpErrorIndication",
     "tags": [
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.dhcp.DhcpClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.dhcp.DhcpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.networklayer.ldp.Ldp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Indication",
     "kind": "2 (inet::UdpStatusInd::UDP_I_SOCKET_CLOSED)",
     "ctrl": "inet::UdpSocketClosedIndication",
     "tags": [
      "inet::SocketInd"
     ],
     "destModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolInd",
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.dhcp.DhcpClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.routing.aodv.Aodv"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::physicallayer::Ieee80211ChannelInd",
      "inet::physicallayer::Ieee80211ModeInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.routing.aodv.Aodv"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::ErrorRateInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SignalPowerInd",
      "inet::SignalTimeInd",
      "inet::SnirInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.routing.aodv.Aodv"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::Ieee802SapInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd",
      "inet::UserPriorityInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.dhcp.DhcpClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.dhcp.DhcpServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::MacAddressInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.tunapp.TunnelApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSink"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.voip.SimpleVoipReceiver"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.routing.rip.Rip"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "gate": "appOut",
     "msg": "inet::Packet",
     "kind": "0 (inet::UdpStatusInd::UDP_I_DATA)",
     "ctrl": "",
     "tags": [
      "inet::DscpInd",
      "inet::EcnInd",
      "inet::HopLimitInd",
      "inet::InterfaceInd",
      "inet::L3AddressInd",
      "inet::L4PortInd",
      "inet::NetworkProtocolInd",
      "inet::SocketInd",
      "inet::TosInd",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.transportlayer.rtp.Rtp"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DirectionTag",
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::HopLimitReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::InterfaceReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "gate": "ipOut",
     "msg": "inet::Packet",
     "kind": "0",
     "ctrl": "",
     "tags": [
      "inet::DispatchProtocolReq",
      "inet::L3AddressReq",
      "inet::MulticastReq",
      "inet::PacketProtocolTag",
      "inet::TransportProtocolInd"
     ],
     "destModule": "inet.networklayer.nexthop.NextHopForwarding"
    }
   ],
   "PACKET": [
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::IcmpHeader"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::Icmpv6Header"
    },
    {
     "packetAction": "peekAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "peekDataAsBytes",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": ""
    },
    {
     "packetAction": "peekDataAt",
     "chunkType": "inet::BytesChunk"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::IcmpHeader"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Icmpv6Header"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "popAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "setFrontOffset",
     "chunkType": ""
    },
    {
     "packetAction": "trim",
     "chunkType": ""
    }
   ],
   "STAG": [
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L3AddressReq"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::L4PortInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "tagType": "inet::TransportProtocolInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::L4PortInd"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::MulticastReq"
    },
    {
     "tagAction": "addTag",
     "tagType": "inet::SocketInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::ErrorRateInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::HopLimitReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceReq"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::MulticastReq"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::L3AddressInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::SocketReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::DispatchProtocolReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::L4PortReq"
    },
    {
     "tagAction": "removeTagIfPresent",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::PacketProtocolTag"
    },
    {
     "tagAction": "removeTag",
     "tagType": "inet::SocketReq"
    }
   ],
   "TAG": [
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv4InterfaceData"
    },
    {
     "tagAction": "getTagForUpdate",
     "tagType": "inet::Ipv6InterfaceData"
    }
   ]
  },
  "inet.transportlayer.udp.UdpCrcInsertionHook": {
   "CALLED": [
    {
     "call from": "inet.networklayer.ipv4.Ipv4",
     "function": "inet::UdpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    },
    {
     "call from": "inet.networklayer.ipv6.Ipv6",
     "function": "inet::UdpCrcInsertionHook::datagramPostRoutingHook",
     "info": "datagramPostRoutingHook"
    }
   ],
   "PACKET": [
    {
     "packetAction": "eraseAtFront",
     "chunkType": ""
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv4Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::Ipv6Header"
    },
    {
     "packetAction": "insertAtFront",
     "chunkType": "inet::UdpHeader"
    },
    {
     "packetAction": "peekData",
     "chunkType": ""
    },
    {
     "packetAction": "removeAtFront",
     "chunkType": "inet::UdpHeader"
    }
   ],
   "STAG": [
    {
     "tagAction": "findTag",
     "tagType": "inet::InterfaceInd"
    },
    {
     "tagAction": "findTag",
     "tagType": "inet::NetworkProtocolInd"
    },
    {
     "tagAction": "getTag",
     "tagType": "inet::PacketProtocolTag"
    }
   ]
  },
  "inet.tutorials.queueing.ExampleCompoundPriorityQueue": {
   "CALL": [
    {
     "call to": "inet.queueing.classifier.WrrClassifier",
     "function": "inet::queueing::WrrClassifier::pushPacket",
     "info": "pushPacket"
    },
    {
     "call to": "inet.queueing.scheduler.PriorityScheduler",
     "function": "inet::queueing::PriorityScheduler::pullPacket",
     "info": "pullPacket"
    }
   ],
   "CALLED": [
    {
     "call from": "inet.queueing.sink.ActivePacketSink",
     "function": "inet::queueing::CompoundPacketQueueBase::pullPacket",
     "info": "pullPacket"
    },
    {
     "call from": "inet.queueing.sink.PassivePacketSink",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetDropped"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::CompoundPacketQueueBase::pushPacket",
     "info": "pushPacket"
    },
    {
     "call from": "inet.queueing.source.ActivePacketSource",
     "function": "inet::queueing::CompoundPacketQueueBase::receiveSignal",
     "info": "packetCreated"
    }
   ],
   "RTAG": [
    {
     "tagAction": "mapAllTags",
     "tagType": "inet::FlowTag"
    }
   ]
  },
  "-=Network=-": {
   "CALL": [
    {
     "call to": "inet.linklayer.acking.AckingWirelessInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.bmac.BMacInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.common.WirelessInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.csmaca.CsmaCaInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetCsmaMac",
     "function": "inet::EthernetCsmaMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.basic.EthernetMac",
     "function": "inet::EthernetMac::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.EthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ethernet.LayeredEthernetInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee80211.Ieee80211Interface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.lmac.LMacInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.loopback.LoopbackInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.Ppp",
     "function": "inet::Ppp::receiveSignal",
     "info": "PRE_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.ppp.PppInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.shortcut.ShortcutInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.tun.TunInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.virtual.VirtualInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.linklayer.xmac.XMacInterface",
     "function": "inet::NetworkInterface::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.node.ethernet.EthernetHub",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    },
    {
     "call to": "inet.physicallayer.wired.common.WireJunction",
     "function": "inet::physicallayer::WireJunction::receiveSignal",
     "info": "POST_MODEL_CHANGE"
    }
   ]
  }
 },
 "msg": {
  "": {
   "CHUNK_USAGE": [
    {
     "action": "eraseAtFront",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "action": "eraseAtFront",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "action": "eraseAtFront",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "action": "eraseAtFront",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "action": "peekAllAsBits",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "peekAllAsBits",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "action": "peekAllAsBytes",
     "module": "inet.emulation.transportlayer.udp.ExtLowerUdp"
    },
    {
     "action": "peekAllAsBytes",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "action": "peekAllAsBytes",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "peekAllAsBytes",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "peekAllAsBytes",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "action": "peekAt",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "peekAt",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "action": "peekDataAsBytes",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "action": "peekDataAt",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "peekDataAt",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "action": "peekDataAt",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "peekDataAt",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "action": "peekData",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "action": "peekData",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "action": "peekData",
     "module": "inet.applications.generic.IpvxTrafSink"
    },
    {
     "action": "peekData",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "action": "peekData",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "action": "peekData",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "action": "peekData",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "action": "peekData",
     "module": "inet.applications.udpapp.UdpSink"
    },
    {
     "action": "peekData",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "action": "peekData",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mac.Ds"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mac.Rx"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "action": "peekData",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "action": "peekData",
     "module": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "action": "peekData",
     "module": "inet.networklayer.diffserv.DiffservQueue"
    },
    {
     "action": "peekData",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "peekData",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.marker.ContentBasedLabeler"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.scheduler.ContentBasedScheduler"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.sink.ActivePacketSink"
    },
    {
     "action": "peekData",
     "module": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "action": "peekData",
     "module": "inet.routing.bgpv4.Bgp"
    },
    {
     "action": "peekData",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "action": "peekData",
     "module": "inet.transportlayer.rtp.Rtp"
    },
    {
     "action": "peekData",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "action": "peekData",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "action": "peekData",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "action": "peekData",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "action": "setBackOffset",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "setBackOffset",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "setBackOffset",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "action": "setBackOffset",
     "module": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "action": "setBackOffset",
     "module": "inet.networklayer.diffserv.DiffservQueue"
    },
    {
     "action": "setBackOffset",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "setBackOffset",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "setBackOffset",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "action": "setBackOffset",
     "module": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "action": "setBackOffset",
     "module": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "action": "setBackOffset",
     "module": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "action": "setBackOffset",
     "module": "inet.queueing.marker.ContentBasedLabeler"
    },
    {
     "action": "setBackOffset",
     "module": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "action": "setBackOffset",
     "module": "inet.queueing.scheduler.ContentBasedScheduler"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.networklayer.diffserv.DiffservQueue"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.queueing.marker.ContentBasedLabeler"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.queueing.scheduler.ContentBasedScheduler"
    },
    {
     "action": "setFrontOffset",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "trimBack",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "trimFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "trimFront",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "trimFront",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "action": "trimFront",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "action": "trimFront",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "action": "trimFront",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "action": "trimFront",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "trimFront",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "action": "trim",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "action": "trim",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "action": "trim",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "action": "trim",
     "module": "inet.linklayer.ieee80211.mac.Ds"
    },
    {
     "action": "trim",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "action": "trim",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "action": "trim",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "trim",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "action": "trim",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "action": "trim",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "action": "trim",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "action": "trim",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "action": "trim",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "action": "trim",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "trim",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "trim",
     "module": "inet.transportlayer.udp.Udp"
    }
   ],
   "STAG_USAGE": [
    {
     "tagAction": "clearTags",
     "module": "inet.applications.tunapp.TunnelApp"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.loopback.Loopback"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.routing.rip.Rip"
    }
   ],
   "TAG_USAGE": [
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.acking.AckingWirelessInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.bmac.BMacInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.common.WirelessInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.csmaca.CsmaCaInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ethernet.EthernetInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ieee80211.Ieee80211Interface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.lmac.LMacInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.loopback.LoopbackInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.ppp.PppInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.shortcut.ShortcutInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.tun.TunInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.virtual.VirtualInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.linklayer.xmac.XMacInterface"
    },
    {
     "tagAction": "clearTags",
     "module": "inet.networklayer.common.InterfaceTable"
    }
   ]
  },
  "inet::AckingMacHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.acking.AckingMac"
    }
   ]
  },
  "inet::aodv::AodvControlPacket": {
   "CHUNK_USAGE": [
    {
     "action": "popAtFront",
     "module": "inet.routing.aodv.Aodv"
    }
   ]
  },
  "inet::aodv::Rerr": {
   "CHUNK_USAGE": [
    {
     "action": "Packet",
     "module": "inet.routing.aodv.Aodv"
    }
   ]
  },
  "inet::aodv::Rrep": {
   "CHUNK_USAGE": [
    {
     "action": "Packet",
     "module": "inet.routing.aodv.Aodv"
    }
   ]
  },
  "inet::aodv::Rreq": {
   "CHUNK_USAGE": [
    {
     "action": "Packet",
     "module": "inet.routing.aodv.Aodv"
    }
   ]
  },
  "inet::ApplicationPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    }
   ]
  },
  "inet::ApskPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    }
   ]
  },
  "inet::ArpPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "action": "popAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    }
   ]
  },
  "inet::bgp::BgpKeepAliveMessage": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.bgpv4.Bgp"
    }
   ]
  },
  "inet::bgp::BgpOpenMessage": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.bgpv4.Bgp"
    }
   ]
  },
  "inet::bgp::BgpUpdateMessage": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.bgpv4.Bgp"
    }
   ]
  },
  "inet::BitCountChunk": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    }
   ]
  },
  "inet::BitsChunk": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "action": "Packet",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "Packet",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    }
   ]
  },
  "inet::BMacControlFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.bmac.BMac"
    }
   ]
  },
  "inet::BMacDataFrameHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.bmac.BMac"
    }
   ]
  },
  "inet::BMacHeaderBase": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.bmac.BMac"
    }
   ]
  },
  "inet::BpduBase": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    }
   ]
  },
  "inet::BpduCfg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    }
   ]
  },
  "inet::BpduTcn": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    }
   ]
  },
  "inet::ByteCountChunk": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtBack",
     "module": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.rtp.RtpAvProfilePayload32Sender"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "Packet",
     "module": "inet.queueing.source.ActivePacketSource"
    },
    {
     "action": "Packet",
     "module": "inet.queueing.source.PassivePacketSource"
    }
   ]
  },
  "inet::BytesChunk": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "insertAtFront",
     "module": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "action": "Packet",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "Packet",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "action": "Packet",
     "module": "inet.queueing.source.ActivePacketSource"
    },
    {
     "action": "Packet",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "action": "peekDataAt",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.ieee80211.mac.Rx"
    },
    {
     "action": "peekDataAt",
     "module": "inet.queueing.classifier.PacketClassifier"
    },
    {
     "action": "peekDataAt",
     "module": "inet.queueing.queue.PacketQueue"
    },
    {
     "action": "peekDataAt",
     "module": "inet.queueing.scheduler.PacketScheduler"
    },
    {
     "action": "peekDataAt",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::Chunk": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.applications.udpapp.UdpSink"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "action": "popAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "action": "popAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "action": "popAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "action": "popAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "action": "popAtBack",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "action": "popAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "removeAll",
     "module": "inet.networklayer.ipv4.Ipv4"
    }
   ]
  },
  "inet::CreationTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.queueing.source.ActivePacketSource"
    },
    {
     "tagAction": "addTag",
     "module": "inet.queueing.source.PassivePacketSource"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.generic.IpvxTrafSink"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.udpapp.UdpSink"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.queueing.sink.ActivePacketSink"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.queueing.sink.PassivePacketSink"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "tagAction": "getAllTags",
     "module": "inet.transportlayer.rtp.Rtp"
    }
   ]
  },
  "inet::CsmaCaMacAckHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    }
   ]
  },
  "inet::CsmaCaMacDataHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    }
   ]
  },
  "inet::CsmaCaMacHeader": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    }
   ]
  },
  "inet::CsmaCaMacTrailer": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    }
   ]
  },
  "inet::DelayingTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.common.PacketDelayer"
    }
   ]
  },
  "inet::DhcpMessage": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "action": "peekAtFront",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "action": "peekAtFront",
     "module": "inet.applications.dhcp.DhcpServer"
    }
   ]
  },
  "inet::DirectionTag": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.protocolelement.transceiver.PacketReceiver"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.queueing.source.ActivePacketSource"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.queueing.source.PassivePacketSource"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    }
   ]
  },
  "inet::DispatchProtocolInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.vlan.VlanReqMapper"
    }
   ]
  },
  "inet::DispatchProtocolReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpServerListener"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tunapp.TunnelApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpSink"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voip.SimpleVoipReceiver"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ldp.Ldp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.bgpv4.Bgp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.PimSplitter"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.loopback.Loopback"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.MessageDispatcher"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::DropEligibleInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    }
   ]
  },
  "inet::DropEligibleReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    }
   ]
  },
  "inet::DscpInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    }
   ]
  },
  "inet::DscpReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    }
   ]
  },
  "inet::DsdvHello": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "action": "Packet",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "action": "peekData",
     "module": "inet.routing.dsdv.Dsdv"
    }
   ]
  },
  "inet::dymo::DymoPacket": {
   "CHUNK_USAGE": [
    {
     "action": "peekDataAt",
     "module": "inet.routing.dymo.Dymo"
    }
   ]
  },
  "inet::dymo::Rerr": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.dymo.Dymo"
    }
   ]
  },
  "inet::dymo::Rrep": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.dymo.Dymo"
    }
   ]
  },
  "inet::dymo::Rreq": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.dymo.Dymo"
    }
   ]
  },
  "inet::EchoPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "action": "insertAtFront",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "action": "popAtFront",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.common.EchoProtocol"
    }
   ]
  },
  "inet::EcnInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.tcp.Tcp"
    }
   ]
  },
  "inet::EcnReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    }
   ]
  },
  "inet::EigrpIpv4Ack": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ]
  },
  "inet::EigrpIpv4Hello": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ]
  },
  "inet::EigrpIpv4Query": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ]
  },
  "inet::EigrpIpv4Reply": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ]
  },
  "inet::EigrpIpv4Update": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    }
   ]
  },
  "inet::EigrpIpv6Ack": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ]
  },
  "inet::EigrpIpv6Hello": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ]
  },
  "inet::EigrpIpv6Query": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ]
  },
  "inet::EigrpIpv6Reply": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ]
  },
  "inet::EigrpIpv6Update": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ]
  },
  "inet::EigrpMessage": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.EigrpRtp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.EigrpRtp6"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    }
   ]
  },
  "inet::ElapsedTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "addTagsWhereAbsent",
     "module": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.flow.FlowMeasurementRecorder"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.flow.FlowMeasurementStarter"
    }
   ]
  },
  "inet::EligibilityTimeTag": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    }
   ]
  },
  "inet::EncapsulationProtocolReq": {
   "STAG_USAGE": [
    {
     "tagAction": "findTagForUpdate",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "findTagForUpdate",
     "module": "inet.networklayer.ipv4.Ipv4"
    }
   ]
  },
  "inet::ErrorRateInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    }
   ]
  },
  "inet::EtherAppReq": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "action": "peekAtFront",
     "module": "inet.applications.ethernet.EtherAppServer"
    }
   ]
  },
  "inet::EtherAppResp": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.ethernet.EtherAppServer"
    }
   ]
  },
  "inet::EthernetFcs": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "action": "popAtBack",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "action": "popAtBack",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "removeAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "removeAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    }
   ]
  },
  "inet::EthernetMacHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ethernet.common.EthernetFrameClassifier"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "action": "peekAt",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "action": "peekDataAt",
     "module": "inet.queueing.filter.RedDropper"
    },
    {
     "action": "popAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    }
   ]
  },
  "inet::EthernetPadding": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    }
   ]
  },
  "inet::FloodingHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.flooding.Flooding"
    }
   ]
  },
  "inet::FlowTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "addTagsWhereAbsent",
     "module": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.flow.FlowMeasurementRecorder"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.common.ResidenceTimeMeasurer"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.examples.inet.netperfmeter.REDQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.common.EthernetQosQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.vlan.VlanIndFilter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.linklayer.vlan.VlanReqMapper"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.networklayer.diffserv.DiffservQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.protocolelement.common.PacketEmitter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.protocolelement.common.PaddingInserter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.protocolelement.transceiver.PacketReceiver"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.filter.OrdinalBasedDropper"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.filter.RedDropper"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.filter.StatisticalRateLimiter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.flow.FlowMeasurementRecorder"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.gate.PacketGate"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.marker.ContentBasedLabeler"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.marker.PacketTagger"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.meter.ExponentialRateMeter"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.queue.DropTailQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.queue.PacketQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.queue.PriorityQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.queueing.queue.RedDropperQueue"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.tutorials.queueing.ExampleCompoundPriorityQueue"
    }
   ]
  },
  "inet::FragmentationReq": {
   "STAG_USAGE": [
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    }
   ]
  },
  "inet::GenericAppMsg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    }
   ]
  },
  "inet::GpsrBeacon": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    }
   ]
  },
  "inet::GptpBase": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "action": "peekAt",
     "module": "inet.linklayer.ieee8021as.Gptp"
    }
   ]
  },
  "inet::GptpFollowUp": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee8021as.Gptp"
    }
   ]
  },
  "inet::GptpIngressTimeInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021as.Gptp"
    }
   ]
  },
  "inet::GptpPdelayReq": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee8021as.Gptp"
    }
   ]
  },
  "inet::GptpPdelayResp": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee8021as.Gptp"
    }
   ]
  },
  "inet::GptpPdelayRespFollowUp": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee8021as.Gptp"
    }
   ]
  },
  "inet::GptpSync": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee8021as.Gptp"
    }
   ]
  },
  "inet::HopLimitInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.rip.Rip"
    }
   ]
  },
  "inet::HopLimitReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.queueing.marker.PacketTagger"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    }
   ]
  },
  "inet::IcmpEchoReply": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Icmp"
    }
   ]
  },
  "inet::IcmpEchoRequest": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtFront",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.ipv4.Icmp"
    }
   ]
  },
  "inet::IcmpHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "popAtFront",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "popAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "popAtFront",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::Icmpv6DestUnreachableMsg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    }
   ]
  },
  "inet::Icmpv6EchoRequestMsg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.applications.pingapp.PingApp"
    }
   ]
  },
  "inet::Icmpv6Header": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "popAtFront",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "action": "popAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    }
   ]
  },
  "inet::IdentityTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.queueing.source.ActivePacketSource"
    },
    {
     "tagAction": "addTag",
     "module": "inet.queueing.source.PassivePacketSource"
    }
   ]
  },
  "inet::ieee80211::Ieee80211AckFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211AddbaRequest": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211AddbaResponse": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211AssociationRequestFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ]
  },
  "inet::ieee80211::Ieee80211AssociationResponseFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ]
  },
  "inet::ieee80211::Ieee80211AuthenticationFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ]
  },
  "inet::ieee80211::Ieee80211BasicBlockAck": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211BasicBlockAckReq": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211BeaconFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ]
  },
  "inet::ieee80211::Ieee80211BlockAckReq": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211CtsFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211DataHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Ds"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211DataOrMgmtHeader": {
   "CHUNK_USAGE": [
    {
     "action": "hasAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.aggregation.BasicMsduAggregationPolicy"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "peekAt",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "action": "peekAt",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    }
   ]
  },
  "inet::ieee80211::Ieee80211MacHeader": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.Rx"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    }
   ]
  },
  "inet::ieee80211::Ieee80211MacTrailer": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.Ds"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.ieee80211.mac.aggregation.BasicMsduAggregationPolicy"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.ieee80211.mac.fragmentation.BasicFragmentationPolicy"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.ieee80211.mac.Rx"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "removeAtBack",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    }
   ]
  },
  "inet::ieee80211::Ieee80211MgmtHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::Ieee80211MsduSubframeHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    }
   ]
  },
  "inet::ieee80211::Ieee80211ProbeRequestFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    }
   ]
  },
  "inet::ieee80211::Ieee80211ProbeResponseFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "action": "peekData",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ]
  },
  "inet::ieee80211::Ieee80211RtsFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    }
   ]
  },
  "inet::ieee80211::LlcProtocolTag": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    }
   ]
  },
  "inet::Ieee80211SubtypeReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    }
   ]
  },
  "inet::Ieee802154MacHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    }
   ]
  },
  "inet::Ieee8021dInterfaceData": {
   "TAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.configurator.L2NodeConfigurator"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8021d.tester.StpTester"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.configurator.L2NodeConfigurator"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    }
   ]
  },
  "inet::Ieee8021qTagEpdHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    }
   ]
  },
  "inet::Ieee8022LlcHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ]
  },
  "inet::Ieee8022LlcSnapHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    }
   ]
  },
  "inet::Ieee802EpdHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    }
   ]
  },
  "inet::Ieee802SapInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    }
   ]
  },
  "inet::Ieee802SapReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    }
   ]
  },
  "inet::IgmpMessage": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Igmpv3"
    }
   ]
  },
  "inet::IgmpQuery": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Igmpv2"
    }
   ]
  },
  "inet::Igmpv2Leave": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Igmpv2"
    }
   ]
  },
  "inet::Igmpv2Query": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Igmpv2"
    }
   ]
  },
  "inet::Igmpv2Report": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Igmpv2"
    }
   ]
  },
  "inet::Igmpv3Query": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Igmpv3"
    }
   ]
  },
  "inet::Igmpv3Report": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Igmpv3"
    }
   ]
  },
  "inet::InterfaceInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.EthernetInterface"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.LayeredEthernetInterface"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.loopback.Loopback"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "addTag",
     "module": "inet.protocolelement.transceiver.PacketReceiver"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.vlan.VlanIndFilter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.common.NetfilterInfoHook"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.internetcloud.MatrixCloudDelayer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv3.Ospfv3Splitter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.PimSplitter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::InterfaceReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tunapp.TunnelApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.MessageDispatcher"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.vlan.VlanReqMapper"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.common.NetfilterInfoHook"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.internetcloud.MatrixCloudDelayer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    }
   ]
  },
  "inet::Ipv4Header": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "insertAtBack",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "action": "insertDataAt",
     "module": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "action": "insertDataAt",
     "module": "inet.queueing.filter.RedDropper"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.common.QosClassifier"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.queueing.filter.RedDropper"
    },
    {
     "action": "popAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.diffserv.DiffservQueue"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "popAtFront",
     "module": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "action": "popAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "popAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "removeAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "removeDataAt",
     "module": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "action": "removeDataAt",
     "module": "inet.queueing.filter.RedDropper"
    }
   ]
  },
  "inet::Ipv4InterfaceData": {
   "TAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.configurator.ipv4.HostAutoConfigurator"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator"
    },
    {
     "tagAction": "findTagForUpdate",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "findTagForUpdate",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.rtpapp.RtpApplication"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tunapp.TunnelApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpSink"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.scenario.ScenarioManager"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.arp.ipv4.GlobalArp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.common.InterfaceTable"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Ipv4RoutingTable"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ldp.Ldp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.rsvpte.RsvpClassifier"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.rtp.Rtp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.networklayer.configurator.ipv4.HostAutoConfigurator"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NodeConfigurator"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.networklayer.ipv4.Ipv4RoutingTable"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.arp.ipv4.GlobalArp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Ipv4RoutingTable"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ted.Ted"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.bgpv4.Bgp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.modes.PimSm"
    }
   ]
  },
  "inet::Ipv4OptionsReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    }
   ]
  },
  "inet::Ipv6ExtHeaderReq": {
   "STAG_USAGE": [
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    }
   ]
  },
  "inet::Ipv6Header": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "action": "popAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "action": "removeAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    }
   ]
  },
  "inet::Ipv6InterfaceData": {
   "TAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv6.Ipv6RoutingTable"
    },
    {
     "tagAction": "findTagForUpdate",
     "module": "inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator"
    },
    {
     "tagAction": "findTagForUpdate",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.arp.ipv4.GlobalArp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv6.Ipv6RoutingTable"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.networklayer.ipv6.Ipv6RoutingTable"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.ospfv3.Ospfv3Splitter"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.arp.ipv4.GlobalArp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.configurator.ipv6.Ipv6FlatNetworkConfigurator"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv6.Ipv6RoutingTable"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ]
  },
  "inet::Ipv6NeighbourAdvertisement": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    }
   ]
  },
  "inet::Ipv6NeighbourSolicitation": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    }
   ]
  },
  "inet::Ipv6RouterAdvertisement": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    }
   ]
  },
  "inet::Ipv6RouterSolicitation": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    }
   ]
  },
  "inet::L3AddressInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.generic.IpvxTrafSink"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.EigrpRtp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.EigrpRtp6"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.EigrpSplitter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::L3AddressReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ldp.Ldp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.generic.IpvxTrafSink"
    },
    {
     "tagAction": "findTag",
     "module": "inet.emulation.transportlayer.udp.ExtLowerUdp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    }
   ]
  },
  "inet::L4PortInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.rip.Rip"
    }
   ]
  },
  "inet::L4PortReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ldp.Ldp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "getTag",
     "module": "inet.emulation.transportlayer.udp.ExtLowerUdp"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::LabelsTag": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.queueing.marker.ContentBasedLabeler"
    },
    {
     "tagAction": "getTag",
     "module": "inet.queueing.classifier.LabelClassifier"
    }
   ]
  },
  "inet::LdpHello": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ldp.Ldp"
    }
   ]
  },
  "inet::LinkStateMsg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.ted.LinkStateRouting"
    }
   ]
  },
  "inet::LMacControlFrame": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.lmac.LMac"
    }
   ]
  },
  "inet::LMacDataFrameHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "action": "removeAtFront",
     "module": "inet.linklayer.lmac.LMac"
    }
   ]
  },
  "inet::LMacHeaderBase": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.lmac.LMac"
    }
   ]
  },
  "inet::MacAddressInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mac.Tx"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    }
   ]
  },
  "inet::MacAddressReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    }
   ]
  },
  "inet::MplsHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.mpls.Mpls"
    }
   ]
  },
  "inet::MulticastReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::NetworkProtocolInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.queueing.filter.RedDropper"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.queueing.filter.RedDropper"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.routing.gpsr.Gpsr"
    }
   ]
  },
  "inet::NextHopAddressReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    }
   ]
  },
  "inet::NextHopForwardingHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "action": "removeAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    }
   ]
  },
  "inet::NextHopInterfaceData": {
   "TAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.nexthop.NextHopRoutingTable"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtStaSimplified"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.arp.ipv4.GlobalArp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv4.Ipv4RoutingTable"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ipv6.Ipv6RoutingTable"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.nexthop.NextHopRoutingTable"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.configurator.nexthop.NextHopNetworkConfigurator"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.nexthop.NextHopRoutingTable"
    }
   ]
  },
  "inet::ospfv2::Ospfv2DatabaseDescriptionPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv2.Ospfv2"
    }
   ]
  },
  "inet::ospfv2::Ospfv2HelloPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv2.Ospfv2"
    }
   ]
  },
  "inet::ospfv2::Ospfv2LinkStateAcknowledgementPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv2.Ospfv2"
    }
   ]
  },
  "inet::ospfv2::Ospfv2LinkStateRequestPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv2.Ospfv2"
    }
   ]
  },
  "inet::ospfv2::Ospfv2LinkStateUpdatePacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv2.Ospfv2"
    }
   ]
  },
  "inet::ospfv2::Ospfv2Packet": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv2.Ospfv2"
    }
   ]
  },
  "inet::ospfv3::Ospfv3DatabaseDescriptionPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ]
  },
  "inet::ospfv3::Ospfv3HelloPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ]
  },
  "inet::ospfv3::Ospfv3LinkStateAcknowledgementPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ]
  },
  "inet::ospfv3::Ospfv3LinkStateRequestPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ]
  },
  "inet::ospfv3::Ospfv3LinkStateUpdatePacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ]
  },
  "inet::ospfv3::Ospfv3Packet": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    }
   ]
  },
  "inet::PacketEventTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.common.PacketDelayer"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.queue.DropTailQueue"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.queue.PacketQueue"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.server.PacketServer"
    }
   ]
  },
  "inet::PacketProtocolTag": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetEncapsulation"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsInserter"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtAp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.portal.Ieee80211Portal"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Igmpv3"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ted.LinkStateRouting"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.generic.IpvxTrafGen"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.rstp.Rstp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ieee8021d.stp.Stp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.loopback.Loopback"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.arp.ipv4.Arp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.common.EchoProtocol"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "tagAction": "addTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "tagAction": "addTag",
     "module": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "tagAction": "addTag",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.MessageDispatcher"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.diffserv.BehaviorAggregateClassifier"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.diffserv.DiffservQueue"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "findTag",
     "module": "inet.queueing.classifier.ContentBasedClassifier"
    },
    {
     "tagAction": "findTag",
     "module": "inet.queueing.common.PacketMultiplexer"
    },
    {
     "tagAction": "findTag",
     "module": "inet.queueing.filter.ContentBasedFilter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.queueing.marker.ContentBasedLabeler"
    },
    {
     "tagAction": "findTag",
     "module": "inet.queueing.marker.ContentBasedTagger"
    },
    {
     "tagAction": "findTag",
     "module": "inet.queueing.scheduler.ContentBasedScheduler"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.ethernet.modular.EthernetFcsChecker"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.ethernet.modular.EthernetMacHeaderInserter"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "tagAction": "getTagForUpdate",
     "module": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.acking.AckingMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.bmac.BMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.common.QosClassifier"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcEpd"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee802154.Ieee802154Mac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee802154.Ieee802154NarrowbandMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.loopback.Loopback"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.diffserv.DscpMarker"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.icmpv6.Ipv6NeighbourDiscovery"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.queueing.filter.RedDropper"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.dsdv.Dsdv"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.EigrpSplitter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv4Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.eigrp.pdms.EigrpIpv6Pdm"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv2.Ospfv2"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv3.Ospfv3Splitter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.ospfv3.process.Ospfv3Process"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.pim.PimSplitter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.protocolelement.transceiver.PacketTransmitter"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::PcpInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    }
   ]
  },
  "inet::PcpReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    }
   ]
  },
  "inet::physicallayer::EthernetPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderInserter"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ieee8021as.Gptp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetCsmaMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ethernet.basic.EthernetMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wired.ethernet.EthernetPhyHeaderChecker"
    }
   ]
  },
  "inet::physicallayer::Ieee80211ChannelInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    }
   ]
  },
  "inet::physicallayer::Ieee80211ChannelReq": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    }
   ]
  },
  "inet::physicallayer::Ieee80211DsssPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    }
   ]
  },
  "inet::physicallayer::Ieee80211HrDsssPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    }
   ]
  },
  "inet::physicallayer::Ieee80211HtPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    }
   ]
  },
  "inet::physicallayer::Ieee80211ModeInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "getTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    }
   ]
  },
  "inet::physicallayer::Ieee80211ModeReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Dcf"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.mac.coordinationfunction.Hcf"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    }
   ]
  },
  "inet::physicallayer::Ieee80211OfdmPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    }
   ]
  },
  "inet::PimAssert": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    }
   ]
  },
  "inet::PimGraft": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    }
   ]
  },
  "inet::PimHello": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    }
   ]
  },
  "inet::PimJoinPrune": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    }
   ]
  },
  "inet::PimPacket": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimDm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.PimSplitter"
    }
   ]
  },
  "inet::PimRegister": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "popAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    }
   ]
  },
  "inet::PimRegisterStop": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.pim.modes.PimSm"
    }
   ]
  },
  "inet::PppHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.ppp.Ppp"
    }
   ]
  },
  "inet::PppTrailer": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "action": "peekAtBack",
     "module": "inet.linklayer.ppp.Ppp"
    },
    {
     "action": "popAtBack",
     "module": "inet.linklayer.ppp.Ppp"
    }
   ]
  },
  "inet::ProbabilisticBroadcastHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    }
   ]
  },
  "inet::ProcessingTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.server.PacketServer"
    }
   ]
  },
  "inet::PropagationTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.protocolelement.transceiver.PacketTransmitter"
    }
   ]
  },
  "inet::QueueingTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "addTagsWhereAbsent",
     "module": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.linklayer.ethernet.common.EthernetQueue"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.linklayer.ieee80211.mac.queue.PendingQueue"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.flow.FlowMeasurementRecorder"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.flow.FlowMeasurementStarter"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.queue.DropTailQueue"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.queueing.queue.PacketQueue"
    }
   ]
  },
  "inet::RateTag": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.queueing.meter.ExponentialRateMeter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.queueing.filter.StatisticalRateLimiter"
    }
   ]
  },
  "inet::ResidenceTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "addTagsWhereAbsent",
     "module": "inet.common.ResidenceTimeMeasurer"
    },
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.common.ResidenceTimeMeasurer"
    },
    {
     "tagAction": "mapAllTags",
     "module": "inet.common.ResidenceTimeMeasurer"
    },
    {
     "tagAction": "removeTagsWherePresent",
     "module": "inet.common.ResidenceTimeMeasurer"
    }
   ]
  },
  "inet::RipPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.routing.rip.Rip"
    },
    {
     "action": "peekAtFront",
     "module": "inet.routing.rip.Rip"
    }
   ]
  },
  "inet::RsvpHelloMsg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    }
   ]
  },
  "inet::RsvpMessage": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    }
   ]
  },
  "inet::RsvpPathError": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    }
   ]
  },
  "inet::RsvpPathMsg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    }
   ]
  },
  "inet::RsvpPathTear": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    }
   ]
  },
  "inet::RsvpResvMsg": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    },
    {
     "action": "removeAtFront",
     "module": "inet.networklayer.rsvpte.RsvpTe"
    }
   ]
  },
  "inet::rtp::RtcpByePacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.rtp.Rtcp"
    }
   ]
  },
  "inet::rtp::RtcpPacket": {
   "CHUNK_USAGE": [
    {
     "action": "popAtFront",
     "module": "inet.transportlayer.rtp.Rtcp"
    }
   ]
  },
  "inet::rtp::RtcpReceiverReportPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.rtp.Rtcp"
    }
   ]
  },
  "inet::rtp::RtcpSdesPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.rtp.Rtcp"
    }
   ]
  },
  "inet::rtp::RtcpSenderReportPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.rtp.Rtcp"
    }
   ]
  },
  "inet::rtp::RtpHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.rtp.RtpAvProfilePayload32Sender"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.rtp.Rtp"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.rtp.RtpAvProfile"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.rtp.RtpAvProfilePayload32Receiver"
    },
    {
     "action": "popAtFront",
     "module": "inet.transportlayer.rtp.RtpAvProfilePayload32Receiver"
    }
   ]
  },
  "inet::rtp::RtpMpegHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.rtp.RtpAvProfilePayload32Sender"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.rtp.RtpAvProfilePayload32Receiver"
    }
   ]
  },
  "inet::SctpAvailableReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.sctpapp.SctpServer"
    }
   ]
  },
  "inet::SctpCommandReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    }
   ]
  },
  "inet::SctpConnectReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.sctpapp.SctpServer"
    }
   ]
  },
  "inet::SctpInfoReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    }
   ]
  },
  "inet::SctpOpenReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    }
   ]
  },
  "inet::SctpRcvReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.sctpapp.SctpServer"
    }
   ]
  },
  "inet::SctpResetReq": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    }
   ]
  },
  "inet::sctp::SctpHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "action": "removeAtFront",
     "module": "inet.transportlayer.sctp.SctpCrcInsertion"
    }
   ]
  },
  "inet::SctpSendQueueAbatedReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    }
   ]
  },
  "inet::SctpSendReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "findTagForUpdate",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.sctp.Sctp"
    }
   ]
  },
  "inet::SequenceChunk": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.lmac.LMac"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.icmpv6.Icmpv6"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ipv4.Icmp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "action": "insertAtBack",
     "module": "inet.routing.pim.modes.PimSm"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "Packet",
     "module": "inet.linklayer.ieee80211.mac.Ds"
    },
    {
     "action": "Packet",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    }
   ]
  },
  "inet::SequenceNumberInd": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    }
   ]
  },
  "inet::ShortcutMacHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.shortcut.ShortcutMac"
    }
   ]
  },
  "inet::ShortcutPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.shortcut.ShortcutRadio"
    }
   ]
  },
  "inet::SignalBandReq": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    }
   ]
  },
  "inet::SignalBitrateReq": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    }
   ]
  },
  "inet::SignalPowerInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee80211.mgmt.Ieee80211MgmtSta"
    }
   ]
  },
  "inet::SignalPowerReq": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    }
   ]
  },
  "inet::SignalTimeInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    }
   ]
  },
  "inet::SimpleVoipPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "action": "peekAtFront",
     "module": "inet.applications.voip.SimpleVoipReceiver"
    }
   ]
  },
  "inet::SliceChunk": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtBack",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.originator.OriginatorQosMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.linklayer.ieee80211.mac.recipient.RecipientQosMacDataService"
    },
    {
     "action": "insertAtBack",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "action": "insertAtBack",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "Packet",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    }
   ]
  },
  "inet::SnirInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.bitlevel.ApskLayeredScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.common.medium.RadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211LayeredScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadioMedium"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskDimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.apsk.packetlevel.ApskScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.bitlevel.Ieee80211OfdmRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211DimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211Radio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211ScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee80211.packetlevel.Ieee80211UnitDiskRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandDimensionalRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.ieee802154.packetlevel.Ieee802154NarrowbandScalarRadio"
    },
    {
     "tagAction": "findTag",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ]
  },
  "inet::SocketInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "addTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpServerListener"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.tunapp.TunnelApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpSink"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.voip.SimpleVoipReceiver"
    },
    {
     "tagAction": "findTag",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.MessageDispatcher"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "findTag",
     "module": "inet.networklayer.ldp.Ldp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "findTag",
     "module": "inet.routing.bgpv4.Bgp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.tunapp.TunnelApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ldp.Ldp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.routing.bgpv4.Bgp"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    }
   ]
  },
  "inet::SocketReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.dhcp.DhcpServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherAppClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherAppServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.ethernet.EtherTrafGen"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.pingapp.PingApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.sctpapp.SctpClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpBasicClientApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpClientSocketIo"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpServerListener"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpServerSocketIo"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpSessionApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TcpSinkApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tcpapp.TelnetApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.tunapp.TunnelApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpBasicBurst"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpEchoApp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpSink"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpSocketIo"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamClient"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.udpapp.UdpVideoStreamServer"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voip.SimpleVoipReceiver"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voip.SimpleVoipSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ldp.Ldp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.aodv.Aodv"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.bgpv4.Bgp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.routing.rip.Rip"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.rtp.Rtp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.netperfmeter.NetPerfMeter"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.sctpapp.SctpServer"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.applications.tcpapp.TcpGenericServerApp"
    },
    {
     "tagAction": "findTag",
     "module": "inet.common.MessageDispatcher"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.tcpapp.TcpEchoApp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.emulation.transportlayer.udp.ExtLowerUdp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee80211.llc.Ieee80211LlcLpd"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8021q.Ieee8021qSocketCommandProcessor"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.ieee8022.Ieee8022Llc"
    },
    {
     "tagAction": "getTag",
     "module": "inet.linklayer.tun.Tun"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.flooding.Flooding"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.ipv6.Ipv6"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.nexthop.NextHopForwarding"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.AdaptiveProbabilisticBroadcast"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.probabilistic.ProbabilisticBroadcast"
    },
    {
     "tagAction": "getTag",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "getTag",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "removeTag",
     "module": "inet.transportlayer.udp.Udp"
    }
   ]
  },
  "inet::StreamInd": {
   "STAG_USAGE": [
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    }
   ]
  },
  "inet::tcp::TcpHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "action": "popAtFront",
     "module": "inet.common.packet.recorder.PcapRecorder"
    },
    {
     "action": "removeAtFront",
     "module": "inet.transportlayer.tcp_common.TcpCrcInsertionHook"
    },
    {
     "action": "removeAtFront",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    }
   ]
  },
  "inet::TosInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.networklayer.ipv6.Ipv6"
    }
   ]
  },
  "inet::TosReq": {
   "STAG_USAGE": [
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv4.Ipv4"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.networklayer.ipv6.Ipv6"
    }
   ]
  },
  "inet::TransmissionTimeTag": {
   "RTAG_USAGE": [
    {
     "tagAction": "mapAllTagsForUpdate",
     "module": "inet.protocolelement.transceiver.PacketTransmitter"
    }
   ]
  },
  "inet::TransportProtocolInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.sctp.Sctp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.Tcp"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.tcp.TcpConnection"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "tagAction": "addTag",
     "module": "inet.transportlayer.tcp_lwip.TcpLwip"
    },
    {
     "tagAction": "getTag",
     "module": "inet.applications.tunapp.TunnelApp"
    }
   ]
  },
  "inet::UdpHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "action": "insertAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "insertAtFront",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    },
    {
     "action": "peekAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "action": "peekDataAt",
     "module": "inet.linklayer.common.QosClassifier"
    },
    {
     "action": "peekDataAt",
     "module": "inet.networklayer.mpls.Mpls"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.diffserv.MultiFieldClassifier"
    },
    {
     "action": "popAtFront",
     "module": "inet.routing.dymo.Dymo"
    },
    {
     "action": "popAtFront",
     "module": "inet.routing.gpsr.Gpsr"
    },
    {
     "action": "popAtFront",
     "module": "inet.transportlayer.udp.Udp"
    },
    {
     "action": "removeAtFront",
     "module": "inet.transportlayer.udp.UdpCrcInsertionHook"
    }
   ]
  },
  "inet::UnitDiskPhyHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "action": "insertAtFront",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.configurator.ipv4.Ipv4NetworkConfigurator"
    },
    {
     "action": "peekAtFront",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadioMedium"
    },
    {
     "action": "popAtFront",
     "module": "inet.physicallayer.wireless.unitdisk.UnitDiskRadio"
    }
   ]
  },
  "inet::UserPriorityInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    }
   ]
  },
  "inet::UserPriorityReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.common.ExampleQosClassifier"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.common.QosClassifier"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.csmaca.CsmaCaMac"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee80211.mac.Ieee80211Mac"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    }
   ]
  },
  "inet::VlanInd": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderChecker"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.MacRelayUnit"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceLearner"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8021d.relay.Ieee8021dRelay"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ieee8021q.Ieee8021qSocketPacketProcessor"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.vlan.VlanIndFilter"
    }
   ]
  },
  "inet::VlanReq": {
   "STAG_USAGE": [
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.virtual.VirtualTunnel"
    },
    {
     "tagAction": "addTagIfAbsent",
     "module": "inet.linklayer.vlan.VlanReqMapper"
    },
    {
     "tagAction": "addTag",
     "module": "inet.linklayer.ethernet.common.PacketDirectionReverser"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.ethernet.common.RelayInterfaceSelector"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.vlan.VlanReqFilter"
    },
    {
     "tagAction": "findTag",
     "module": "inet.linklayer.vlan.VlanReqMapper"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.ieee8021q.Ieee8021qTagEpdHeaderInserter"
    },
    {
     "tagAction": "removeTagIfPresent",
     "module": "inet.linklayer.vlan.VlanReqMapper"
    }
   ]
  },
  "inet::VoipStreamPacket": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.applications.voipstream.VoipStreamSender"
    },
    {
     "action": "peekAtFront",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    },
    {
     "action": "popAtFront",
     "module": "inet.applications.voipstream.VoipStreamReceiver"
    }
   ]
  },
  "inet::WiseRouteHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "action": "peekAtFront",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    },
    {
     "action": "popAtFront",
     "module": "inet.networklayer.wiseroute.WiseRoute"
    }
   ]
  },
  "inet::XMacControlFrame": {
   "CHUNK_USAGE": [
    {
     "action": "Packet",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.xmac.XMac"
    }
   ]
  },
  "inet::XMacDataFrameHeader": {
   "CHUNK_USAGE": [
    {
     "action": "insertAtFront",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.xmac.XMac"
    },
    {
     "action": "popAtFront",
     "module": "inet.linklayer.xmac.XMac"
    }
   ]
  },
  "inet::XMacHeaderBase": {
   "CHUNK_USAGE": [
    {
     "action": "peekAtFront",
     "module": "inet.linklayer.xmac.XMac"
    }
   ]
  }
 }
}

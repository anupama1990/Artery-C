name: Build and tests

on:
  schedule:
    - cron: "0 21 * * 1-5" # https://crontab.guru/#0_21_*_*_1-5 : "At 21:00 on every day-of-week from Monday through Friday."
  # push:
  #   branches:
  #     - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    # nothing

jobs:
  activity-check:
    name: Activity check
    runs-on: ubuntu-latest
    outputs:
      is_active: ${{ steps.activity.outputs.is_active }}

    steps:
      - uses: actions/checkout@v3
      - name: Check for repo activity
        id: activity
        run: |
          # Skip activity check when manually triggered.
          if [ "${{ github.event_name }}" == "repository_dispatch" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            is_active=true
          elif [ "$(git rev-list --after="24 hours" ${{ github.sha }})" ]; then
            is_active=true
          else
            is_active=false
          fi
          echo "is_active=$is_active" >> $GITHUB_OUTPUT

  build-native:
    needs: activity-check
    if: needs.activity-check.outputs.is_active == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: ["debug", "release"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Pull Docker image
        run: docker pull ghcr.io/inet-framework/ci-inet:6.0.1-230320
      - run: mkdir /home/runner/work/ccache
      - uses: actions/cache@v3
        with:
          path: /home/runner/work/ccache
          key: native-${{ matrix.mode }}-ccache-${{ github.run_id }}
          # See: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
          restore-keys: native-${{ matrix.mode }}-ccache
      - name: Build (native)
        run: |
          docker run -i --env TARGET_PLATFORM=linux --env MODE=${{ matrix.mode }} --env GITHUB_WORKSPACE \
            -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE -v /home/runner/work/ccache:/root/.ccache \
            ghcr.io/inet-framework/ci-inet:6.0.1-230320 /bin/bash $GITHUB_WORKSPACE/_scripts/github/github-job-build.sh
      - uses: actions/upload-artifact@v3
        with:
          name: libinet-so
          path: ${{ github.workspace }}/src/libINET*.so

  build-cross:
    needs: activity-check
    if: needs.activity-check.outputs.is_active == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["windows", "macosx"]
        mode: ["debug", "release"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Pull Docker image
        run: docker pull ghcr.io/inet-framework/ci-inet:6.0.1-230320
      - run: mkdir /home/runner/work/ccache
      - uses: actions/cache@v3
        with:
          path: /home/runner/work/ccache
          # See: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
          key: cross-${{ matrix.target }}-${{ matrix.mode }}-ccache-${{ github.run_id }}
          restore-keys: cross-${{ matrix.target }}-${{ matrix.mode }}-ccache
      - name: Build (cross)
        run: |
          docker run -i --env TARGET_PLATFORM=${{ matrix.target }} --env MODE=${{ matrix.mode }} --env GITHUB_WORKSPACE \
            -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE -v /home/runner/work/ccache:/root/.ccache \
            ghcr.io/inet-framework/ci-inet:6.0.1-230320 /bin/bash $GITHUB_WORKSPACE/_scripts/github/github-job-build.sh

  fingerprints:
    needs: build-native
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: ["debug", "release"]
        split: [0, 1, 2, 3]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: libinet-so
          path: ${{ github.workspace }}/src/
      - name: Pull Docker image
        run: docker pull ghcr.io/inet-framework/ci-inet:6.0.1-230320
      - name: Fingerprint tests
        run: |
          docker run -i --env MODE=${{ matrix.mode }} --env GITHUB_WORKSPACE --env SPLIT_N=4 --env SPLIT_I=${{ matrix.split }} \
            -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
            ghcr.io/inet-framework/ci-inet:6.0.1-230320 /bin/bash $GITHUB_WORKSPACE/_scripts/github/github-job-fingerprints.sh

  other-tests:
    needs: build-native
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: add debug/release mode when the runtest scripts can switch between
        # MODEs or executables based on command line arguments or envvars
        testdir: ["module", "unit", "packet", "queueing", "protocol"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: libinet-so
          path: ${{ github.workspace }}/src/
      - name: Pull Docker image
        run: docker pull ghcr.io/inet-framework/ci-inet:6.0.1-230320
      - name: Run ${{ matrix.testdir }} tests
        run: |
          docker run -i --env MODE=debug --env GITHUB_WORKSPACE --env TESTDIR=${{ matrix.testdir }} \
            -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
            ghcr.io/inet-framework/ci-inet:6.0.1-230320 /bin/bash $GITHUB_WORKSPACE/_scripts/github/github-job-other-tests.sh

  more-tests:
    needs: build-native
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scriptname: [
          #"inet_run_feature_tests", # takes way too long, and redundant
          #"inet_run_module_tests", # redundant
          #"inet_run_queueing_tests", # redundant
          #"inet_run_speed_tests", # empty
          #"inet_run_unit_tests", # redundant
          #"inet_run_chart_tests", # this should be enabled!
          #"inet_run_fingerprint_tests", # takes way too long, and redundant
          #"inet_run_protocol_tests", # redundant
          #"inet_run_sanitizer_tests", # this should be enabled?
          #"inet_run_smoke_tests", # this should be enabled?
          #"inet_run_statistical_tests", # empty
          "inet_run_validation_tests",
        ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: libinet-so
          path: ${{ github.workspace }}/src/
      - name: Pull Docker image
        run: docker pull ghcr.io/inet-framework/ci-inet:6.0.1-230320
      - name: Run ${{ matrix.scriptname }}
        run: |
          docker run -i --env MODE=debug --env GITHUB_WORKSPACE --env SCRIPTNAME=${{ matrix.scriptname }} \
            -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
            ghcr.io/inet-framework/ci-inet:6.0.1-230320 /bin/bash $GITHUB_WORKSPACE/_scripts/github/github-job-inet_run-tests.sh
